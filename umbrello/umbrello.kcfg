<?xml version="1.0" encoding="UTF-8"?>
<kcfg xmlns="http://www.kde.org/standards/kcfg/1.0"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.kde.org/standards/kcfg/1.0
      http://www.kde.org/standards/kcfg/1.0/kcfg.xsd" >
  <include>basictypes.h</include> 
  <include>codegenerationpolicy.h</include>
  <include>codegenerators/cpp/cppcodegenerationpolicy.h</include>
  <kcfgfile name="umbrellorc"/>
    <group name="General Options">
       <entry name="Geometry" type="Size">
         <label>Geometry</label>
         <whatsthis>Geometry</whatsthis>
         <default></default>
       </entry>
       <entry name="imageMimeType" type="String">
         <label>Image Mime Type</label>
         <whatsthis>The Mime Type of the Images</whatsthis>
         <default>image/png</default>
       </entry>
       <entry name="undo" type="Bool">
         <label>Undo Support</label>
         <whatsthis>Undo Support is enabled when this is true</whatsthis>
         <default>true</default>
       </entry>
       <entry name="tabdiagrams" type="Bool">
         <label>Tabbed Diagrams</label>
         <whatsthis>Enables/Disables Tabbed View of Diagrams in the view area</whatsthis>
         <default>true</default>
       </entry>
       <entry name="newcodegen" type="Bool">
         <label>New Code Generator</label>
         <whatsthis>Enables/Disables Support for the New Code Generator</whatsthis>
         <default>false</default>
       </entry>
       <entry name="layoutType" type="Enum">
         <label>Layout Type</label>
         <whatsthis>The layout type to use for new lines</whatsthis>
         <choices name="Uml::LayoutType::Enum">
            <choice name="Undefined"/>
            <choice name="Direct"/>
            <choice name="Orthogonal"/>
            <choice name="Polyline"/>
            <choice name="Spline"/>
            <choice name="N_LAYOUTTYPES"/>
         </choices>
         <default>Uml::LayoutType::Direct</default>
       </entry>
       <entry name="footerPrinting" type="Bool">
         <label>Footer Printing</label>
         <whatsthis>Enables/Disables Support for footer printing</whatsthis>
         <default>true</default>
       </entry>
       <entry name="autosave" type="Bool">
         <label>Auto Save</label>
         <whatsthis>Enables/Disables Auto Saving at Regular Intervals</whatsthis>
         <default>true</default>
       </entry>
       <entry name="time" type="Int">
         <label>Auto Save Time ( Old )</label>
         <whatsthis>Auto Save Time Interval ( Old )</whatsthis>
         <default>0</default>
         <min>0</min>
         <max>25</max>
       </entry>
       <entry name="autosavetime" type="Int">
         <label></label>
         <whatsthis></whatsthis>
         <default>0</default>
         <min>0</min>
         <max>25</max>
       </entry>
       <entry name="autosavesuffix" type="String">
         <label>Auto Save Suffix</label>
         <whatsthis>The Suffix for the auto save file</whatsthis>
         <default>.xmi</default>
       </entry>
       <entry name="loadlast" type="Bool">
         <label>Load Last</label>
         <whatsthis>Enables/Disables Loading of the last open file</whatsthis>
         <default>false</default>
       </entry>
       <entry name="diagram" type="Enum">
         <label>Diagram To Load at Startup</label>
         <whatsthis>The Diagram to load at startup</whatsthis>
         <choices name="Uml::DiagramType::Enum">
            <choice name="Undefined" />
            <choice name="Class" />
            <choice name="UseCase" />
            <choice name="Sequence" />
            <choice name="Collaboration" />
            <choice name="State" />
            <choice name="Activity" />
            <choice name="Component" />
            <choice name="Deployment" />
            <choice name="EntityRelationship" />
            <choice name="N_DIAGRAMTYPES" />
         </choices>
         <default>Uml::DiagramType::Class</default>
       </entry>
       <entry name="defaultLanguage" type="Enum">
         <label>Default Language at Startup</label>
         <whatsthis>The Language that Umbrello should start with by default</whatsthis>
         <choices name="Uml::ProgrammingLanguage::Enum">
            <choice name="ActionScript" />
            <choice name="Ada" />
            <choice name="Cpp" />
            <choice name="CSharp" />
            <choice name="D" />
            <choice name="IDL" />
            <choice name="Java" />
            <choice name="JavaScript" />
            <choice name="MySQL" />
            <choice name="Pascal" />
            <choice name="Perl" />
            <choice name="PHP" />
            <choice name="PHP5" />
            <choice name="PostgreSQL" />
            <choice name="Python" />
            <choice name="Ruby" />
            <choice name="SQL" />
            <choice name="Tcl" />
            <choice name="Vala" />
            <choice name="XMLSchema" />
            <choice name="Reserved" />
         </choices>
         <default>Uml::ProgrammingLanguage::Cpp</default>
       </entry>
       <entry name="lastFile" type="String">
         <label></label>
         <whatsthis></whatsthis>
         <default></default>
       </entry>
       <entry name="uml2" type="Bool">
         <label>Use UML-2.x Notation</label>
         <whatsthis>Enables/Disables UML2 notation</whatsthis>
         <default>true</default>
       </entry>
    </group>
    <group name="UI Options">
       <entry name="useFillColor" type="Bool">
         <label>Use Fill Color</label>
         <whatsthis>Enables/Disables usage of fill color</whatsthis>
         <default>true</default>
       </entry>
       <entry name="fillColor" type="Color">
         <label>Fill Color</label>
         <whatsthis>The Fill Color to be used</whatsthis>
         <default>#ffffc0</default>
       </entry>
       <entry name="lineColor" type="Color">
         <label>Line Color</label>
         <whatsthis>The Color of the Lines</whatsthis>
         <default>#990000</default>
       </entry>
       <entry name="lineWidth" type="UInt">
         <label>Line Width</label>
         <whatsthis>The Width of the Line</whatsthis>
         <default>0</default>
       </entry>
       <entry name="textColor" type="Color">
         <label>Text Color</label>
         <whatsthis>The Color of the Text</whatsthis>
         <default>black</default>
       </entry>
       <entry name="showDocWindow" type="Bool">
         <label>Show Doc Window</label>
         <whatsthis>Enables/Disables showing of the doc window</whatsthis>
         <default>true</default>
       </entry>
       <entry name="uiFont" key="font" type="Font">
         <label>Font</label>
         <whatsthis>The Font to be used</whatsthis>
         <default code="true">Uml::systemFont()</default>
       </entry>
       <entry name="backgroundColor" type="Color">
         <label>Background Color</label>
         <whatsthis>The Color of the diagram background</whatsthis>
         <default>white</default>
       </entry>
       <entry name="gridDotColor" type="Color">
         <label>Grid Dot Color</label>
         <whatsthis>The Color of the grid dots</whatsthis>
         <default>lightGray</default>
       </entry>
       <entry name="rightToLeftUI" type="Bool">
         <label>Right to left user interface</label>
         <whatsthis>Enable/disable user interface direction from right to left</whatsthis>
         <default>false</default>
       </entry>
   </group>
   <group name ="Class Options">
       <entry name="showVisibility" type="Bool">
         <label>Show Visibility</label>
         <whatsthis>Show the Visibility of the Attributes ( eg: private, public, protected)</whatsthis>
         <default>true</default>
       </entry>
       <entry name="showAtts" type="Bool">
         <label>Show Attributes</label>
         <whatsthis>Show attributes of the class</whatsthis>
         <default>true</default>
       </entry>
       <entry name="showOps" type="Bool">
         <label>Show Operations</label>
         <whatsthis>Show Operations</whatsthis>
         <default>true</default>
       </entry>
       <entry name="showPackage" type="Bool">
          <label>Show Package</label>
          <whatsthis>Enables/Disables showing of packages</whatsthis>
          <default>true</default>
       </entry> 
       <entry name="showStereoType" type="Enum">
         <label>Show Stereotypes</label>
         <whatsthis>Show Stereotypes</whatsthis>
         <choices name="Uml::ShowStereoType::Enum">
            <choice name="None"/>
            <choice name="Name"/>
            <choice name="Tags"/>
         </choices>
         <default>Uml::ShowStereoType::Tags</default>
       </entry>
       <entry name="showAttribAssocs" type="Bool">
         <label>Show Attribute Associations</label>
         <whatsthis>Show Attribute Associations</whatsthis>
         <default>true</default>
       </entry>
       <entry name="showPublicOnly" type="Bool">
          <label>Show Public Only</label>
          <whatsthis>Enables/Disables showing of public attributes/methods</whatsthis>
          <default>false</default>
       </entry> 
       <entry name="showAttSig" type="Bool">
         <label>Show Attribute Signature</label>
         <whatsthis>Show Attribute Signature</whatsthis>
         <default>true</default>
       </entry>
       <entry name="showOpSig" type="Bool">
         <label>Show Operation Signature</label>
         <whatsthis>Show operation signature</whatsthis>
         <default>true</default>
       </entry>
       <entry name="defaultAttributeScope" type="Enum">
         <label>Default Attribute Scope</label>
         <whatsthis>Default Attribute Scope</whatsthis>
         <choices name="Uml::Visibility::Enum">
            <choice name="Public" />
            <choice name="Private" />
            <choice name="Protected" />
            <choice name="Implementation" />
            <choice name="FromParent" />
         </choices>
         <default>Uml::Visibility::Public</default>
       </entry>
       <entry name="defaultOperationScope" type="Enum">
         <label>Default Operation Scope</label>
         <whatsthis>Default Operation Scope</whatsthis>
         <choices name="Uml::Visibility::Enum">
            <choice name="Public" />
            <choice name="Private" />
            <choice name="Protected" />
            <choice name="Implementation" />
            <choice name="FromParent" />
         </choices>
         <default>Uml::Visibility::Public</default>
       </entry>
   </group>
   <group name="Code Viewer Options">
       <entry name="height" type="Int">
         <label>Height</label>
         <whatsthis>Height of the code viewer</whatsthis>
         <default>40</default>
         <max>100</max>
       </entry>
       <entry name="width" type="Int">
         <label>Width</label>
         <whatsthis>Width of the Code Viewer</whatsthis>
         <default>80</default>
         <max>100</max>
       </entry>
       <entry name="showHiddenBlocks" type="Bool">
         <label>Show Hidden Blocks</label>
         <whatsthis>Show Hidden Blocks</whatsthis>
         <default>true</default>
       </entry>
       <entry name="blocksAreHighlighted" type="Bool">
         <label>Highlight Blocks</label>
         <whatsthis>Enables/Disables Highlighting of blocks</whatsthis>
         <default>true</default>
       </entry>
       <entry name="codeViewerFont" key="font" type="Font">
         <label>Font</label>
         <whatsthis>Font to be used in the Code Viewer</whatsthis>
         <default>Uml::systemFont()</default>
       </entry>
       <entry name="paperColor" type="Color">
         <label>Paper Color</label>
         <whatsthis>Color of the Paper</whatsthis>
         <default>white</default>
       </entry>
       <entry name="fontColor" type="Color">
         <label>Font Color</label>
         <whatsthis>Color of the Font</whatsthis>
         <default>black</default>
       </entry>
       <entry name="selectedColor" type="Color">
         <label>Selected Color</label>
         <whatsthis>Selected Color</whatsthis>
         <default>yellow</default>
       </entry>
       <entry name="editBlockColor" type="Color">
         <label context="Color of the Edit Block">Edit Block Color</label>
         <whatsthis>Color of the Edit Block</whatsthis>
         <default>pink</default>
       </entry>
       <entry name="nonEditBlockColor" type="Color">
         <label>Non Edit Block Color</label>
         <whatsthis>Non Edit Block Color</whatsthis>
         <default>pink</default>
       </entry>
       <entry name="umlObjectColor" type="Color">
         <label>UML Object Color</label>
         <whatsthis>Color of the UML Object</whatsthis>
         <default>grey</default>
       </entry>
       <entry name="hiddenColor" type="Color">
         <label>Hidden Color</label>
         <whatsthis>Hidden Color</whatsthis>
         <default>grey</default>
       </entry>
   </group>
    <group name="Code Importer">
       <entry name="createArtifacts" type="Bool">
         <label>Create Artifacts for imported files</label>
         <whatsthis>Create an artifact in the component view for each imported file</whatsthis>
         <default>true</default>
       </entry>
       <entry name="resolveDependencies" type="Bool">
         <label>Resolve dependencies</label>
         <whatsthis>Resolve dependencies when importing file</whatsthis>
         <default>true</default>
       </entry>
       <entry name="supportCPP11" type="Bool">
         <label>Support C++11 standard</label>
         <whatsthis>Support C++11 standard on code import</whatsthis>
         <default>true</default>
       </entry>
    </group>
   <group name="Code Generation">
       <entry name="autoGenEmptyConstructors" type="Bool">
         <label>Auto Generate Empty Constructors</label>
         <whatsthis>Enables/Disables Auto Generation of Empty Constructors</whatsthis>
         <default>true</default>
       </entry>
       <entry name="commentStyle" type="Enum">
         <label>Comment Style</label>
         <whatsthis>Sets the Style of Comments to be used</whatsthis>
         <choices name="CodeGenerationPolicy::CommentStyle">
            <choice name="SingleLine" />
            <choice name="MultiLine" />
         </choices>
         <default>CodeGenerationPolicy::SingleLine</default>
       </entry>
       <entry name="defaultAssocFieldScope" type="Enum">
         <label>Default Association Field Scope</label>
         <whatsthis>Sets the default Association field scope</whatsthis>
         <choices name="Uml::Visibility::Enum">
            <choice name="Public" />
            <choice name="Private" />
            <choice name="Protected" />
            <choice name="Implementation" />
            <choice name="FromParent" />
         </choices>
         <default>Uml::Visibility::FromParent</default>
       </entry>
       <entry name="defaultAttributeAccessorScope" type="Enum">
         <label>Default Attribute Accessor Scope</label>
         <whatsthis>Sets the default attribute accessor scope</whatsthis>
         <choices name="Uml::Visibility::Enum">
            <choice name="Public" />
            <choice name="Private" />
            <choice name="Protected" />
            <choice name="Implementation" />
            <choice name="FromParent" />
         </choices>
         <default>Uml::Visibility::FromParent</default>
       </entry>
       <entry name="forceDoc" type="Bool">
         <label>Force Documentation</label>
         <whatsthis>Enables/Disables Verbose Documentation</whatsthis>
         <default>true</default>
       </entry>
       <entry name="writeSectionComments" type="Enum">
         <label>Section Comment Policy</label>
         <whatsthis>Whether section comments shall be written</whatsthis>
         <choices name="CodeGenerationPolicy::WriteSectionCommentsPolicy">
            <choice name="None" />
            <choice name="WhenNonEmpty" />
            <choice name="Always" />
         </choices>
         <default>CodeGenerationPolicy::None</default>
       </entry>
       <entry name="headingsDirectory" type="Path">
         <label>Headings Directory</label>
         <whatsthis>The Path in which the headings are stored</whatsthis>
         <default>$HOME/kde/share/apps/umbrello/headings</default>
       </entry>
       <entry name="includeHeadings" type="Bool">
         <label>Include headings</label>
         <whatsthis>Enables/Disables inclusion of headings</whatsthis>
         <default>true</default>
       </entry>
       <entry name="indentationAmount" type="Int">
         <label>Indentation Amount</label>
         <whatsthis>The amount of indentation</whatsthis>
         <default>2</default>
         <max>10</max>
       </entry>
       <entry name="indentationType" type="Enum">
         <label>Indentation Type</label>
         <whatsthis>The Type of Indentation</whatsthis>
         <choices name="CodeGenerationPolicy::IndentationType">
            <choice name="NONE" />
            <choice name="TAB" />
            <choice name="SPACE" />
         </choices>
         <default>CodeGenerationPolicy::SPACE</default>
       </entry>
       <entry name="lineEndingType" type="Enum">
         <label>Line Ending Type</label>
         <whatsthis>The type of line ending ( or new line type )</whatsthis>
         <choices name="CodeGenerationPolicy::NewLineType">
            <choice name="UNIX" />
            <choice name="DOS" />
            <choice name="MAC" />
         </choices>
         <default>CodeGenerationPolicy::UNIX</default>
       </entry>
       <entry name="modnamePolicy" type="Enum">
         <label>Modifier Name Policy</label>
         <whatsthis>Modifier Name Policy</whatsthis>
         <choices name="CodeGenerationPolicy::ModifyNamePolicy">
            <choice name="No" />
            <choice name="Underscore" />
            <choice name="Capitalise" />
          </choices>
          <default>CodeGenerationPolicy::Capitalise</default>
       </entry>
       <entry name="outputDirectory" type="Path">
         <label>Output Directory</label>
         <whatsthis>The directory to which the code has to be outputted</whatsthis>
         <default>$HOME/uml-generated-code</default>
       </entry>
       <entry name="overwritePolicy" type="Enum">
         <label>Overwrite Policy</label>
         <whatsthis>The policy to be followed when there are name conflicts</whatsthis>
         <choices name="CodeGenerationPolicy::OverwritePolicy">
            <choice name="Ok" />
            <choice name="Ask" />
            <choice name="Never" />
            <choice name="Cancel" />
         </choices>
         <default>CodeGenerationPolicy::Ask</default>
       </entry>
    </group>
    <group name="CPP Code Generation">
       <entry name="autoGenAccessors" type="Bool">
         <label>Auto Generate Accessors</label>
         <whatsthis>Enables/Disables auto generation of accessors</whatsthis>
         <default>true</default>
       </entry>
       <entry name="classMemberPrefix" type="String">
         <label>Class member prefix</label>
         <whatsthis>The prefix for class members</whatsthis>
         <default></default>
       </entry>
       <entry name="inlineAccessors" type="Bool">
         <label>Inline Accessors</label>
         <whatsthis>Enables/Disables Inline accessors</whatsthis>
         <default>true</default>
       </entry>
       <entry name="inlineOps" type="Bool">
         <label>Inline operations</label>
         <whatsthis>Enables/Disables Inline Operations</whatsthis>
         <default>true</default>
       </entry>
       <entry name="packageIsNamespace" type="Bool">
         <label>Package is namespace</label>
         <whatsthis>Enables/Disables treating a package as a namespace</whatsthis>
         <default>true</default>
       </entry>
       <entry name="publicAccessors" type="Bool">
         <label>Public Accessors</label>
         <whatsthis>Enables/Disables public accessors</whatsthis>
         <default>true</default>
       </entry>
       <entry name="stringClassName" type="String">
         <label>String Class Name</label>
         <whatsthis>The name of the string class</whatsthis>
         <default>std::string</default>
       </entry>
       <entry name="stringClassNameInclude" type="String">
         <label>String Class Name Include</label>
         <whatsthis>The name of the string class to be included</whatsthis>
         <default>&lt;string&gt;</default>
       </entry>
       <entry name="stringIncludeIsGlobal" type="Bool">
         <label>String Include is Global</label>
         <whatsthis>Enables/Disables global inclusion of string</whatsthis>
         <default>true</default>
       </entry>
       <entry name="vectorClassName" type="String">
         <label>Vector Class Name</label>
         <whatsthis>The name of the vector class</whatsthis>
         <default>std::vector</default>
       </entry>
       <entry name="vectorClassNameInclude" type="String">
         <label>Vector Class Name Include</label>
         <whatsthis>The name of the vector class to be included</whatsthis>
         <default>&lt;vector&gt;</default>
       </entry>
       <entry name="vectorIncludeIsGlobal" type="Bool">
         <label>Vector include is global</label>
         <whatsthis>Enables/Disables global inclusion of vector class</whatsthis>
         <default>true</default>
       </entry>
       <entry name="virtualDestructors" type="Bool">
         <label>Virtual Destructors</label>
         <whatsthis>Enables/Disables virtual destructors</whatsthis>
         <default>true</default>
       </entry>
       <entry name="getterWithGetPrefix" type="Bool">
         <label>Getters with 'get' prefix</label>
         <whatsthis>If enabled, create getters with 'get' prefix</whatsthis>
         <default>true</default>
       </entry>
       <entry name="removePrefixFromAccessorMethods" type="Bool">
         <label>Remove prefix '[a-zA-Z]_' from accessor methods</label>
         <whatsthis>If enabled, remove prefix '[a-zA-Z]_' from accessor methods</whatsthis>
         <default>false</default>
       </entry>
       <entry name="accessorMethodsStartWithUpperCase" type="Bool">
         <label>Accessor methods start with capital letters</label>
         <whatsthis>If enabled, accessor methods start with capital letters</whatsthis>
         <default>true</default>
       </entry>
       <entry name="docToolTag" type="String">
         <label>Documentation tags</label>
         <whatsthis>The tag used for generating doxygen documentation (\\, @)</whatsthis>
         <default>@</default>
       </entry>
    </group>
    <group name="D Code Generation">
       <entry name="autoGenerateAttributeAccessorsD" key="autoGenerateAttributeAccessors" type="Bool">
          <label>Auto Generate Attribute Accessors ( D )</label>
          <whatsthis>Enables/Disables auto generation of attribute accessors ( D )</whatsthis>
          <default>true</default>
       </entry>
       <entry name="autoGenerateAssocAccessorsD" key="autoGenerateAssocAccessors" type="Bool">
          <label>Auto Generate Assoc Accessors ( D )</label>
          <whatsthis>Enables/Disables auto generation of association accessors ( D )</whatsthis>
          <default>true</default>
       </entry>
       <entry name="buildANTDocumentD" key="buildANTDocument" type="Bool">
          <label>Build ANT Document (D)</label>
          <whatsthis>Enables/Disables building of ANT Document (D)</whatsthis>
          <default>false</default> 
       </entry>
    </group>
    <group name="Java Code Generation">
       <entry name="autoGenerateAttributeAccessorsJava" key="autoGenerateAttributeAccessors" type="Bool">
          <label>Auto Generate Attribute Accessors (Java)</label>
          <whatsthis>Enables/Disables auto generation of attribute accessors (Java)</whatsthis>
          <default>true</default>
       </entry>
       <entry name="autoGenerateAssocAccessorsJava" key="autoGenerateAssocAccessors" type="Bool">
          <label>Auto Generate Assoc Accessors (Java)</label>
          <whatsthis>Enables/Disables auto generation of association accessors (Java)</whatsthis>
          <default>true</default>
       </entry>
       <entry name="buildANTDocumentJava" key="buildANTDocument" type="Bool">
          <label>Build ANT Document (Java)</label>
          <whatsthis>Enables/Disables building of ANT Document (Java)</whatsthis>
          <default>false</default> 
       </entry>
    </group>
    <group name="Ruby Code Generation">
       <entry name="autoGenerateAttributeAccessorsRuby" key="autoGenerateAttributeAccessors" type="Bool">
          <label>Auto Generate Attribute Accessors (Ruby)</label>
          <whatsthis>Enables/Disables auto generation of attribute accessors (Ruby)</whatsthis>
          <default>true</default>
       </entry>
       <entry name="autoGenerateAssocAccessorsRuby" key="autoGenerateAssocAccessors" type="Bool">
          <label>Auto Generate Assoc Accessors (Ruby)</label>
          <whatsthis>Enables/Disables auto generation of association accessors (Ruby)</whatsthis>
          <default>true</default>
       </entry>
    </group>    
    <group name="Auto Layout">
        <entry name="autoDotPath" type="Bool">
            <label>Automatic Dot Path</label>
            <whatsthis>determine automatically the path of dot executable</whatsthis>
            <default>true</default>
        </entry>
        <entry name="dotPath" type="String">
            <label>Dot Path</label>
            <whatsthis>set path to dot executable (optional)</whatsthis>
            <default></default>
        </entry>
        <entry name="showExportLayout" type="Bool">
            <label>Show Export Layout</label>
            <whatsthis>show export layout</whatsthis>
            <default>false</default>
        </entry>
    </group>
</kcfg>

