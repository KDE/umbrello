<?xml version="1.0" encoding="UTF-8"?>
<XMI verified="false" xmi.version="1.2" timestamp="2008-09-16T22:26:23" xmlns:UML="http://schema.omg.org/spec/UML/1.3" >
 <XMI.header>
  <XMI.documentation>
   <XMI.exporter>umbrello uml modeller http://umbrello.kde.org</XMI.exporter>
   <XMI.exporterVersion>1.5.8</XMI.exporterVersion>
   <XMI.exporterEncoding>UnicodeUTF8</XMI.exporterEncoding>
  </XMI.documentation>
  <XMI.metamodel xmi.version="1.3" href="UML.xml" xmi.name="UML" />
 </XMI.header>
 <XMI.content>
  <UML:Model isSpecification="false" isAbstract="false" isLeaf="false" xmi.id="m1" isRoot="false" name="UML Model" >
   <UML:Namespace.ownedElement>
    <UML:Stereotype visibility="public" isSpecification="false" namespace="m1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="folder" name="folder" />
    <UML:Stereotype visibility="public" isSpecification="false" namespace="m1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="datatype" name="datatype" />
    <UML:Stereotype visibility="public" isSpecification="false" namespace="m1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="constructor" name="constructor" />
    <UML:Stereotype visibility="public" isSpecification="false" namespace="m1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="friend" name="friend" />
    <UML:Stereotype visibility="public" isSpecification="false" namespace="m1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="virtual" name="virtual" />
    <UML:Stereotype visibility="public" isSpecification="false" namespace="m1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="QtCore" name="QtCore" />
    <UML:Stereotype visibility="public" isSpecification="false" namespace="m1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="interface" name="interface" />
    <UML:Stereotype visibility="public" isSpecification="false" namespace="m1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="obsolete" name="obsolete" />
    <UML:Stereotype visibility="public" isSpecification="false" namespace="m1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="enum" name="enum" />
    <UML:Stereotype visibility="public" isSpecification="false" namespace="m1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="dialog" name="dialog" />
    <UML:Stereotype visibility="public" isSpecification="false" namespace="m1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="typedef" name="typedef" />
    <UML:Model stereotype="folder" visibility="public" isSpecification="false" namespace="m1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Logical View" name="Logical View" >
     <UML:Namespace.ownedElement>
      <UML:Package stereotype="folder" visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Datatypes" name="Datatypes" >
       <UML:Namespace.ownedElement>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="p9rIb5vfrY7b" name="int" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Rs31k0HwkeRr" name="char" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="8c3ctJdhRSz0" name="bool" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="XtgMRlvtdzsN" name="float" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="x9HhlgZtHcT8" name="double" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="u4pLWnJ1gxN5" name="short" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="iJyJIoeFvvug" name="long" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="aTYr61x04nJa" name="unsigned int" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="accGaxLGGIaW" name="unsigned short" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="4Cj06egg7EVB" name="unsigned long" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ES9IFQqn1Q3Z" name="string" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="EYzY6XNnKfgK" isRoot="false" xmi.id="AwBSERm60RlC" name="QList&lt; AssociationWidget * >" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="oW069fRHbakp" isRoot="false" xmi.id="zUv0weCdSgIo" name="QListIterator&lt; AssociationWidget * >" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="dUt1TMu4e6AS" isRoot="false" xmi.id="j3HN7RojRZkd" name="const QString&amp;" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="9gsnRb7o0Y97" isRoot="false" xmi.id="gagrSVXhWyp2" name="UMLView*" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="EcOTh0GL2tr5" isRoot="false" xmi.id="75G7jzEHQyIY" name="UMLObject*" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="9gsnRb7o0Y97" isRoot="false" xmi.id="NSfmQxIJ7H4o" name="const UMLView*" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="aeLwrLPeS4sq" isRoot="false" xmi.id="YlO0XzWsjQmM" name="const QColor&amp;" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="18ZEvL3pLhMY" isRoot="false" xmi.id="ctbqRd7AbF66" name="QDomDocument&amp;" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="67URooyOfZF7" isRoot="false" xmi.id="CKFlXJq4UrkK" name="QDomElement&amp;" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="Jr6MgSkHK0xA" isRoot="false" xmi.id="FEfNJDfJy0pc" name="UMLWidgetController*" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="Xm2rXXJVq8Z0" isRoot="false" xmi.id="bJaVxv3ryl7z" name="const UMLWidget&amp;" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="Xm2rXXJVq8Z0" isRoot="false" xmi.id="MlMHCMSzWsA1" name="UMLWidget&amp;" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="3DFEv8HDDIiB" isRoot="false" xmi.id="Djq4E868vjAX" name="QMouseEvent*" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="JTzdUulvMWEt" isRoot="false" xmi.id="IYULWnMIKRRm" name="IDChangeLog*" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="YZbub5iXYIGl" isRoot="false" xmi.id="EdGiS5i5Fz0r" name="const QPoint&amp;" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="kv2gIi2FLnXS" isRoot="false" xmi.id="PaBf5DVgvqku" name="QPainter&amp;" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="MrbhhCI2Jxa7" isRoot="false" xmi.id="VF5oKdz9stpb" name="AssociationWidget*" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="jnVhObKc9H9D" isRoot="false" xmi.id="CH8Z3fFOA3cZ" name="AssociationWidgetList&amp;" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="zdlI8EoP4sli" isRoot="false" xmi.id="E9cmojNRX4Mr" name="ListPopupMenu*" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="kv2gIi2FLnXS" isRoot="false" xmi.id="50d88YYA5C8x" name="QPainter*" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="0Jr4CbkT2j4U" isRoot="false" xmi.id="OP2guF5w0f4t" name="QMoveEvent*" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="p9rIb5vfrY7b" isRoot="false" xmi.id="c8JyELv7Nrlc" name="int&amp;" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="cpPyLcr5Vrjn" isRoot="false" xmi.id="CJPsm1i1vUbB" name="QFontMetrics&amp;" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="p9hGOSA6YosN" isRoot="false" xmi.id="7F26fejoFbC4" name="QFont&amp;" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="TUkJYGg9wPgO" isRoot="false" xmi.id="oMiz0GbbwUdl" name="UMLDoc*" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="cpPyLcr5Vrjn" isRoot="false" xmi.id="ltEgNrP4wJNK" name="QFontMetrics*" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="6hxMGqTohpou" isRoot="false" xmi.id="YC7RYuSE9Stn" name="QAction*" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="QT96Be7Ui3LE" isRoot="false" xmi.id="tt3Q9VNPmVtu" name="QWidget*" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="pE7uURNYaylH" isRoot="false" xmi.id="XDcd3ZuYadje" name="UMLApp*" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="pluNPd16lalK" isRoot="false" xmi.id="RUoyh1gFoL6W" name="const KUrl&amp;" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="nMgV5ZqwviaV" isRoot="false" xmi.id="YmkNLCCTosyV" name="UMLListView*" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="7xmHi72fVXGS" isRoot="false" xmi.id="xfXjVTCDe51v" name="WorkToolBar*" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="qNugaPNJBnNl" isRoot="false" xmi.id="ayYaUmdlYiq6" name="DocWindow*" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="jmP4cB2lgYKm" isRoot="false" xmi.id="w0AySeShlrAc" name="CodeGenerator*" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="wOWdwrNVw75o" isRoot="false" xmi.id="6RKvazYnW00Q" name="UMLClassifier*" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="64uTjbyTyZiz" isRoot="false" xmi.id="m1fEmoDyikG7" name="QString const&amp;" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="uiHIdkXlCtwx" isRoot="false" xmi.id="SNDqFTdIatYX" name="KTabWidget*" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="3sNkZxlu3tDM" isRoot="false" xmi.id="0SA32lL41vf8" name="CodeGenerationPolicy*" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="Y7mcsfIsijtN" isRoot="false" xmi.id="psAonpwmcEJ5" name="CodeGenPolicyExt*" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="4BbFjaxI3c1y" isRoot="false" xmi.id="rgyu5O6wTXMI" name="QUndoCommand*" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="KwNIOnt8BY1i" isRoot="false" xmi.id="UOStU2tidcCj" name="QKeyEvent*" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="Al2Pw99A9a1j" isRoot="false" xmi.id="CZ28H5wQZrEd" name="QEvent*" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="DrVaTH3TPboF" isRoot="false" xmi.id="TTjqjcRGpSDu" name="KConfigGroup&amp;" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="DrVaTH3TPboF" isRoot="false" xmi.id="6TztvAo9Ffzc" name="const KConfigGroup&amp;" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="bUhlv210K6rs" isRoot="false" xmi.id="E8rnR9U0bJxY" name="QMenu*" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="s8bF9sGBa8dq" isRoot="false" xmi.id="TcCvKMunT0Wg" name="KConfig*" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="watJjAv16IKT" isRoot="false" xmi.id="0uHvDCCUZ2Ya" name="const QMimeData*" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="unyOHbcTeYIO" isRoot="false" xmi.id="5v1Mt4Ug6ztc" name="QStringList*" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="kNhsZ3Tz9TNI" isRoot="false" xmi.id="LYsvyt7Pfwm6" name="QDockWidget*" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="e2xy7oq1OhJ6" isRoot="false" xmi.id="jYKYDzGVbE26" name="QUndoView*" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="Wv90SPQm0L5j" isRoot="false" xmi.id="T2lo2MIlscJ3" name="RefactoringAssistant*" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="ATOBlgixcuxw" isRoot="false" xmi.id="ZEle77Ya7HM7" name="KRecentFilesAction*" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="1HF0aIhrQxTF" isRoot="false" xmi.id="KiaSDJOIAjc1" name="KActionMenu*" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="yQny3cR2re0R" isRoot="false" xmi.id="POsZ5TbzqdUH" name="KToggleAction*" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="H8FcrF283KIZ" isRoot="false" xmi.id="PHiNE2zl5wO6" name="KPlayerPopupSliderAction*" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="S8zO8eyroGkr" isRoot="false" xmi.id="fmK9xSpAaESf" name="QToolButton*" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="YctAWo4VEqTF" isRoot="false" xmi.id="6A6CeOhJBzQ6" name="KMenu*" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="vpcUMCfFS7Ii" isRoot="false" xmi.id="2QN9n4hnSfE3" name="QTimer*" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="BXYb60nz4mvi" isRoot="false" xmi.id="fSp5637J1uPW" name="AlignToolBar*" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="VoqieIx68BOd" isRoot="false" xmi.id="xz7wrVSvEMxt" name="QStackedWidget*" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="5J7tYqi1P9Jd" isRoot="false" xmi.id="CR2OlxHsHtFX" name="QVBoxLayout*" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="MdvIly5WKjzQ" isRoot="false" xmi.id="z93G2GnrlK90" name="SettingsDlg*" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="HqKCYsfepPvW" isRoot="false" xmi.id="uxtJyoUvvY9y" name="UMLViewImageExporterAll*" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="CxBzM6Vr0crS" isRoot="false" xmi.id="CwXFoTcgQTzN" name="XhtmlGenerator*" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="jCKv3EqbrhjL" isRoot="false" xmi.id="spkscrJplo2Z" name="KUndoStack*" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="EcOTh0GL2tr5" isRoot="false" xmi.id="n9VOC17QaolU" name="const UMLObject*" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="zC5M9e0b3SnI" isRoot="false" xmi.id="m8aKuJpCgEf2" name="UMLClassifierListItem*" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="w6p9G6t4JmSW" isRoot="false" xmi.id="Szod9Jha7CsN" name="QTreeWidgetItem*" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="w6p9G6t4JmSW" isRoot="false" xmi.id="1mR5QhN6rk7l" name="const QTreeWidgetItem*" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="7EQ1DtdY3xOw" isRoot="false" xmi.id="klyMKdw6qkra" name="QDragMoveEvent*" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="ko6aZvAbFatN" isRoot="false" xmi.id="9paxApwLfSaQ" name="QDropEvent*" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="BwSNqFnI0jvf" isRoot="false" xmi.id="Ia6JlsvZ9yAj" name="QMap&lt; QTreeWidgetItem *, UMLObject * >" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="Rs31k0HwkeRr" isRoot="false" xmi.id="wQR0lBZLC0ti" name="const char*" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="W7th5kPYv32y" isRoot="false" xmi.id="bJJlEhCW8Ewj" name="const Icon_Utils::Icon_Type" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="EYzY6XNnKfgK" isRoot="false" xmi.id="DEF25bcCX9gg" name="QList&lt; UMLPackage * >" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="oW069fRHbakp" isRoot="false" xmi.id="5oIcTG9eSPeV" name="QListIterator&lt; UMLPackage * >" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="EcOTh0GL2tr5" isRoot="false" xmi.id="2FdJxbK7JYEp" name="const UMLObject&amp;" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="GTh4LBgOzy1Q" isRoot="false" xmi.id="6bgFIb8avmQP" name="UMLStereotype*" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="iE4KpEKgZfyX" isRoot="false" xmi.id="g2AlSN6Uj0Sp" name="UMLPackage*" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="GTh4LBgOzy1Q" isRoot="false" xmi.id="aowHoM487F3E" name="const UMLStereotype*" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="EYzY6XNnKfgK" isRoot="false" xmi.id="7Vb3818Ub7rC" name="QList&lt; UMLClassifier * >" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="oW069fRHbakp" isRoot="false" xmi.id="IBAsTfCY8nbF" name="QListIterator&lt; UMLClassifier * >" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="D6KJ1AAHLIAm" isRoot="false" xmi.id="BYldWgdbl9h8" name="const UMLEntityConstraint&amp;" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="MRvaUd4dy2vR" isRoot="false" xmi.id="i2wKCWb5BakI" name="const UMLForeignKeyConstraint&amp;" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="Yp4SNPl2TgE2" isRoot="false" xmi.id="KiIfnwaL1Qqj" name="UMLEntity*" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="BN0IVbZqNkxK" isRoot="false" xmi.id="TKsgDB3rwGzW" name="UMLEntityAttribute*" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="BwSNqFnI0jvf" isRoot="false" xmi.id="hHOzXWYh0pdd" name="QMap&lt; UMLEntityAttribute *, UMLEntityAttribute * >" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="BwSNqFnI0jvf" isRoot="false" xmi.id="Sq0ldvmUxRAb" name="QMap&lt; UMLEntityAttribute *, Uml :: IDType >" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="oW069fRHbakp" isRoot="false" xmi.id="FqTK0xDFYwn7" name="QListIterator&lt; UMLObject * >" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="EYzY6XNnKfgK" isRoot="false" xmi.id="hGKDA6KV0jVw" name="QList&lt; UMLObject * >" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="KBNhUHJk7m25" isRoot="false" xmi.id="6Prcve70NJsG" name="UMLObjectList*" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="EYzY6XNnKfgK" isRoot="false" xmi.id="PPLkrfVtvBje" name="QList&lt; UMLAssociation * >" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="oW069fRHbakp" isRoot="false" xmi.id="7gMqvyHKOa3D" name="QListIterator&lt; UMLAssociation * >" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="PAKwLZbSExG9" isRoot="false" xmi.id="neCQoOo8OLma" name="const UMLCanvasObject&amp;" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="9jGGDxRgiGcT" isRoot="false" xmi.id="wHw0lpsEzHiu" name="UMLAssociation*" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="gXjSugHIlpJY" isRoot="false" xmi.id="lfMII6RmYpgO" name="const Uml::Object_Type" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="EYzY6XNnKfgK" isRoot="false" xmi.id="QO1zGta3pr5w" name="QList&lt; UMLEntity * >" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="oW069fRHbakp" isRoot="false" xmi.id="AZ8KhVU8rU75" name="QListIterator&lt; UMLEntity * >" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="EkW5TcpBorWd" isRoot="false" xmi.id="VfhJoi6FCcoe" name="UMLPackageList&amp;" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="RuMJhLZC6vss" isRoot="false" xmi.id="x8GcFeNw74EU" name="UMLClassifierList&amp;" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="qOczg3ppL7rU" isRoot="false" xmi.id="VQi0gFE8PQW6" name="UMLEntityList&amp;" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="jbhAE0BeGf5B" isRoot="false" xmi.id="Fe3ZqpJbZKe8" name="const UMLAttribute&amp;" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="oW069fRHbakp" isRoot="false" xmi.id="nd72NgACHhCF" name="QListIterator&lt; UMLAttribute * >" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="EYzY6XNnKfgK" isRoot="false" xmi.id="mK62zHFFBvpP" name="QList&lt; UMLAttribute * >" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="yVBpOx19Y6Au" isRoot="false" xmi.id="rgDL4yyHyekT" name="const UMLAttributeList&amp;" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="yVBpOx19Y6Au" isRoot="false" xmi.id="VHD8leEHFvrT" name="UMLAttributeList*" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="oW069fRHbakp" isRoot="false" xmi.id="7T5RMbmXEMrF" name="QListIterator&lt; UMLClassifierListItem * >" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="EYzY6XNnKfgK" isRoot="false" xmi.id="mO4yktDer0O7" name="QList&lt; UMLClassifierListItem * >" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="ryVv6j7CCBdW" isRoot="false" xmi.id="EBSX0NkU8dWA" name="const UMLClassifierListItemList&amp;" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="ryVv6j7CCBdW" isRoot="false" xmi.id="MEcasIR3QSeB" name="UMLClassifierListItemList*" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="EYzY6XNnKfgK" isRoot="false" xmi.id="dRH6r4OWIkcy" name="QList&lt; UMLOperation * >" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="oW069fRHbakp" isRoot="false" xmi.id="stR3G54uXMyM" name="QListIterator&lt; UMLOperation * >" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="EYzY6XNnKfgK" isRoot="false" xmi.id="FVEkpA6EUyvX" name="QList&lt; UMLTemplate * >" />
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="oW069fRHbakp" isRoot="false" xmi.id="XYAchdwu6Aew" name="QListIterator&lt; UMLTemplate * >" />
       </UML:Namespace.ownedElement>
      </UML:Package>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="MrbhhCI2Jxa7" name="AssociationWidget" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="EYzY6XNnKfgK" name="QList" />
      <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" elementReference="AwBSERm60RlC" isRoot="false" xmi.id="jnVhObKc9H9D" name="AssociationWidgetList" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="oW069fRHbakp" name="QListIterator" />
      <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" elementReference="zUv0weCdSgIo" isRoot="false" xmi.id="FcOMtXZg2Xm9" name="AssociationWidgetListIt" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="p9hGOSA6YosN" name="QFont" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="aeLwrLPeS4sq" name="QColor" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="dUt1TMu4e6AS" name="QString" />
      <UML:Package visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="CBRlk9bhdUfX" comment="                                                                        *&#xa;  This program is free software; you can redistribute it and/or modify  *&#xa;  it under the terms of the GNU General Public License as published by  *&#xa;  the Free Software Foundation; either version 2 of the License, or     *&#xa;  (at your option) any later version.                                   *&#xa;                                                                        *&#xa;  copyright (C) 2002-2006                                               *&#xa;  Umbrello UML Modeller Authors &lt;umbrello-devel@kde.org>                  *" name="Settings" >
       <UML:Namespace.ownedElement>
        <UML:Class visibility="public" isSpecification="false" namespace="CBRlk9bhdUfX" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="9sBZWTLj4j5v" name="CodeViewerState" >
         <UML:Classifier.feature>
          <UML:Attribute visibility="public" isSpecification="false" xmi.id="FcZH7MOKVp3F" type="p9rIb5vfrY7b" name="height" />
          <UML:Attribute visibility="public" isSpecification="false" xmi.id="yexa7c7ESGnw" type="p9rIb5vfrY7b" name="width" />
          <UML:Attribute visibility="public" isSpecification="false" xmi.id="i8dmpif4IFJQ" type="8c3ctJdhRSz0" name="showHiddenBlocks" />
          <UML:Attribute visibility="public" isSpecification="false" xmi.id="Zii4VlISOD2T" type="8c3ctJdhRSz0" name="blocksAreHighlighted" />
          <UML:Attribute visibility="public" isSpecification="false" xmi.id="UVQlkh9HNpMt" type="p9hGOSA6YosN" name="font" />
          <UML:Attribute visibility="public" isSpecification="false" xmi.id="W1w2pmQHIo00" type="aeLwrLPeS4sq" name="paperColor" />
          <UML:Attribute visibility="public" isSpecification="false" xmi.id="V9ItyekXG3T5" type="aeLwrLPeS4sq" name="fontColor" />
          <UML:Attribute visibility="public" isSpecification="false" xmi.id="OrjqtahObdQO" type="aeLwrLPeS4sq" name="selectedColor" />
          <UML:Attribute visibility="public" isSpecification="false" xmi.id="Qodgceg8lwzk" type="aeLwrLPeS4sq" name="editBlockColor" />
          <UML:Attribute visibility="public" isSpecification="false" xmi.id="YhFokir6XbwR" type="aeLwrLPeS4sq" name="nonEditBlockColor" />
          <UML:Attribute visibility="public" isSpecification="false" xmi.id="9bnkFD8d2lHe" type="aeLwrLPeS4sq" name="umlObjectColor" />
          <UML:Attribute visibility="public" isSpecification="false" xmi.id="Nvk9shrOO6D6" type="aeLwrLPeS4sq" name="hiddenColor" />
         </UML:Classifier.feature>
        </UML:Class>
        <UML:Enumeration stereotype="enum" visibility="public" isSpecification="false" namespace="CBRlk9bhdUfX" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="J8cTC4sawAT0" name="Page" >
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="J8cTC4sawAT0" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="fyf9j6DHAuVw" name="page_general" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="J8cTC4sawAT0" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="K0yNW3enCEHM" name="page_font" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="J8cTC4sawAT0" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="I7wEINCxKp51" name="page_UI" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="J8cTC4sawAT0" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="tII2CmyUmwqG" name="page_class" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="J8cTC4sawAT0" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="zS49hLVzQQCg" name="page_codegen" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="J8cTC4sawAT0" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="lOc5Ch55zN79" name="page_codeview" />
        </UML:Enumeration>
        <UML:Class visibility="public" isSpecification="false" namespace="CBRlk9bhdUfX" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="95etzUAzwC6b" name="GeneralState" >
         <UML:Classifier.feature>
          <UML:Attribute visibility="public" isSpecification="false" xmi.id="Vcbv0lcl7EpJ" type="8c3ctJdhRSz0" name="undo" />
          <UML:Attribute visibility="public" isSpecification="false" xmi.id="vuNsFU1NYdEX" type="8c3ctJdhRSz0" name="tabdiagrams" />
          <UML:Attribute visibility="public" isSpecification="false" xmi.id="7MU2Ybd1BCx9" type="8c3ctJdhRSz0" name="newcodegen" />
          <UML:Attribute visibility="public" isSpecification="false" xmi.id="xXs5jfOcXlUn" type="8c3ctJdhRSz0" name="angularlines" />
          <UML:Attribute visibility="public" isSpecification="false" xmi.id="ET8k7KFEhkED" type="8c3ctJdhRSz0" name="footerPrinting" />
          <UML:Attribute visibility="public" isSpecification="false" xmi.id="JqFS2Ab0fR5O" type="8c3ctJdhRSz0" name="autosave" />
          <UML:Attribute visibility="public" isSpecification="false" xmi.id="7R0eBSPNvX72" type="p9rIb5vfrY7b" name="time" />
          <UML:Attribute visibility="public" isSpecification="false" xmi.id="sMFX4RkLHznK" type="p9rIb5vfrY7b" name="autosavetime" />
          <UML:Attribute visibility="public" isSpecification="false" xmi.id="7MImoLAvk8Zv" type="dUt1TMu4e6AS" name="autosavesuffix" />
          <UML:Attribute visibility="public" isSpecification="false" xmi.id="YzIUUPUKkhrm" type="8c3ctJdhRSz0" name="loadlast" />
          <UML:Attribute visibility="public" isSpecification="false" xmi.id="7c8OZtgfGwR2" type="NphzIupJjyAl" name="diagram" />
          <UML:Attribute visibility="public" isSpecification="false" xmi.id="Hax2iUvHREju" type="UrHzDI7BfWWb" name="defaultLanguage" />
          <UML:Attribute visibility="public" isSpecification="false" xmi.id="bBELt460eEMD" type="dUt1TMu4e6AS" name="lastFile" />
         </UML:Classifier.feature>
        </UML:Class>
        <UML:Class visibility="public" isSpecification="false" namespace="CBRlk9bhdUfX" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="71sLxINFsIHa" name="UIState" >
         <UML:Classifier.feature>
          <UML:Attribute visibility="public" isSpecification="false" xmi.id="nCpCOW40iJJZ" type="8c3ctJdhRSz0" name="useFillColor" />
          <UML:Attribute visibility="public" isSpecification="false" xmi.id="NNXzbtChu32q" type="aeLwrLPeS4sq" name="fillColor" />
          <UML:Attribute visibility="public" isSpecification="false" xmi.id="JQ5BiKjTUXet" type="aeLwrLPeS4sq" name="lineColor" />
          <UML:Attribute visibility="public" isSpecification="false" xmi.id="hUmZVnPoDSzt" type="3irjz8IKWpJ5" name="lineWidth" />
          <UML:Attribute visibility="public" isSpecification="false" xmi.id="miLFDx6Hfv0f" type="p9hGOSA6YosN" name="font" />
         </UML:Classifier.feature>
        </UML:Class>
        <UML:Class visibility="public" isSpecification="false" namespace="CBRlk9bhdUfX" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="1HzV6JbllLJG" name="ClassState" >
         <UML:Classifier.feature>
          <UML:Attribute visibility="public" isSpecification="false" xmi.id="8g4J71BtjU6x" type="8c3ctJdhRSz0" name="showVisibility" />
          <UML:Attribute visibility="public" isSpecification="false" xmi.id="RCC67Cj9TjeY" type="8c3ctJdhRSz0" name="showAtts" />
          <UML:Attribute visibility="public" isSpecification="false" xmi.id="0DHlZYzfD3xK" type="8c3ctJdhRSz0" name="showOps" />
          <UML:Attribute visibility="public" isSpecification="false" xmi.id="48BlcIg3Us7c" type="8c3ctJdhRSz0" name="showStereoType" />
          <UML:Attribute visibility="public" isSpecification="false" xmi.id="3rjUaL0YZGH6" type="8c3ctJdhRSz0" name="showAttSig" />
          <UML:Attribute visibility="public" isSpecification="false" xmi.id="oGjzHgJLmV4O" type="8c3ctJdhRSz0" name="showOpSig" />
          <UML:Attribute visibility="public" isSpecification="false" xmi.id="nlPHbXrcOY7w" type="8c3ctJdhRSz0" name="showPackage" />
          <UML:Attribute visibility="public" isSpecification="false" xmi.id="u5SRLjV8xE7E" type="8c3ctJdhRSz0" name="showAttribAssocs" />
          <UML:Attribute visibility="public" isSpecification="false" xmi.id="vRXhub4hMTww" type="Bh1MvAj7B0kh" name="defaultAttributeScope" />
          <UML:Attribute visibility="public" isSpecification="false" xmi.id="ymYKKdECjgb2" type="Bh1MvAj7B0kh" name="defaultOperationScope" />
         </UML:Classifier.feature>
        </UML:Class>
        <UML:Class visibility="public" isSpecification="false" namespace="CBRlk9bhdUfX" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="N68ILGWEf1tX" name="CodeGenerationState" >
         <UML:Classifier.feature>
          <UML:Attribute visibility="public" isSpecification="false" xmi.id="dvCxN8tLsQeB" type="8c3ctJdhRSz0" name="autoGenEmptyConstructors" />
          <UML:Attribute visibility="public" isSpecification="false" xmi.id="aB4SbibcaxL7" type="7hakjSHMNTJk" name="commentStyle" />
          <UML:Attribute visibility="public" isSpecification="false" xmi.id="u62xxFK5wsnf" type="SF2oBjeknJKg" name="defaultAssocFieldScope" />
          <UML:Attribute visibility="public" isSpecification="false" xmi.id="I3zeUHO4SQV1" type="SF2oBjeknJKg" name="defaultAttributeAccessorScope" />
          <UML:Attribute visibility="public" isSpecification="false" xmi.id="86bh3wox0qty" type="8c3ctJdhRSz0" name="forceDoc" />
          <UML:Attribute visibility="public" isSpecification="false" xmi.id="3B1y1mbKpbyK" type="8c3ctJdhRSz0" name="forceSections" />
          <UML:Attribute visibility="public" isSpecification="false" xmi.id="lLtl9khDtg9u" type="sKMIlpHruqYx" name="headingsDirectory" />
          <UML:Attribute visibility="public" isSpecification="false" xmi.id="TkCGL8aBTvRC" type="8c3ctJdhRSz0" name="includeHeadings" />
          <UML:Attribute visibility="public" isSpecification="false" xmi.id="ki1eXaaItR32" type="p9rIb5vfrY7b" name="indentationAmount" />
          <UML:Attribute visibility="public" isSpecification="false" xmi.id="HfaiY1uJiuvF" type="BjD4PMwq797Q" name="indentationType" />
          <UML:Attribute visibility="public" isSpecification="false" xmi.id="v2T09aPQEz7m" type="UTXLuYN3FZ5d" name="lineEndingType" />
          <UML:Attribute visibility="public" isSpecification="false" xmi.id="x2MCbSpUSHTb" type="0z3gtxvNQQgL" name="modnamePolicy" />
          <UML:Attribute visibility="public" isSpecification="false" xmi.id="ps13p8on8rU1" type="sKMIlpHruqYx" name="outputDirectory" />
          <UML:Attribute visibility="public" isSpecification="false" xmi.id="Kj9m0cNpSNrH" type="oNNFo1Yj3uve" name="overwritePolicy" />
          <UML:Attribute visibility="public" isSpecification="false" xmi.id="iCVxQqfGerTG" type="Tf4ZWYZJuuWi" name="cppCodeGenerationState" />
          <UML:Attribute visibility="public" isSpecification="false" xmi.id="MhbPtKRbCxhD" type="ImT3H8s28uhs" name="dCodeGenerationState" />
          <UML:Attribute visibility="public" isSpecification="false" xmi.id="OxiD2EAkOfhm" type="5nLoctFzjRYi" name="javaCodeGenerationState" />
          <UML:Attribute visibility="public" isSpecification="false" xmi.id="TK27BUOWBxv4" type="UQr37bgaHGLi" name="rubyCodeGenerationState" />
         </UML:Classifier.feature>
         <UML:Namespace.ownedElement>
          <UML:Class visibility="public" isSpecification="false" namespace="N68ILGWEf1tX" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Tf4ZWYZJuuWi" name="CPPCodeGenerationState" >
           <UML:Classifier.feature>
            <UML:Attribute visibility="public" isSpecification="false" xmi.id="v4PzwIbF1k1z" type="8c3ctJdhRSz0" name="autoGenAccessors" />
            <UML:Attribute visibility="public" isSpecification="false" xmi.id="KNpkkg1BJ4lp" type="8c3ctJdhRSz0" name="inlineAccessors" />
            <UML:Attribute visibility="public" isSpecification="false" xmi.id="aK6UCcA7gZ6b" type="8c3ctJdhRSz0" name="inlineOps" />
            <UML:Attribute visibility="public" isSpecification="false" xmi.id="siqrQprjCeRu" type="8c3ctJdhRSz0" name="packageIsNamespace" />
            <UML:Attribute visibility="public" isSpecification="false" xmi.id="IR6bVpO37VYJ" type="8c3ctJdhRSz0" name="publicAccessors" />
            <UML:Attribute visibility="public" isSpecification="false" xmi.id="7gQmGVL6BBvb" type="dUt1TMu4e6AS" name="stringClassName" />
            <UML:Attribute visibility="public" isSpecification="false" xmi.id="ymI9Ok3eB7Fe" type="dUt1TMu4e6AS" name="stringClassNameInclude" />
            <UML:Attribute visibility="public" isSpecification="false" xmi.id="wch37FMCwlwA" type="8c3ctJdhRSz0" name="stringIncludeIsGlobal" />
            <UML:Attribute visibility="public" isSpecification="false" xmi.id="GHERQ90PuJYG" type="dUt1TMu4e6AS" name="vectorClassName" />
            <UML:Attribute visibility="public" isSpecification="false" xmi.id="3ZvCh8qdkXfr" type="dUt1TMu4e6AS" name="vectorClassNameInclude" />
            <UML:Attribute visibility="public" isSpecification="false" xmi.id="l12fmyn0G1Rg" type="8c3ctJdhRSz0" name="vectorIncludeIsGlobal" />
            <UML:Attribute visibility="public" isSpecification="false" xmi.id="8S30jbHkBCws" type="8c3ctJdhRSz0" name="virtualDestructors" />
           </UML:Classifier.feature>
          </UML:Class>
          <UML:Class visibility="public" isSpecification="false" namespace="N68ILGWEf1tX" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ImT3H8s28uhs" name="DCodeGenerationState" >
           <UML:Classifier.feature>
            <UML:Attribute visibility="public" isSpecification="false" xmi.id="rUt7TIlakpaT" type="8c3ctJdhRSz0" name="autoGenerateAttributeAccessors" />
            <UML:Attribute visibility="public" isSpecification="false" xmi.id="OrDZ17PKrrL9" type="8c3ctJdhRSz0" name="autoGenerateAssocAccessors" />
            <UML:Attribute visibility="public" isSpecification="false" xmi.id="xD936pwxHn4l" type="8c3ctJdhRSz0" name="buildANTDocument" />
           </UML:Classifier.feature>
          </UML:Class>
          <UML:Class visibility="public" isSpecification="false" namespace="N68ILGWEf1tX" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="5nLoctFzjRYi" name="JavaCodeGenerationState" >
           <UML:Classifier.feature>
            <UML:Attribute visibility="public" isSpecification="false" xmi.id="Yw2QlLXiZgmf" type="8c3ctJdhRSz0" name="autoGenerateAttributeAccessors" />
            <UML:Attribute visibility="public" isSpecification="false" xmi.id="VganTcWWPpK0" type="8c3ctJdhRSz0" name="autoGenerateAssocAccessors" />
            <UML:Attribute visibility="public" isSpecification="false" xmi.id="iYzRzVAVPAvA" type="8c3ctJdhRSz0" name="buildANTDocument" />
           </UML:Classifier.feature>
          </UML:Class>
          <UML:Class visibility="public" isSpecification="false" namespace="N68ILGWEf1tX" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="UQr37bgaHGLi" name="RubyCodeGenerationState" >
           <UML:Classifier.feature>
            <UML:Attribute visibility="public" isSpecification="false" xmi.id="qpEFeXFL3Ck2" type="8c3ctJdhRSz0" name="autoGenerateAttributeAccessors" />
            <UML:Attribute visibility="public" isSpecification="false" xmi.id="isX71RGVr7Yw" type="8c3ctJdhRSz0" name="autoGenerateAssocAccessors" />
           </UML:Classifier.feature>
          </UML:Class>
         </UML:Namespace.ownedElement>
        </UML:Class>
        <UML:Class visibility="public" isSpecification="false" namespace="CBRlk9bhdUfX" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="HLeUIJfgEMrG" name="OptionState" >
         <UML:Classifier.feature>
          <UML:Attribute visibility="public" isSpecification="false" xmi.id="Y1yvefh8ziF8" type="95etzUAzwC6b" name="generalState" />
          <UML:Attribute visibility="public" isSpecification="false" xmi.id="CbeNZYPqt1IB" type="71sLxINFsIHa" name="uiState" />
          <UML:Attribute visibility="public" isSpecification="false" xmi.id="KwpYGgmogkjK" type="1HzV6JbllLJG" name="classState" />
          <UML:Attribute visibility="public" isSpecification="false" xmi.id="PRSM7gTJH7eo" type="9sBZWTLj4j5v" name="codeViewerState" />
          <UML:Attribute visibility="public" isSpecification="false" xmi.id="d1dW3tfNpSu5" type="N68ILGWEf1tX" name="codeGenerationState" />
         </UML:Classifier.feature>
        </UML:Class>
       </UML:Namespace.ownedElement>
      </UML:Package>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="3irjz8IKWpJ5" name="uint" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="sKMIlpHruqYx" name="QDir" />
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="mXQazKd6zVtQ" xmi.id="YQyYJnd4K3cI" parent="5zC3XL9jxXAd" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="18ZEvL3pLhMY" name="QDomDocument" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="67URooyOfZF7" name="QDomElement" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Jr6MgSkHK0xA" name="UMLWidgetController" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="zdlI8EoP4sli" name="ListPopupMenu" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="kv2gIi2FLnXS" name="QPainter" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="0Jr4CbkT2j4U" name="QMoveEvent" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="cpPyLcr5Vrjn" name="QFontMetrics" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Xm2rXXJVq8Z0" comment="This is the base class for nearly all graphical widgets.&#xa;&#xa;@short The base class for graphical UML objects.&#xa;@author  Paul Hensgen &lt;phensgen@techie.com>&#xa;Bugs and comments to umbrello-devel@kde.org or http://bugs.kde.org" name="UMLWidget" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="hJTk1XEbNcXg" />
        <UML:Generalization xmi.idref="6fUJ932AvJ2s" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Attribute visibility="protected" isSpecification="false" xmi.id="XH0hZY7fykf7" type="8c3ctJdhRSz0" comment="This flag indicates if the UMLWidget uses the Diagram FillColour" name="m_bUseFillColour" />
        <UML:Attribute visibility="protected" isSpecification="false" xmi.id="c7MhbhRihy4I" type="8c3ctJdhRSz0" comment=" true by default, false if the colours have&#xa; been explicitly set for this widget" name="m_bUsesDiagramFillColour" />
        <UML:Attribute visibility="protected" isSpecification="false" xmi.id="jSZk5uFc9FJi" type="8c3ctJdhRSz0" name="m_bUsesDiagramUseFillColour" />
        <UML:Attribute visibility="protected" isSpecification="false" xmi.id="mOLk8ysi5CNf" type="aeLwrLPeS4sq" comment="Color of the background of the widget" name="m_FillColour" />
        <UML:Attribute visibility="protected" isSpecification="false" xmi.id="tpNanPqUrPCu" type="jnVhObKc9H9D" comment="A list of AssociationWidgets between the UMLWidget and other UMLWidgets in the diagram" name="m_Assocs" />
        <UML:Attribute visibility="protected" isSpecification="false" xmi.id="HRWPen5Q9RBH" type="dUt1TMu4e6AS" comment="getName() returns the name from the UMLObject if this widget has an&#xa;underlying UMLObject; if it does not, then getName() returns the local&#xa;m_Text (notably the case for FloatingTextWidget.)" name="m_Text" />
        <UML:Attribute visibility="protected" isSpecification="false" xmi.id="P1yTDL64ATcv" type="p9hGOSA6YosN" comment=" The font the widget will use." name="m_Font" />
        <UML:Attribute visibility="protected" isSpecification="false" xmi.id="qSNhqZZ705Ud" type="8c3ctJdhRSz0" comment="Holds whether this widget is a component instance (i.e. on a deployment diagram)" name="m_bIsInstance" />
        <UML:Attribute visibility="protected" isSpecification="false" xmi.id="qa1zzCGMBEnO" type="dUt1TMu4e6AS" comment="The instance name (used if on a deployment diagram)" name="m_instanceName" />
        <UML:Attribute visibility="protected" isSpecification="false" xmi.id="atSiK4cAXzrN" type="8c3ctJdhRSz0" comment="Should the stereotype be displayed" name="m_bShowStereotype" />
        <UML:Attribute visibility="protected" isSpecification="false" xmi.id="XOSXTv8JVAGS" type="8c3ctJdhRSz0" name="m_bSelected" />
        <UML:Attribute visibility="protected" isSpecification="false" xmi.id="KXmWjauHTLyo" type="8c3ctJdhRSz0" name="m_bStartMove" />
        <UML:Attribute visibility="protected" isSpecification="false" xmi.id="NYysXoF2Cgae" type="p9rIb5vfrY7b" name="m_nPosX" />
        <UML:Attribute visibility="protected" isSpecification="false" xmi.id="bgv4qCUBhGfO" type="p9rIb5vfrY7b" name="m_origZ" />
        <UML:Attribute visibility="protected" isSpecification="false" xmi.id="qZgIsc6GA28f" type="E9cmojNRX4Mr" name="m_pMenu" />
        <UML:Attribute visibility="protected" isSpecification="false" xmi.id="g7uLNZkC6OUz" type="oMiz0GbbwUdl" name="m_pDoc" />
        <UML:Attribute visibility="protected" isSpecification="false" xmi.id="0YDAYLnLfVKf" type="8c3ctJdhRSz0" name="m_bResizable" />
        <UML:Attribute visibility="protected" isSpecification="false" xmi.id="s7UyVyvVU8d2" type="ltEgNrP4wJNK" name="m_pFontMetrics" />
        <UML:Attribute visibility="protected" isSpecification="false" xmi.id="SRN7ufneY1Kw" type="8c3ctJdhRSz0" comment="It is true if the Activate Function has been called for this&#xa;class instance" name="m_bActivated" />
        <UML:Attribute visibility="protected" isSpecification="false" xmi.id="rjyn0L5qTZmw" type="8c3ctJdhRSz0" comment="Change Widget Behaviour" name="m_bIgnoreSnapToGrid" />
        <UML:Attribute visibility="protected" isSpecification="false" xmi.id="ViQzo30GSNON" type="8c3ctJdhRSz0" name="m_bIgnoreSnapComponentSizeToGrid" />
        <UML:Attribute visibility="protected" isSpecification="false" xmi.id="191ZAJT10Rn0" type="FEfNJDfJy0pc" comment="Controller for user interaction events." name="m_widgetController" />
        <UML:Operation stereotype="constructor" visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="o3GhKGZP85aK" comment="Creates a UMLWidget object.&#xa;&#xa;@param view The view to be displayed on.&#xa;@param o The UMLObject to represent.&#xa;@param widgetController The UMLWidgetController of this UMLWidget" name="UMLWidget" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="1nKWdXFfaOCD" type="gagrSVXhWyp2" value="" name="view" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="hSxeDwkzxygI" type="75G7jzEHQyIY" value="" name="o" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="V2F3QPG8sBm5" type="FEfNJDfJy0pc" value="" name="widgetController" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation stereotype="constructor" visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="7U23SiJhuy3E" comment="Creates a UMLWidget object.&#xa;&#xa;@param view The view to be displayed on.&#xa;@param id The id of the widget.&#xa; The default value (id_None) will prompt generation of a new ID.&#xa;@param widgetController The UMLWidgetController of this UMLWidget" name="UMLWidget" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="CgVAeKk9MzCk" type="gagrSVXhWyp2" value="" name="view" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="PRsFccIi6KlZ" type="Z6hEnPU23Y7J" value="" name="id" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="24Ex0F9CweLa" type="FEfNJDfJy0pc" value="" name="widgetController" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="w3iG3s0QJtfw" comment="Standard deconstructor" name="~ UMLWidget" />
        <UML:Operation stereotype="constructor" visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="VxcaHN9HPLCP" comment="Copy constructor" name="UMLWidget" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="e8Nvz0rSxT2C" type="bJaVxv3ryl7z" value="" name="other" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="o9SBVcb4wBZr" comment="Assignment operator" name="operator =" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="Sl3MucEwCvxY" type="MlMHCMSzWsA1" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="4cj0Moy0wLvt" type="bJaVxv3ryl7z" value="" name="other" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="hvWeEQVY9roJ" comment="Overload '==' operator" name="operator ==" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="K51U0w1hrVJ4" type="8c3ctJdhRSz0" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="EEIi6RhYAkt5" type="bJaVxv3ryl7z" value="" name="other" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="vnc2cQMoecWi" comment="Calls the method with the same name in UMLWidgetController.&#xa;@see UMLWidgetController#mouseReleaseEvent&#xa;&#xa;@param me The QMouseEvent event." name="mouseReleaseEvent" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="7UKk7qQ82fMx" type="Djq4E868vjAX" value="" name="me" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ld9yur77ay9m" comment="Calls the method with the same name in UMLWidgetController.&#xa;@see UMLWidgetController#mouseDoubleClickEvent&#xa;&#xa;@param me The QMouseEvent event." name="mouseDoubleClickEvent" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="4Guxx3S2Xmmc" type="Djq4E868vjAX" value="" name="me" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="dDldq7YcjhYb" comment="Set the status of using fill color.&#xa;&#xa;@param fc the status of using fill color." name="setUseFillColour" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Ygg6cntg1ldy" type="8c3ctJdhRSz0" value="" name="fc" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="m5zKqluTwf4l" name="getUseFillColour" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="lcNSKv3qbhxB" type="8c3ctJdhRSz0" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="UorWXSSKWRcM" comment="Overrides the method from WidgetBase." name="setLineColor" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="BWn5ArqvTBLl" type="YlO0XzWsjQmM" value="" name="colour" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="7Mcg3XsVJh1q" comment="Overrides the method from WidgetBase." name="setLineColorcmd" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="8S8eri00Dl6N" type="YlO0XzWsjQmM" value="" name="colour" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="cuG36ZnBvNry" comment="Overrides the method from WidgetBase." name="setLineWidth" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="shTBNTzVt69k" type="3irjz8IKWpJ5" value="" name="width" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="o7l1spMUjaVn" comment="Sets the background fill colour&#xa;&#xa;@param colour the new fill colour" name="setFillColour" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="9Iy4fo0XVUgs" type="YlO0XzWsjQmM" value="" name="colour" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="vgNokUWYbHYT" comment="Sets the background fill colour&#xa;&#xa;@param colour the new fill colour" name="setFillColourcmd" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="4uvmTRZchWfL" type="YlO0XzWsjQmM" value="" name="colour" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Kfsn7Xe2Bzov" comment="get fill color attribute." name="getFillColor" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="ULT3azXfsQRL" type="aeLwrLPeS4sq" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="pyxXUasmGiYL" name="getFillColour" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="FCOQBAJdTlh4" type="aeLwrLPeS4sq" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="kChcc6xS4tzX" comment="Calls the method with the same name in UMLWidgetController.&#xa;@see UMLWidgetController#mouseMoveEvent&#xa;&#xa;@param me The QMouseEvent event." name="mouseMoveEvent" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="TpHhXp3l1P9B" type="Djq4E868vjAX" value="" name="me" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ZTm3ET5wfmZG" name="isText" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="sWguNdRrShWx" type="8c3ctJdhRSz0" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="WZgWyqhWHTXT" comment="Sets the state of whether the widget is selected.&#xa;&#xa;@param _select The state of whether the widget is selected." name="setSelected" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="vaPYMymCTS6q" type="8c3ctJdhRSz0" value="" name="_select" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="5WfVBCThj7Dg" name="getSelected" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="xsCCKhdFH3lb" type="8c3ctJdhRSz0" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="zYnS0rH4LuZW" name="setSelectedFlag" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="60Co8PU3GgEa" type="8c3ctJdhRSz0" value="" name="_select" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="LrncsWDs4yI3" comment="Sets the view the widget is on.&#xa;&#xa;@param v The view the widget is on." name="setView" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="nX59ScdWbpKh" type="gagrSVXhWyp2" value="" name="v" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="DoiTSw1nmmNe" comment="Activate the object after serializing it from a QDataStream&#xa;&#xa;@param ChangeLog&#xa;@return  true for success" name="activate" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="yTaiFxNVWrq0" type="8c3ctJdhRSz0" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="32HeqbJ3O2Uo" type="IYULWnMIKRRm" value="" name="ChangeLog" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="cCIxbhhdkyFa" comment="Returns 0 if the given point is not in the boundaries of the widget,&#xa;else returns a number which is proportional to the size of the widget.&#xa;&#xa;@param p Point to be checked.&#xa;&#xa;@return 0 if the given point is not in the boundaries of the widget;&#xa;        (width()+height())/2 if the point is within the boundaries." name="onWidget" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="akN61drDE6ve" type="p9rIb5vfrY7b" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="ghUOehwAGX2p" type="EdGiS5i5Fz0r" value="" name="p" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="true" isLeaf="false" isRoot="false" xmi.id="BbjQajFHPhd1" comment="Draws the UMLWidget on the given paint device&#xa;&#xa;@param p The painter for the drawing device&#xa;@param offsetX x position to start the drawing.&#xa;@param offsetY y position to start the drawing.&#xa;" name="draw" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Rc7fg0Hpc1DA" type="PaBf5DVgvqku" value="" name="p" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="iTP5A36XdFBi" type="p9rIb5vfrY7b" value="" name="offsetX" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="QeMMU7EvhKYL" type="p9rIb5vfrY7b" value="" name="offsetY" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="KpAuoN5VqSaz" comment="Set the pen." name="setPenFromSettings" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="VfU8ufpLJ9fn" type="PaBf5DVgvqku" value="" name="p" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="GrgvBCGU2OMo" comment="Sets the font the widget is to use.&#xa;&#xa;@param font Font to be set." name="setFont" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="mPJassZNX2UR" type="p9hGOSA6YosN" value="" name="font" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="hJk1QPmfHRaQ" comment=" Returns the font the widget is to use." name="getFont" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="dpudDHSzglYW" type="p9hGOSA6YosN" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="d5u87OapfKo5" name="getStartMove" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="iYizzJNd6IGH" type="8c3ctJdhRSz0" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="XgFBSni3saC0" comment="Sets the x-coordinate.&#xa;Currently, the only class that reimplements this method is&#xa;ObjectWidget.&#xa;&#xa;@param x The x-coordinate to be set." name="setX" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="wknb2bek9Nh9" type="p9rIb5vfrY7b" value="" name="x" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="e5kiLyzqfEz5" comment="Sets the y-coordinate.&#xa;Currently, the only class that reimplements this method is&#xa;ObjectWidget.&#xa;&#xa;@param y The y-coordinate to be set." name="setY" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="zf6sFGqB0dk3" type="p9rIb5vfrY7b" value="" name="y" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="EPnLkTSMYC4t" comment="Sets the z-coordinate.&#xa;&#xa;@param z The z-coordinate to be set." name="setZ" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="B1hoEgtDMz3b" type="p9rIb5vfrY7b" value="" name="z" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="GtlEUVHgs32c" name="getX" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="WUw2f0to0acE" type="p9rIb5vfrY7b" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="GVRaUTCiMvxp" name="getY" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="QCVJFVtj0qld" type="p9rIb5vfrY7b" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="qePqE12TUS3w" name="getZ" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="vDfF8a4Xmaq0" type="p9rIb5vfrY7b" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="5jj3ZVeO73CK" name="getHeight" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="4DnWfoTa08p6" type="p9rIb5vfrY7b" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="gudSSRSVBCXi" name="getWidth" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="fB4mDF6FSrm7" type="p9rIb5vfrY7b" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="eFheLUk1MMTo" comment="Sets the size.&#xa;If m_pView->getSnapComponentSizeToGrid() is true, then&#xa;set the next larger size that snaps to the grid." name="setSize" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="nuIw4pfjyhTB" type="p9rIb5vfrY7b" value="" name="width" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="uYRMNBR1Q8dj" type="p9rIb5vfrY7b" value="" name="height" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="bMkxiBmV34S7" comment="Set m_bIgnoreSnapToGrid." name="setIgnoreSnapToGrid" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="r5qpkIzfqO1B" type="8c3ctJdhRSz0" value="" name="to" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ZTDxZogAAO6q" comment="Return the value of m_bIgnoreSnapToGrid." name="getIgnoreSnapToGrid" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="XqMbsmijrXWb" type="8c3ctJdhRSz0" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="nVGbtGmShxPG" comment="Move the widget by an X and Y offset relative to&#xa;the current position." name="moveByLocal" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="m3PuRVlzL5YD" type="p9rIb5vfrY7b" value="" name="dx" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="rGuglQFYwU9p" type="p9rIb5vfrY7b" value="" name="dy" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="iwGPrddbh2W8" comment="Removes an already created association from the list of&#xa;associations that include this UMLWidget" name="removeAssoc" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="I2AEUH1CBFb3" type="VF5oKdz9stpb" value="" name="pAssoc" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="tFeaF8glNmXh" comment="Adds an already created association to the list of&#xa;associations that include this UMLWidget" name="addAssoc" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="NXoFObpgezs8" type="VF5oKdz9stpb" value="" name="pAssoc" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="EuLQ9uR095aP" name="getAssocList" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="fRDHQ6Pc0i27" type="CH8Z3fFOA3cZ" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="dT8kXg9jxFGy" name="getUsesDiagramFillColour" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="tVN3XzaCQoTo" type="8c3ctJdhRSz0" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="uqQsXRx8u3sP" name="getUsesDiagramUseFillColour" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="k08fFNe8s1AP" type="8c3ctJdhRSz0" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ykZMW08OpWGM" name="setUsesDiagramFillColour" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="xCUqFKFxKMdY" type="8c3ctJdhRSz0" value="" name="usesDiagramFillColour" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="jHeZGoxCXWY1" name="setUsesDiagramUseFillColour" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="VeQKAee8q6y4" type="8c3ctJdhRSz0" value="" name="usesDiagramUseFillColour" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="QBzjXcHErvo5" name="setIsInstance" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="ilFDFlEkPe2a" type="8c3ctJdhRSz0" value="" name="isInstance" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Heg5ic79n7qL" name="getIsInstance" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="h7ZX0Lci6qtM" type="8c3ctJdhRSz0" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="b841k5Z1hF7Q" name="setInstanceName" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="rEXcJNvzSVWS" type="j3HN7RojRZkd" value="" name="instanceName" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="o69vw2FY8HXt" name="getInstanceName" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="K6u2JzS8CxkT" type="dUt1TMu4e6AS" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="KgSm9yCx5Jqz" comment="Returns the status of whether to show Stereotype.&#xa;&#xa;@return  True if stereotype is shown." name="getShowStereotype" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="M3XSL2Lf6EfP" type="8c3ctJdhRSz0" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="D5VN2ErKuJ41" comment="Set the status of whether to show Stereotype.&#xa;&#xa;@param _status             True if stereotype shall be shown." name="setShowStereotype" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="GHwJalIuooN7" type="8c3ctJdhRSz0" value="" name="_status" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="qglxuQK6WoRW" comment="Show a properties dialog for a UMLWidget." name="showProperties" />
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="2GruavvoCp7l" comment="Returns true if the Activate method has been called for this instance&#xa;&#xa;@return The activate status." name="isActivated" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="aPdNDyU2dFxX" type="8c3ctJdhRSz0" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="gHbA53g5JXzr" comment="Sets the name in the corresponding UMLObject.&#xa;Sets the local m_Text if m_pObject is NULL.&#xa;&#xa;@param strName The name to be set." name="setName" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="RsddikMG8ydL" type="j3HN7RojRZkd" value="" name="strName" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="u8LXNI31ae9d" comment="Gets the name from the corresponding UMLObject.&#xa;Returns the local m_Text if m_pObject is NULL.&#xa;&#xa;@return The currently set name." name="getName" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="fojxLimmZQOH" type="dUt1TMu4e6AS" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="AiVGg9abFv6a" comment="Starts the popup menu.&#xa;" name="setupPopupMenu" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="l9bKZzZhg4yK" type="E9cmojNRX4Mr" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="BYtQR01f9bPv" comment="Adjusts associations with the given co-ordinates&#xa;&#xa;@param x The x-coordinate.&#xa;@param y The y-coordinate." name="adjustAssocs" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="KnNqrhhcqIuN" type="p9rIb5vfrY7b" value="" name="x" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="GT3wYzGjVA8w" type="p9rIb5vfrY7b" value="" name="y" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="87aHizD0kYoa" comment="Adjusts all unselected associations with the given co-ordinates&#xa;&#xa;@param x The x-coordinate.&#xa;@param y The y-coordinate." name="adjustUnselectedAssocs" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="DVA4o5P2YSy4" type="p9rIb5vfrY7b" value="" name="x" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="RCmwKutS1Tih" type="p9rIb5vfrY7b" value="" name="y" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Qtf9PUjcxtgj" comment="Set the m_bActivated flag of a widget but does not perform the Activate method&#xa;&#xa;@param Active Status of activation is to be set." name="setActivated" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="w6lVWhXyuJuC" type="8c3ctJdhRSz0" value="" name="Active" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="BlfACLpdETmd" comment="Used to cleanup any other widget it may need to delete.&#xa;Used by child classes.  This should be called before deleting a widget of a diagram." name="cleanup" />
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" ownerScope="classifier" isRoot="false" xmi.id="xTFsKucHyNkU" comment="Returns whether the widget type has an associated UMLObject" name="widgetHasUMLObject" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="5guJ9eu45AxP" type="8c3ctJdhRSz0" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="3HSxZL7i6ktH" type="5YjeZvZuk59w" value="" name="type" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="2Ze0uOSxevsB" comment="Update the size of this widget." name="updateComponentSize" />
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="E0tKikZoRT5Y" comment="@note For performance Reasons, only FontMetrics for already used&#xa; font types are updated. Not yet used font types will not get a font metric&#xa; and will get the same font metric as if painter was zero.&#xa; This behaviour is acceptable, because diagrams will always be showed on Display&#xa; first before a special painter like a printer device is used." name="forceUpdateFontMetrics" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="ZavBTlMhjD0S" type="50d88YYA5C8x" value="" name="painter" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="yZEN1Jv6JWFP" comment="Calls the method with the same name in UMLWidgetController.&#xa;@see UMLWidgetController#mousePressEvent&#xa;&#xa;@param me The QMouseEvent event." name="mousePressEvent" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="4lZ9vf5UE0dh" type="Djq4E868vjAX" value="" name="me" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="jzPRDPt9w5Ux" comment="Overrides the standard operation.&#xa;&#xa;@param me The move event." name="moveEvent" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="I9MW7zEqzbHA" type="OP2guF5w0f4t" value="" name="me" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="y8HuDlsa8uG2" name="saveToXMI" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="7Lz7y30HCMlJ" type="ctbqRd7AbF66" value="" name="qDoc" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Mx7JYNRWViPh" type="CKFlXJq4UrkK" value="" name="qElement" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="TFHb7VeEqbLp" name="loadFromXMI" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="Xgo1OBirQxQX" type="8c3ctJdhRSz0" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="cJ4oen5ylCFJ" type="CKFlXJq4UrkK" value="" name="qElement" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="S2lGd43FL51z" comment="Returns the UMLWdigetController for this widget." name="getWidgetController" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="t4veFAvmqjnC" type="FEfNJDfJy0pc" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="protected" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="sT1IQSpqUY56" comment="Apply possible constraints to the given candidate width and height.&#xa;The default implementation calls calculateSize() and&#xa;assigns the returned values if they are greater than the&#xa;input values.&#xa;&#xa;@param width  input value, may be modified by the constraint&#xa;@param height input value, may be modified by the constraint" name="constrain" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="zgPoOC0Ge2X4" type="c8JyELv7Nrlc" value="" name="width" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="SKtwty0T4KPI" type="c8JyELv7Nrlc" value="" name="height" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="protected" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="dJN086d7n0v9" comment="Draws that the widget is selected.&#xa;&#xa;@param p Device on which is the selection is to be drawn.&#xa;@param offsetX The x-coordinate for drawing.&#xa;@param offsetY The y-coordinate for drawing." name="drawSelected" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="AwNowurODkI6" type="50d88YYA5C8x" value="" name="p" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="gJXkbx1EEOEM" type="p9rIb5vfrY7b" value="" name="offsetX" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="VpTGnNPyJkmD" type="p9rIb5vfrY7b" value="" name="offsetY" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="protected" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ddbqLtu1ARkl" comment="Overrides default method.&#xa;&#xa;@param p Device on which the shape has to be drawn." name="drawShape" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="MlzY9CuezMun" type="PaBf5DVgvqku" value="" name="p" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="protected" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="jHl00VDd7mRS" comment="Compute the minimum possible width and height.&#xa;The default implementation returns width=20, height=20.&#xa;&#xa;@return QSize(mininum_width, minimum_height)" name="calculateSize" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="hYjeubRbrAbr" type="fLSokCZ5xXd4" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="protected" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="pZ1k4fplBWP5" comment="Template Method, override this to set the default&#xa; font metric." name="setDefaultFontMetrics" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="7pgyxFnb3HKb" type="eoUlavDDEd1y" value="" name="fontType" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="protected" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="AYmMBoJzLKjP" name="setDefaultFontMetrics" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="zWAA2XD8Kr4G" type="eoUlavDDEd1y" value="" name="fontType" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="6sr77AiGiVcr" type="PaBf5DVgvqku" value="" name="painter" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="protected" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="HvoaGWzD27M3" comment="Returns the font metric used by this object for Text which uses bold/italic font" name="getFontMetrics" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="0YM1fi4IIDDh" type="CJPsm1i1vUbB" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="cZBxRDDV32dB" type="eoUlavDDEd1y" value="" name="fontType" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="protected" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="OOASOldZ52Pp" name="setFontMetrics" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="17rwaQ5azSbc" type="eoUlavDDEd1y" value="" name="fontType" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="8duQo55DRGfq" type="cpPyLcr5Vrjn" value="" name="fm" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="protected" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="1GP4GouHujCU" name="setupFontType" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="fIH6WuwVAJaQ" type="7F26fejoFbC4" value="" name="font" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="6Sf09rUG7WLk" type="eoUlavDDEd1y" value="" name="fontType" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="protected" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="82YMblQG1fLX" comment="Initializes key attributes of the class." name="init" />
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="lsqCQc8vIYt7" comment="This slot is entered when an event has occurred on the views display,&#xa;most likely a mouse event.  Before it sends out that mouse event all&#xa;children should make sure that they don't have a menu active or there&#xa;could be more than one popup menu displayed." name="slotRemovePopupMenu" />
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="atN2EjNFsOn3" comment="When a widget changes this slot captures that signal." name="updateWidget" />
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="fG2fgnfReTb4" comment="Captures any popup menu signals for menus it created.&#xa;&#xa;@param action The action which has to be executed." name="slotMenuSelection" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="GXCu0nw4UtRi" type="YC7RYuSE9Stn" value="" name="action" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="iuUNhJHGTNh1" comment="Captures when another widget moves if it is link to it that signal.&#xa;&#xa;@param id The id of object behind the widget." name="slotWidgetMoved" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="F7FOZ79neLfe" type="Z6hEnPU23Y7J" value="" name="id" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="6bjZT8F90kUi" comment="Captures a color change signal.&#xa;&#xa;@param viewID The id of the object behind the widget." name="slotColorChanged" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="1myU7dVMijjF" type="Z6hEnPU23Y7J" value="" name="viewID" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="qs3UCg6GGnph" comment="Captures a linewidth change signal.&#xa;&#xa;@param viewID The id of the object behind the widget." name="slotLineWidthChanged" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="v5qwnKco4aIB" type="Z6hEnPU23Y7J" value="" name="viewID" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="BlYtUH8I79kJ" comment="  Captures a sigClearAllSelected signal sent by @ref UMLView" name="slotClearAllSelected" />
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="qrY6eNlaQbUD" comment="Tells the widget to snap to grid.&#xa;Will use the grid settings of the @ref UMLView it belongs to." name="slotSnapToGrid" />
        <UML:Operation visibility="protected" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="t6zyeH7n1deT" comment="Emit when the widget moves its' position.&#xa;&#xa;@param id The id of the object behind the widget." name="sigWidgetMoved" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="skm0uWHiLpm0" type="Z6hEnPU23Y7J" value="" name="id" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
       <UML:Namespace.ownedElement>
        <UML:Class stereotype="typedef" visibility="public" isSpecification="false" namespace="Xm2rXXJVq8Z0" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="eoUlavDDEd1y" name="FontType" />
       </UML:Namespace.ownedElement>
      </UML:Class>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="mXQazKd6zVtQ" comment="@short       Common base class for UMLWidget and AssociationWidget&#xa;@author      Oliver Kellogg &lt;okellogg@users.sourceforge.net>&#xa;Bugs and comments to umbrello-devel@kde.org or http://bugs.kde.org" name="WidgetBase" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="YQyYJnd4K3cI" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Attribute visibility="protected" isSpecification="false" xmi.id="mPsSBgOFn3dL" type="5YjeZvZuk59w" comment="Type of widget." name="m_Type" />
        <UML:Attribute visibility="protected" isSpecification="false" xmi.id="hzbB8vwBT8Mi" type="gagrSVXhWyp2" name="m_pView" />
        <UML:Attribute visibility="protected" isSpecification="false" xmi.id="bHUFpmIcC84L" type="75G7jzEHQyIY" name="m_pObject" />
        <UML:Attribute visibility="protected" isSpecification="false" xmi.id="pQaaSBt9BSIH" type="dUt1TMu4e6AS" name="m_Doc" />
        <UML:Attribute visibility="protected" isSpecification="false" xmi.id="OFSpNnXw4zAt" type="Z6hEnPU23Y7J" comment="This ID is only used when the widget does not have a&#xa;corresponding UMLObject (i.e. the m_pObject pointer is NULL.)&#xa;For UMLObjects, the ID from the UMLObject is used." name="m_nId" />
        <UML:Attribute visibility="protected" isSpecification="false" xmi.id="lQVvYYELymtQ" type="aeLwrLPeS4sq" comment="Color of the lines of the widget. Is saved to XMI." name="m_LineColour" />
        <UML:Attribute visibility="protected" isSpecification="false" xmi.id="wlX7DqOZ3qMO" type="3irjz8IKWpJ5" comment="Width of the lines of the widget. Is saved to XMI." name="m_LineWidth" />
        <UML:Attribute visibility="protected" isSpecification="false" xmi.id="dtIfsSZcs4VP" type="8c3ctJdhRSz0" comment="true by default, false if the colours have&#xa;been explicitly set for this widget.&#xa;These are saved to XMI." name="m_bUsesDiagramLineColour" />
        <UML:Attribute visibility="protected" isSpecification="false" xmi.id="ciiZSazOLVTW" type="8c3ctJdhRSz0" name="m_bUsesDiagramLineWidth" />
        <UML:Operation stereotype="constructor" visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="XDJpEv7Y9Sts" name="WidgetBase" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Xb4VKcnrp6h1" type="gagrSVXhWyp2" value="" name="view" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="2maBCR3q0hhS" name="~ WidgetBase" />
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="CC7g8wggViBq" comment="Write property of m_Type." name="setBaseType" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Kwf73K937hCH" type="5YjeZvZuk59w" value="" name="type" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="6D86unW40dl8" comment="Read property of m_Type." name="getBaseType" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="YRm3AwtSsZat" type="5YjeZvZuk59w" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="rhwwO6EUJMZB" comment="Returns the @ref UMLObject set to represent.&#xa;&#xa;@return the UMLObject to represent." name="getUMLObject" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="uAzljZeYGZVc" type="75G7jzEHQyIY" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="fj4x3d8AjOGQ" name="getUMLView" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="ogN2DqerZhoa" type="NSfmQxIJ7H4o" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Kwi1JyPgO4Qn" comment="Sets the @ref UMLObject to represent.&#xa;&#xa;@param o The object to represent." name="setUMLObject" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="0h65w8slmDn0" type="75G7jzEHQyIY" value="" name="o" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="3Qpc7dAPXsPq" comment="Used by some child classes to get documentation.&#xa;&#xa;@return  The documentation from the UMLObject (if m_pObject is set.)" name="getDoc" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="poVDrv0pa4uX" type="dUt1TMu4e6AS" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="CmIzz3x0RmcW" comment="Used by some child classes to set documentation.&#xa;&#xa;@param doc       The documentation to be set in the UMLObject&#xa;         (if m_pObject is set.)" name="setDoc" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="NmwudJlS7Efw" type="j3HN7RojRZkd" value="" name="doc" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="7eliigFtQVqO" comment="Sets the line colour&#xa;&#xa;@param colour the new line colour" name="setLineColor" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="jVophSlp6VXm" type="YlO0XzWsjQmM" value="" name="colour" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="BkdZFTxlCKjh" comment="Sets the line width&#xa;&#xa;@param width the new line width" name="setLineWidth" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="JGZ2eKPMnBBV" type="3irjz8IKWpJ5" value="" name="width" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="duKhPpSYZ56m" name="getLineColor" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="X3XjLHReVyf7" type="aeLwrLPeS4sq" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="I2T6DcbpXtUu" name="getLineWidth" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="iwTF2Z1XaWGw" type="3irjz8IKWpJ5" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="nfYGeDOwDr0P" name="getUsesDiagramLineColour" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="UZEzSit8dMNf" type="8c3ctJdhRSz0" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="tMAUtOOg4uxg" name="getUsesDiagramLineWidth" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="6LcJAbieAubb" type="8c3ctJdhRSz0" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="bVjEp7rjTzBM" name="setUsesDiagramLineColour" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="NX1RRw7XFipP" type="8c3ctJdhRSz0" value="" name="usesDiagramLineColour" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="HX2RQd2z8mDy" name="setUsesDiagramLineWidth" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="r2fI1qdOLeom" type="8c3ctJdhRSz0" value="" name="usesDiagramLineWidth" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="atIpb7CqeEI2" comment="Write property of m_nId." name="setID" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="sI1y4CwtCZCB" type="Z6hEnPU23Y7J" value="" name="id" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="PpakRMV1Fnop" comment="Read property of m_nId." name="getID" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="u0fWFvZ5EY3G" type="Z6hEnPU23Y7J" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="lyAvXK7v9fda" name="saveToXMI" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="ZD1gsfErll5h" type="ctbqRd7AbF66" value="" name="qDoc" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="UwBGhHvnMNCA" type="CKFlXJq4UrkK" value="" name="qElement" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="CAYrilws3Cca" name="loadFromXMI" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="jtm5GxDQ7lIn" type="8c3ctJdhRSz0" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="TSeyHMIkIU0z" type="CKFlXJq4UrkK" value="" name="qElement" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="protected" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="VEeYOE7sglov" comment="Initialize members." name="init" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="66fOadOHW8Kl" type="gagrSVXhWyp2" value="" name="view" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="5XBBHTwmgaI2" type="5YjeZvZuk59w" value="" name="type" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="Xm2rXXJVq8Z0" xmi.id="hJTk1XEbNcXg" parent="mXQazKd6zVtQ" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="rcdCEBsSYc9k" name="Q3CanvasRectangle" />
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="Xm2rXXJVq8Z0" xmi.id="6fUJ932AvJ2s" parent="rcdCEBsSYc9k" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="3DFEv8HDDIiB" name="QMouseEvent" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="fLSokCZ5xXd4" name="QSize" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="6hxMGqTohpou" name="QAction" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="BXYb60nz4mvi" name="AlignToolBar" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="23T1g7UXrEXj" name="CodeDocument" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="jmP4cB2lgYKm" name="CodeGenerator" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="3sNkZxlu3tDM" name="CodeGenerationPolicy" >
       <UML:Namespace.ownedElement>
        <UML:Class visibility="public" isSpecification="false" namespace="3sNkZxlu3tDM" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="7hakjSHMNTJk" name="CommentStyle" />
        <UML:Class visibility="public" isSpecification="false" namespace="3sNkZxlu3tDM" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="BjD4PMwq797Q" name="IndentationType" />
        <UML:Class visibility="public" isSpecification="false" namespace="3sNkZxlu3tDM" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="UTXLuYN3FZ5d" name="NewLineType" />
        <UML:Class visibility="public" isSpecification="false" namespace="3sNkZxlu3tDM" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="0z3gtxvNQQgL" name="ModifyNamePolicy" />
        <UML:Class visibility="public" isSpecification="false" namespace="3sNkZxlu3tDM" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="oNNFo1Yj3uve" name="OverwritePolicy" />
       </UML:Namespace.ownedElement>
      </UML:Class>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Y7mcsfIsijtN" name="CodeGenPolicyExt" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="qNugaPNJBnNl" name="DocWindow" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="nMgV5ZqwviaV" name="UMLListView" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="9gsnRb7o0Y97" name="UMLView" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="7xmHi72fVXGS" name="WorkToolBar" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="MdvIly5WKjzQ" name="SettingsDlg" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="HqKCYsfepPvW" name="UMLViewImageExporterAll" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="H8FcrF283KIZ" name="KPlayerPopupSliderAction" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="CxBzM6Vr0crS" name="XhtmlGenerator" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="1HF0aIhrQxTF" name="KActionMenu" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ATOBlgixcuxw" name="KRecentFilesAction" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="yQny3cR2re0R" name="KToggleAction" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="uiHIdkXlCtwx" name="KTabWidget" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="YctAWo4VEqTF" name="KMenu" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="SsGKUGjOy0eZ" name="KMenuBar" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="jCKv3EqbrhjL" name="KUndoStack" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="VoqieIx68BOd" name="QStackedWidget" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="S8zO8eyroGkr" name="QToolButton" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="TZRKGAfkyUSc" name="QCustomEvent" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="kNhsZ3Tz9TNI" name="QDockWidget" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="5J7tYqi1P9Jd" name="QVBoxLayout" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="KwNIOnt8BY1i" name="QKeyEvent" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="watJjAv16IKT" name="QMimeData" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="4BbFjaxI3c1y" name="QUndoCommand" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="e2xy7oq1OhJ6" name="QUndoView" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="pE7uURNYaylH" comment="The base class for UML application windows. It sets up the main&#xa;window and reads the config file as well as providing a menubar, toolbar&#xa;and statusbar. A list of UMLView instances creates the center views, which are connected&#xa;to the window's Doc object. The handling of views is realized with two different widgets:&#xa;  - stack widget&#xa;  - tab widget&#xa;The current view handling is set as an option. &#xa;UMLApp reimplements the methods that KMainWindow provides for main window handling and supports&#xa;full session management as well as using KActions.&#xa;&#xa;@see KMainWindow&#xa;@see KApplication&#xa;@see KConfig&#xa;&#xa;@author Paul Hensgen &lt;phensgen@techie.com>&#xa;Bugs and comments to umbrello-devel@kde.org or http://bugs.kde.org" name="UMLApp" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="IkigP1mFDu9i" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Attribute visibility="protected" isSpecification="false" xmi.id="EpREJUyNvvEq" type="0SA32lL41vf8" name="m_commoncodegenpolicy" />
        <UML:Attribute visibility="private" isSpecification="false" ownerScope="classifier" xmi.id="zUFUfJKCCqo5" type="XDcd3ZuYadje" comment="Variable for holding the last created instance of this class." name="s_instance" />
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="EllVr0lTSw43" type="E8rnR9U0bJxY" comment="For selecting the active language." name="m_langSelect" />
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="LJolmjOjDdBq" type="E8rnR9U0bJxY" comment="Popup menu for zoom selection." name="m_zoomSelect" />
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="tPQceJ4Db5Bw" type="UrHzDI7BfWWb" comment="Active language." name="m_activeLanguage" />
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="jJ9xGbbpvLvH" type="w0AySeShlrAc" comment="Active code generator." name="m_codegen" />
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="IPs41a2sxRVa" type="psAonpwmcEJ5" comment="Active policy extension.&#xa;Only used for new code generators ({Cpp,Java,Ruby,D}CodeGenerator)" name="m_policyext" />
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="mUTsRNSspwjz" type="i4mKd2igxi0p" comment="The configuration object of the application." name="m_config" />
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="Et3K0WfiaP3B" type="gagrSVXhWyp2" comment="View is the main widget which represents your working area.&#xa;The View class should handle all events of the view widget.&#xa;It is kept empty so you can create your view according to your&#xa;application's needs by changing the view class." name="m_view" />
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="RlpNRpCDJf3l" type="oMiz0GbbwUdl" comment="doc represents your actual document and is created only once.&#xa;It keeps information such as filename and does the loading and&#xa;saving of your files." name="m_doc" />
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="0UboOIncBpvC" type="YmkNLCCTosyV" comment="Listview shows the current open file." name="m_listView" />
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="mwI3aJoYlNM9" type="LYsvyt7Pfwm6" comment="The widget which shows the diagrams." name="m_mainDock" />
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="f8mrvf1GDrBB" type="LYsvyt7Pfwm6" comment="Contains the UMLListView tree view." name="m_listDock" />
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="lGZODLSzGk0q" type="LYsvyt7Pfwm6" comment="Contains the documentation DocWindow widget." name="m_documentationDock" />
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="2nOnAjvqpffk" type="LYsvyt7Pfwm6" comment="Contains the undo/redo viewer widget." name="m_cmdHistoryDock" />
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="Ke0XV9hGQGeb" type="LYsvyt7Pfwm6" comment="Contains the property browser widget" name="m_propertyDock" />
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="Z7YppYfrL2dW" type="ayYaUmdlYiq6" comment="Documentation window." name="m_pDocWindow" />
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="NjNlxzMX6uMu" type="jYKYDzGVbE26" comment="Undo / Redo Viewer" name="m_pQUndoView" />
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="ZXYAlZH6GcsE" type="T2lo2MIlscJ3" comment="Refactoring assistant." name="m_refactoringAssist" />
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="cfsUH9Ypg4zP" type="ZEle77Ya7HM7" name="fileOpenRecent" />
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="dEWsoO6Oap0f" type="YC7RYuSE9Stn" name="filePrint" />
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="wYF2na9PF0uU" type="YC7RYuSE9Stn" name="editCut" />
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="9QJoSHD4TjwI" type="YC7RYuSE9Stn" name="editCopy" />
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="50eepeJjAXlv" type="YC7RYuSE9Stn" name="editPaste" />
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="7tLKrDm0d4o3" type="YC7RYuSE9Stn" name="editUndo" />
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="L07oj14n1iPq" type="YC7RYuSE9Stn" name="editRedo" />
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="uN2VRoYmoeYW" type="KiaSDJOIAjc1" name="newDiagram" />
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="fbJhHgXcM52a" type="YC7RYuSE9Stn" name="viewClearDiagram" />
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="P11EfXiK8z1Q" type="POsZ5TbzqdUH" name="viewSnapToGrid" />
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="fX01c2b1RSZW" type="POsZ5TbzqdUH" name="viewShowGrid" />
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="vAUjly0AzzMe" type="YC7RYuSE9Stn" name="viewExportImage" />
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="W4xf1y3gT3g6" type="YC7RYuSE9Stn" name="viewProperties" />
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="5F5UhezaoTJZ" type="YC7RYuSE9Stn" name="zoom100Action" />
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="tRlMURQXgW0M" type="PHiNE2zl5wO6" name="zoomAction" />
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="AzwxQEUnTCAi" type="YC7RYuSE9Stn" name="m_langAct" />
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="DARI4nOxC7Ie" type="YC7RYuSE9Stn" name="deleteSelectedWidget" />
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="Yi9DC9ZN6TIW" type="YC7RYuSE9Stn" name="deleteDiagram" />
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="zoaBuspSZwdl" type="fmK9xSpAaESf" name="m_newSessionButton" />
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="RFG2RghQSHbK" type="6A6CeOhJBzQ6" name="m_diagramMenu" />
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="8OlhLOQPZXbD" type="POsZ5TbzqdUH" name="viewToolBar" />
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="vGU4Fv8h8Mja" type="POsZ5TbzqdUH" name="viewStatusBar" />
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="0OyRdYljuWQF" type="xfXjVTCDe51v" name="toolsbar" />
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="D0n8WBLP0wrK" type="2QN9n4hnSfE3" name="m_clipTimer" />
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="8WaYesEeIbl3" type="2QN9n4hnSfE3" name="m_copyTimer" />
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="3jv4fnOnHwLt" type="fSp5637J1uPW" name="m_alignToolBar" />
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="oYY59H6nkvsq" type="8c3ctJdhRSz0" comment="True if the application is opening an existing document" name="m_loading" />
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="7LeOGxG4Vm7f" type="xz7wrVSvEMxt" comment="Shows, and is parent of, all the UMLViews (diagrams)&#xa;if tabbed diagrams are not enabled." name="m_viewStack" />
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="3EQn7Ib4Ghz7" type="SNDqFTdIatYX" comment="Shows, and is parent of, all the UMLViews (diagrams)&#xa;if tabbed diagrams are enabled." name="m_tabWidget" />
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="qVZKHhxKtN60" type="CR2OlxHsHtFX" comment="Layout supports the dynamic management of the diagram representation (tabbed/stacked)&#xa;if tabbed diagrams is enabled it contains m_tabWidget&#xa;if tabbed diagrams is disabled it contains m_viewStack" name="m_layout" />
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="df3tM21WR1uD" type="dUt1TMu4e6AS" comment="Default mime type to use for image export." name="m_imageMimeType" />
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="16JsRPr42syN" type="z93G2GnrlK90" comment="the global UML settings dialog" name="m_dlg" />
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="ounYFwWE2p7T" type="uxtJyoUvvY9y" comment="The UMLViewImageExporterAll used to export all the views." name="m_imageExporterAll" />
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="HUGD0Q9mIwIX" type="CwXFoTcgQTzN" comment="The running XHTML documentation generator. null when no generation is&#xa;running" name="m_xhtmlGenerator" />
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="GcFg5C1NeIYc" type="spkscrJplo2Z" comment="UndoStack&#xa;used to store actions, to provide Undo/Redo feature." name="m_pUndoStack" />
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="gfNwZfUPSCH5" type="8c3ctJdhRSz0" comment="Macro creation flag" name="m_hasBegunMacro" />
        <UML:Operation stereotype="constructor" visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="GGAT8HBSlQKB" name="UMLApp" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="m2KXQejq6qxH" type="tt3Q9VNPmVtu" value="" name="parent" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="U2lD46RvxSL6" comment="Standard deconstructor." name="~ UMLApp" />
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" ownerScope="classifier" isRoot="false" xmi.id="yhUiCLazNvUm" comment="Get the last created instance of this class." name="app" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="h8ZeaslWXDEi" type="XDcd3ZuYadje" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Ypfti9fFNItO" comment="Opens a file specified by commandline option." name="openDocumentFile" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Vmjq2cCpM7Dl" type="RUoyh1gFoL6W" value="" name="url" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="iErSnakE4YAl" comment="Calls the UMLDoc method to create a new Document." name="newDocument" />
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="XpyL85pdrZRr" comment="Returns a pointer to the current document connected to the&#xa;KMainWindow instance.&#xa;Used by the View class to access the document object's methods." name="getDocument" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="9cgVjtGP66rr" type="oMiz0GbbwUdl" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="gZ3l8DUd0Tz9" comment="Returns a pointer to the list view.&#xa;&#xa;@return  The listview being used." name="getListView" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="kDsoHifvHieN" type="YmkNLCCTosyV" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="t91uay36knT6" comment="Returns the toolbar being used.&#xa;&#xa;@return  The toolbar being used." name="getWorkToolBar" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="ner2MTQEcP8A" type="xfXjVTCDe51v" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="N9G7whBuKibo" comment="Sets whether the program has been modified.&#xa;This will change how the program saves/exits.&#xa;&#xa;@param _m        true - modified." name="setModified" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Co1qr3kchZe2" type="8c3ctJdhRSz0" value="" name="_m" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="22GdRMnoV2wP" comment="Set whether to allow printing.&#xa;It will enable/disable the menu/toolbar options.&#xa;&#xa;@param enable    Set whether to allow printing." name="enablePrint" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="j5J2otqyhrmY" type="8c3ctJdhRSz0" value="" name="enable" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="sUAY3mY4pofG" comment="Set whether to allow printing.&#xa;It will enable/disable the menu/toolbar options.&#xa;&#xa;@param enable    Set whether to allow printing." name="enableUndo" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="8S5dSz2A4KCq" type="8c3ctJdhRSz0" value="" name="enable" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="B2msrXOi1WG3" comment="Set whether to allow printing.&#xa;It will enable/disable the menu/toolbar options.&#xa;&#xa;@param enable    Set whether to allow printing." name="enableRedo" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Io77amOgCRHd" type="8c3ctJdhRSz0" value="" name="enable" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="QJnSbzHkz3cq" name="getDocWindow" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="SCmcd3F1L2Uu" type="ayYaUmdlYiq6" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="zlfymFnLELvg" comment="Returns the undo state.&#xa;&#xa;@return  True if Undo is enabled." name="getUndoEnabled" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="6WPeCGjeSVE4" type="8c3ctJdhRSz0" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="XS5sUXkUGPQ3" comment="Returns the redo state.&#xa;&#xa;@return  True if Redo is enabled." name="getRedoEnabled" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="dDOrXHVbnvFz" type="8c3ctJdhRSz0" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="9wbbSnfxFjpi" comment="Returns the paste state.&#xa;&#xa;@return  True if Paste is enabled." name="getPasteState" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="GXAXxaYamuPJ" type="8c3ctJdhRSz0" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Bsuwl7tu4UWU" comment="Returns the state on Cut/Copy.&#xa;&#xa;@return  True if Cut/Copy is enabled." name="getCutCopyState" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="F9RVsEB7lLcg" type="8c3ctJdhRSz0" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="t8Ef2dyBUq7F" comment="Gets the appropriate CodeGenerator.&#xa;&#xa;@return  Pointer to the CodeGenerator." name="getGenerator" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="3LjmgJTaRhFR" type="w0AySeShlrAc" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="JCcn0j2wjAuB" comment="Determines if SimpleCodeGenerator is active.&#xa;&#xa;@return  true if SimpleCodeGenerator is active." name="isSimpleCodeGeneratorActive" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="oKqaB1CCMtz3" type="8c3ctJdhRSz0" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="CSbb7o2QyeDz" comment="Set the current generator for this app.&#xa;If giveWarning is true, then a popup box warning that the&#xa;code generation library is out-of-date will show if you&#xa;attempt to set the generator to NULL.&#xa;&#xa;@param gen           Pointer to the CodeGenerator to set.&#xa;@param giveWarning   True to enable out-of-date warning." name="setGenerator" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="NEv4OoDB83lI" type="w0AySeShlrAc" value="" name="gen" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="4vUPmTQyt1X1" type="8c3ctJdhRSz0" value="" name="giveWarning" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="pZRmDdlYpeaD" comment="Creates a new code generator for the given active language.&#xa;&#xa;@return  Pointer to the CodeGenerator created." name="createGenerator" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="SnMbo7tr0NGm" type="w0AySeShlrAc" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="rgikfDjSmBEx" comment="Auxiliary function for UMLDoc::loadExtensionsFromXMI():&#xa;Return the code generator of the given language if it already&#xa;exists; if it does not yet exist then create it and return&#xa;the newly created generator. It is the caller's responsibility&#xa;to load XMI into the newly created generator." name="setGenerator" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="EYUDuixlMeT1" type="w0AySeShlrAc" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="mzVbe3m6q9fd" type="UrHzDI7BfWWb" value="" name="pl" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="rBReMgb6d5hF" comment="Call the refactoring assistant on a classifier.&#xa;&#xa;@param classifier  Pointer to the classifier to refactor." name="refactor" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="ix92ba1TlS55" type="6RKvazYnW00Q" value="" name="classifier" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="6gBijqxqIFjq" comment="Call the code viewing assistant on a given UMLClassifier.&#xa;&#xa;@param classifier  Pointer to the classifier to view." name="viewCodeDocument" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="DHdjHd7xZGxA" type="6RKvazYnW00Q" value="" name="classifier" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="qybaOgfVLpB4" comment="Sets the state of the view properties menu item.&#xa;&#xa;@param bState  Boolean, true to enable the view properties item." name="setDiagramMenuItemsState" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="f6svMbmZqNG5" type="8c3ctJdhRSz0" value="" name="bState" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="zN0YbxgPtIzI" comment="Returns the widget used as the parent for UMLViews.&#xa;@return  The main view widget." name="getMainViewWidget" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="yflJSwM72C1M" type="tt3Q9VNPmVtu" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="mltc87g5Ugb5" comment="Puts this view to the top of the viewStack, i.e. makes it&#xa;visible to the user.&#xa;&#xa;@param view   Pointer to the UMLView to push." name="setCurrentView" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="cITVYSlW5WoX" type="gagrSVXhWyp2" value="" name="view" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="QAdRMen6PfjX" comment="Get the current view.&#xa;This may return a null pointer (when no view was previously&#xa;specified.)&#xa;" name="getCurrentView" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="mPbF3CIfSl90" type="gagrSVXhWyp2" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="EuXJRJprTSIn" name="setImageMimeType" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="15zUVFFZH720" type="m1fEmoDyikG7" value="" name="mimeType" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="g0SeaAeKBHWw" name="getImageMimeType" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="5julRAtSDqui" type="m1fEmoDyikG7" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="5AHLFJJwIlas" comment="Carries out the cut/copy command with different action performed&#xa;depending on if from view or list view.&#xa;Cut/Copy are the same.  It is up to the caller to delete/cut the selection..&#xa;&#xa;If the operation is successful, the signal sigCutSuccessful() is emitted.&#xa;&#xa;Callers should connect to this signal to know what to do next." name="editCutCopy" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="29IGxAy2KELa" type="8c3ctJdhRSz0" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="wCA5TgzWOuGp" type="8c3ctJdhRSz0" value="" name="bFromView" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="VfWnQ4dKFnQi" comment="Return the tab widget." name="tabWidget" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="4UXOgtwCYQzy" type="SNDqFTdIatYX" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="TbJiOhOo4bcK" comment="Returns the current text in the status bar.&#xa;&#xa;@return The text in the status bar." name="getStatusBarMsg" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="2Gac969DYhaF" type="dUt1TMu4e6AS" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="aUR6vO4MzL4M" comment="Returns the default code generation policy." name="getCommonPolicy" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="1oKZTso1MD7F" type="0SA32lL41vf8" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="cAbZVfvU64X6" comment="Sets the CodeGenPolicyExt object." name="setPolicyExt" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="665RJCgtKGTo" type="psAonpwmcEJ5" value="" name="policy" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="vMIzQp5DfE1Q" comment="Returns the CodeGenPolicyExt object." name="getPolicyExt" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="3wCdAThFZmgr" type="psAonpwmcEJ5" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="wKiHaB5UWNTw" comment="Removes all entries from the UndoStack and RedoStack and disables the&#xa;undo and redo actions." name="clearUndoStack" />
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="AXApl9Fm5PQE" comment="Undo last command" name="undo" />
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="s7RSr7HnPz40" comment="Redo last 'undoed' command" name="redo" />
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="99UfUvZeShRD" comment="Execute a command and pushit in the stack." name="executeCommand" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="cd52c82lFUOk" type="rgyu5O6wTXMI" value="" name="cmd" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="PyMqdo1SSzNW" comment="Begin a U/R command macro" name="BeginMacro" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="LRSmzo4bP8b1" type="j3HN7RojRZkd" value="" name="text" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="EblT57BT3WHh" comment="End an U/R command macro" name="EndMacro" />
        <UML:Operation visibility="protected" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="KI9kGUGbugMt" name="keyPressEvent" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="jLAnrRS9hZux" type="UOStU2tidcCj" value="" name="e" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="protected" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="28XwptnHFD9k" name="keyReleaseEvent" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="F0StccaJyi4n" type="UOStU2tidcCj" value="" name="e" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="protected" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="9Uxq4pm4xJyk" comment="Event handler to receive custom events.&#xa;It handles events such as exporting all views from command line (in&#xa;that case, it executes the exportAllViews method in the event)." name="customEvent" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="g0fbHdMRMMrJ" type="CZ28H5wQZrEd" value="" name="e" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="protected" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="TyRcYSLjzLrG" comment="Helper method for handling cursor key release events (refactoring)." name="handleCursorKeyReleaseEvent" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Qle0csbGrHq8" type="UOStU2tidcCj" value="" name="e" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="protected" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="sAYFUPWxLxZs" comment="Save general Options like all bar positions and status&#xa;as well as the geometry and the recent file list to&#xa;the configuration file." name="saveOptions" />
        <UML:Operation visibility="protected" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="NsbMBQcaCGam" comment="Read general Options again and initialize all variables&#xa;like the recent file list." name="readOptions" />
        <UML:Operation visibility="protected" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="691vOp4HzcWT" comment="Initializes the KActions and the status bar of the application &#xa;and calls setupGUI()." name="initActions" />
        <UML:Operation visibility="protected" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="z2OIxvAKnlew" comment="Sets up the statusbar for the main window by&#xa;initialzing a statuslabel." name="initStatusBar" />
        <UML:Operation visibility="protected" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="CEWMS48YE7Uc" comment="Creates the centerwidget of the KMainWindow instance and&#xa;sets it as the view." name="initView" />
        <UML:Operation visibility="protected" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="wWtt6NM5NkLK" comment="queryClose is called by KMainWindow on each closeEvent of a&#xa;window. Counter to the default implementation (which only&#xa;returns true), this calls saveModified() on the document object&#xa;to ask if the document shall be saved if Modified; on cancel&#xa;the closeEvent is rejected.&#xa;@see KMainWindow#queryClose&#xa;@see KMainWindow#closeEvent&#xa;&#xa;@return  True if window may be closed." name="queryClose" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="fWcQFGLPSrlu" type="8c3ctJdhRSz0" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="protected" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="wsRAzvkuPcnV" comment="queryExit is called by KMainWindow when the last&#xa;window of the application is going to be closed during&#xa;the closeEvent().  In contrast to the default&#xa;implementation that just returns true, this calls&#xa;saveOptions() to save the settings of the last&#xa;window's properties.&#xa;@see KMainWindow#queryExit&#xa;@see KMainWindow#closeEvent&#xa;&#xa;@return  True if window may be closed." name="queryExit" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="z8YNqtfUNIud" type="8c3ctJdhRSz0" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="protected" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="WF2z5mt1eK9b" comment="Saves the window properties for each open window&#xa;during session end to the session config file,&#xa;including saving the currently opened file by a&#xa;temporary filename provided by KApplication.&#xa;@see KMainWindow#saveProperties" name="saveProperties" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="E4tsN2RYuv9L" type="TTjqjcRGpSDu" value="" name="cfg" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="protected" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="CCmZmamF2U3j" comment="Reads the session config file and restores the&#xa;application's state including the last opened files and&#xa;documents by reading the temporary files saved by&#xa;saveProperties()&#xa;@see KMainWindow#readProperties" name="readProperties" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="iQ8aLHtVUg2E" type="6TztvAo9Ffzc" value="" name="cfg" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="protected" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="62xJgwtOL1wg" comment="Updates the Menu for language selection and sets the&#xa;active language. If no active language is found or if it is&#xa;not one of the registered languages it tries to fall back&#xa;to Cpp" name="updateLangSelectMenu" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="JpAlTCzizQwG" type="UrHzDI7BfWWb" value="" name="activeLanguage" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="suboqqcusaDY" comment="Reads the activeLanguage from the KConfig and calls updateLangSelectMenu()" name="initGenerator" />
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="W4ur5oWMce75" comment="Runs the code generation wizard." name="generationWizard" />
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="o4lmSi2Lae7O" comment="Clears the document in the actual view to reuse it as the new&#xa;document." name="slotFileNew" />
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="UhGKHRrmVjbb" comment="Open a file and load it into the document." name="slotFileOpen" />
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Y5x8j3BW7xIa" comment="Opens a file from the recent files menu." name="slotFileOpenRecent" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="dKtByyaQfolx" type="RUoyh1gFoL6W" value="" name="url" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="GahlJIMpOIv5" comment="Save a document." name="slotFileSave" />
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="L7bQ4tyhErsA" comment="Save a document by a new filename." name="slotFileSaveAs" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="nQZTFIOVs3E9" type="8c3ctJdhRSz0" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="LZzhrsnAzOa3" comment="Asks for saving if the file is modified, then closes the current&#xa;file and window." name="slotFileClose" />
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="GZiSOZcCx9dC" comment="Print the current file." name="slotFilePrint" />
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="RzfJ2sTLRQ3I" comment="Closes all open windows by calling close() on each&#xa;memberList item until the list is empty, then quits the&#xa;application.  If queryClose() returns false because the&#xa;user canceled the saveModified() dialog, the closing&#xa;aborts." name="slotFileQuit" />
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="IqSGC0HSX0sw" comment="Exports the current model to docbook in a subdir of the&#xa;current model directory named from the model name.&#xa;@todo Let the user chose the destination directory and&#xa;name, using network transparency." name="slotFileExportDocbook" />
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="XV6Uchf4gINg" comment="Exports the current model to XHTML in a subdir of the&#xa;current model directory named from the model name.&#xa;@todo Let the user chose the destination directory and&#xa;name, using network transparency." name="slotFileExportXhtml" />
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Ao1ZC4rTsHj3" comment="Put the marked text/object into the clipboard and remove&#xa;it from the document." name="slotEditCut" />
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="GyTnwMhTpnwR" comment="Put the marked text/object into the clipboard." name="slotEditCopy" />
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="SbV8rrm0doZq" comment="Paste the clipboard into the document." name="slotEditPaste" />
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="sPHjg0muwFit" comment="Changes the statusbar contents for the standard label&#xa;permanently, used to indicate current actions.&#xa;@param text   The text that is displayed in the statusbar" name="slotStatusMsg" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="bPMQBIsdrLkh" type="j3HN7RojRZkd" value="" name="text" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="CWhqKEeBdvuI" comment="Create this view." name="slotClassDiagram" />
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="teCptuiTI3tT" comment="Create this view." name="slotSequenceDiagram" />
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Lj4B5oqFJV5b" comment="Create this view." name="slotCollaborationDiagram" />
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="jhkNcefVGrJ8" comment="Create this view." name="slotUseCaseDiagram" />
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="k1b24UTOCXXF" comment="Create this view." name="slotStateDiagram" />
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="KNUbsYCZFxws" comment="Create this view." name="slotActivityDiagram" />
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ZZLoPew9gX9i" comment="Create this view." name="slotComponentDiagram" />
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="za6B5dQPytyo" comment="Create this view." name="slotDeploymentDiagram" />
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="R9Og6KYdssRH" comment="Create this view." name="slotEntityRelationshipDiagram" />
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="WNOCsXvs7z1C" comment="Left Alignment" name="slotAlignLeft" />
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="bQaZJWOkfmOl" comment="Right Alignment" name="slotAlignRight" />
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="4vNwnmDJAbU0" comment="Top Alignment" name="slotAlignTop" />
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="6NsBMuMxKuXb" comment="Bottom Alignment" name="slotAlignBottom" />
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="QtJ6fhpjaCeN" comment="Vertical Middle Alignment" name="slotAlignVerticalMiddle" />
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="zrf7R97VUyhq" comment="Horizontal Middle Alignment" name="slotAlignHorizontalMiddle" />
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="s3mAxHjNA2Tn" comment="Vertical Distribute Alignment" name="slotAlignVerticalDistribute" />
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="hHUIT8fQyKXP" comment="Horizontal Distribute Alignment" name="slotAlignHorizontalDistribute" />
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="RduvbZkRaWbX" comment="Notification of changed clipboard data." name="slotClipDataChanged" />
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="lItvKKg1bAJ3" comment="Slot for enabling cut and copy to clipboard." name="slotCopyChanged" />
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="JxTFHzehcWcD" comment="Shows the global preferences dialog." name="slotPrefs" />
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="6KcgqBCbT3Un" comment="Commits the changes from the global preferences dialog." name="slotApplyPrefs" />
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="NAoxL60c3RrI" comment="Register new views (aka diagram) with the GUI so they show up&#xa;in the menu." name="slotUpdateViews" />
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="QTz2xaD3upij" comment="Generate code for all classes." name="generateAllCode" />
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="0sITvnEGv1BE" comment="Set the language for which code will be generated.&#xa;&#xa;@param pl    The name of the language to set" name="setActiveLanguage" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="79q8bfQ16O44" type="UrHzDI7BfWWb" value="" name="pl" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="wF5q3nX3dqVW" comment="Get the language for import and code generation." name="getActiveLanguage" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="bjlWiwlp6Zvh" type="UrHzDI7BfWWb" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="FMiLikPeyVS1" comment="Return true if the active language is case sensitive." name="activeLanguageIsCaseSensitive" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="G02soVOPD7vv" type="8c3ctJdhRSz0" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="4gl8GenTyVmg" comment="Return the target language depedent scope separator." name="activeLanguageScopeSeparator" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="ECIAflBtjBjX" type="dUt1TMu4e6AS" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="h8wuFrpHWYPk" comment="Return the default code generation language as configured by KConfig.&#xa;If the activeLanguage is not found in the KConfig then use Uml::pl_Cpp&#xa;as the default." name="getDefaultLanguage" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="DCDBgzqs982m" type="UrHzDI7BfWWb" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="rBeaMN53T1xh" comment="Menu selection for clear current view." name="slotCurrentViewClearDiagram" />
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="rlyLJM5WWIgA" comment="Menu selection for current view snap to grid property." name="slotCurrentViewToggleSnapToGrid" />
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="FW0Pe29UBn4Y" comment="Menu selection for current view show grid property." name="slotCurrentViewToggleShowGrid" />
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="B8Ze7VJwGGHX" comment="Menu selection for exporting current view as an image." name="slotCurrentViewExportImage" />
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="aM26ciFsCFFq" comment="Menu selection for exporting all views as images." name="slotAllViewsExportImage" />
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="GOIRCNxNTVza" comment="Menu selection for current view properties." name="slotCurrentViewProperties" />
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="yHXEXoj79lBl" comment="Import classes menu selection." name="slotImportClasses" />
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="RQbdeqSuFkJP" comment="Import project menu selection." name="slotImportProject" />
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="5FkYkh9iyguV" comment="Class wizard menu selection." name="slotClassWizard" />
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="SbcbLoLmCuOq" comment="Calls the active code generator to add its default datatypes." name="slotAddDefaultDatatypes" />
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="lqiyY2NeH7Az" comment="The displayed diagram has changed." name="slotCurrentViewChanged" />
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="oJfnxXGO8rxT" comment="The snap to grid value has been changed." name="slotSnapToGridToggled" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="dGEpBcewSMsy" type="8c3ctJdhRSz0" value="" name="gridOn" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="MFcdKna64Dr0" comment="The show grid value has been changed." name="slotShowGridToggled" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="k8OrxLKacWNl" type="8c3ctJdhRSz0" value="" name="gridOn" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="81hYMXXim7K4" comment="Select all widgets on the current diagram." name="slotSelectAll" />
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="uuAx62xq8Lf5" comment="Deletes the selected widget." name="slotDeleteSelectedWidget" />
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="eyfEU0zd2e9O" comment="Deletes the current diagram.&#xa;@param tab   Widget's tab to close" name="slotDeleteDiagram" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Bg6voOzgJ8dP" type="tt3Q9VNPmVtu" value="" name="tab" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="8aDGttLYrymL" comment="Set the zoom factor of the current diagram.&#xa;&#xa;@param zoom  Zoom factor in percentage." name="setZoom" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="ykwyO6KYkPTY" type="p9rIb5vfrY7b" value="" name="zoom" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="nRF4ZqTfRfvK" comment="Set the zoom factor of the current diagram.&#xa;&#xa;@param action  Action which is called." name="slotSetZoom" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="WEsNCdg8Nb5j" type="YC7RYuSE9Stn" value="" name="action" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="hPHRolycADgh" comment="Connected to by the KPlayerSliderAction zoomAction, a value of between 300&#xa;and 2200 is scaled to zoom to between 9% and 525%.&#xa;The min and max values of the slider are hard coded in KPlayerSliderAction for now." name="slotZoomSliderMoved" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="18MSlHlHVbcf" type="p9rIb5vfrY7b" value="" name="value" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="EIlZtqJYGay2" comment="Set zoom to 100%." name="slotZoom100" />
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="JwcT7HA8PWb8" comment="Prepares the zoom menu for display." name="setupZoomMenu" />
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="lKPEv1rAHdh9" comment="Reverts the document back to the state it was prior to the&#xa;last action performed by the user." name="slotEditUndo" />
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="R0hfZfisbIKi" comment="Reverts the document back to the state it was prior to the&#xa;last undo." name="slotEditRedo" />
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ZSpwzO4iiTxd" comment="Searches for a menu with the given name.&#xa;&#xa;@param name  The name of the menu to search for (name, not text)" name="findMenu" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="h1HPTC2tymdK" type="E8rnR9U0bJxY" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="SmlkNTtpRYS0" type="j3HN7RojRZkd" value="" name="name" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="DU9e3ZdFiS29" comment="Called when the tab has changed.&#xa;@param tab   The changed tab widget" name="slotTabChanged" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="bW9Cp4lW40tV" type="tt3Q9VNPmVtu" value="" name="tab" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="CuO8g0StUZVV" comment="Make the tab on the left of the current one the active one." name="slotChangeTabLeft" />
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="76kpYny7H5I7" comment="Make the tab on the right of the current one the active one." name="slotChangeTabRight" />
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="83bA1TfBN1H1" comment="Move the current tab left." name="slotMoveTabLeft" />
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="1isUFNzMSiB0" comment="Move the current tab right." name="slotMoveTabRight" />
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="T76kDOpJPRTQ" name="getConfig" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="MLxlkQBcYkrg" type="TcCvKMunT0Wg" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="a5pBBSzf49YN" comment="This slot deletes the current XHTML documentation generator as soon as&#xa;this one signals that it has finished.&#xa;@param status true if successful else false" name="slotXhtmlDocGenerationFinished" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="TQ8xOebk0ZVk" type="8c3ctJdhRSz0" value="" name="status" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="zeNWOCCzI18T" comment="Slots for connection to the QActions of the m_langSelect menu." name="setLang_actionscript" />
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="R56TCdog3xdQ" name="setLang_ada" />
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ZCAZleIjIdFf" name="setLang_cpp" />
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="nPe5OmXppbI1" name="setLang_csharp" />
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="E7fG2IebVo9E" name="setLang_d" />
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="QRxj2COpb0tx" name="setLang_idl" />
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="kOmZz3YC8EQA" name="setLang_java" />
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="U4jxqsCFH7wJ" name="setLang_javascript" />
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="II7rI0p0ObZL" name="setLang_mysql" />
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="c5XkHvsmzcho" name="setLang_pascal" />
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Sr3kzz1HH88X" name="setLang_perl" />
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="8vXUV4q77NqP" name="setLang_php" />
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="HiBGIq2li3Th" name="setLang_php5" />
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="0UwHb2mhyJCT" name="setLang_postgresql" />
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="L2aTNOse71tN" name="setLang_python" />
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="pv6XzZEx2AFb" name="setLang_ruby" />
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="BzI9HUccUA3s" name="setLang_sql" />
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ZtWesPziJ6FG" name="setLang_tcl" />
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="dSDdaQElQVuf" name="setLang_xmlschema" />
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="wV07KmAWYv1N" comment="Helper method to create the zoom actions." name="createZoomAction" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="fxABqBZmvN8a" type="YC7RYuSE9Stn" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="vkqOgvP1CDky" type="p9rIb5vfrY7b" value="" name="zoom" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="u8f6mrugMtne" type="p9rIb5vfrY7b" value="" name="currentZoom" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="IXZSiKObQ4fA" comment="Helper method to reset the status bar message." name="resetStatusMsg" />
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="vZrFScu6Y4HO" comment="Helper method to setup the programming language action." name="setProgLangAction" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Eo87CGhSlHvS" type="UrHzDI7BfWWb" value="" name="pl" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="ZH1zLg8EDzSe" type="j3HN7RojRZkd" value="" name="name" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="ZMk7OzUaociy" type="j3HN7RojRZkd" value="" name="action" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" ownerScope="classifier" isRoot="false" xmi.id="kZlLdwGMDPJT" comment=" Returns whether we can decode the given mimesource" name="canDecode" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="mKTzjkRjficq" type="8c3ctJdhRSz0" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="aZTY0y6kVr46" type="0uHvDCCUZ2Ya" value="" name="mimeSource" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="smKRpr1PQSvQ" comment="Reads from the config file the options state.&#xa;Not in @ref readOptions as it needs to be read earlier than some&#xa;of the other options, before some items are created." name="readOptionState" />
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Q18utC0fWTeD" comment="Initialize Qt's global clipboard support for the application." name="initClip" />
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="C3wrlWfdJy48" comment="Initialize code generators at startup.&#xa;Why is this important? Because IF we don't do this, then changes&#xa;to the UML may not be synced with the saved code generation params&#xa;for those languages which arent currently active." name="initSavedCodeGenerators" />
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="p4XDWRbvSjpJ" comment="import the source files that are in fileList" name="importFiles" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="QUVtCIC669UL" type="5v1Mt4Ug6ztc" value="" name="fileList" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="protected" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="1YsmMuLcWYHZ" comment="Emitted when a cut operation is successful." name="sigCutSuccessful" />
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="XiaaIbYxcTvh" name="KXmlGuiWindow" />
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="pE7uURNYaylH" xmi.id="IkigP1mFDu9i" parent="XiaaIbYxcTvh" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="QT96Be7Ui3LE" name="QWidget" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="pluNPd16lalK" name="KUrl" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="64uTjbyTyZiz" name="QString const" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Al2Pw99A9a1j" name="QEvent" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="DrVaTH3TPboF" name="KConfigGroup" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="s8bF9sGBa8dq" name="KConfig" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="unyOHbcTeYIO" name="QStringList" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="i4mKd2igxi0p" name="KSharedConfigPtr" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="vpcUMCfFS7Ii" name="QTimer" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="YZbub5iXYIGl" name="QPoint" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="bUhlv210K6rs" name="QMenu" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="TUkJYGg9wPgO" name="UMLDoc" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Wv90SPQm0L5j" name="RefactoringAssistant" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="H7HBUneS0ho7" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Attribute visibility="protected" isSpecification="false" xmi.id="wDZQJR1FBwnQ" type="6RKvazYnW00Q" name="m_umlObject" />
        <UML:Attribute visibility="protected" isSpecification="false" xmi.id="RlyfhYfR3Dnb" type="oMiz0GbbwUdl" name="m_doc" />
        <UML:Attribute visibility="protected" isSpecification="false" xmi.id="nJ5dckFWvmuF" type="E8rnR9U0bJxY" name="m_menu" />
        <UML:Attribute visibility="protected" isSpecification="false" xmi.id="VJGrXKIuvU1n" type="Ia6JlsvZ9yAj" name="m_umlObjectMap" />
        <UML:Operation stereotype="constructor" visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="W13Ujpb5cFSp" name="RefactoringAssistant" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="gAVthXcMnEnk" type="oMiz0GbbwUdl" value="" name="doc" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="DFyJxNuTPvx8" type="6RKvazYnW00Q" value="" name="obj" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="lWBLldAPmdGT" type="tt3Q9VNPmVtu" value="" name="parent" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Bsny6bgHqebn" type="j3HN7RojRZkd" value="" name="name" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="zTFOPCU8hfRQ" name="~ RefactoringAssistant" />
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="JZq5C6WNxHJ3" name="refactor" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="szJgduUdNjzk" type="6RKvazYnW00Q" value="" name="obj" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="tUqa7HzOopR1" name="addBaseClassifier" />
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="tvOqDgs3fBkH" name="addDerivedClassifier" />
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="3EsOvp9mHxLP" name="addInterfaceImplementation" />
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="DKl17D008NrJ" name="createOperation" />
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="3hNgs7xvJnJC" name="createAttribute" />
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="dQyuMJHXb3Yi" name="editProperties" />
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="EZhKwYexD1d3" name="deleteItem" />
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="6bwNMDZzeVuy" name="objectModified" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="KNRVM3YSeUpy" type="n9VOC17QaolU" value="" name="obj" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="hMyJrqHezk1A" name="operationAdded" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="HDStfFsMZoeR" type="m8aKuJpCgEf2" value="" name="listItem" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="et3be4lQAKk2" name="operationRemoved" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="dXEImrI14ltj" type="m8aKuJpCgEf2" value="" name="listItem" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="yl4YZgxBZ0mD" name="attributeAdded" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="5YbFsKITrUlb" type="m8aKuJpCgEf2" value="" name="listItem" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="M4bOnU8lDAHk" name="attributeRemoved" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="qEvNFfZIDAX3" type="m8aKuJpCgEf2" value="" name="listItem" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="SnXIIGtcKU05" name="itemExecuted" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="QlzlEzo86dIK" type="Szod9Jha7CsN" value="" name="item" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="i9N1wpXOoJzv" type="p9rIb5vfrY7b" value="" name="column" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="protected" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ceVhqN4H710J" name="findUMLObject" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="4Fo9HoSGbrJz" type="75G7jzEHQyIY" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Xc7Lv6FVliDZ" type="1mR5QhN6rk7l" value="" name="" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="protected" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Zg5OPA9wmEGf" name="findListViewItem" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="Eo2ngJmDxpbM" type="Szod9Jha7CsN" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="KV83BJdFXROo" type="n9VOC17QaolU" value="" name="obj" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="protected" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ziJjwXOE0UIB" name="editProperties" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="otPLKn7Ya7JG" type="75G7jzEHQyIY" value="" name="obj" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="protected" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Q5RNu0irizac" name="deleteItem" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="WwqUR6fDz4WI" type="Szod9Jha7CsN" value="" name="item" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="qboQi8e6D5R6" type="75G7jzEHQyIY" value="" name="obj" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="protected" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="59xl6YNcSB4t" name="addClassifier" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Gk4FmYXc9M0p" type="6RKvazYnW00Q" value="" name="classifier" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="UcvfhNjkUhTb" type="Szod9Jha7CsN" value="" name="parent" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="DoBf0GXGyZTk" type="8c3ctJdhRSz0" value="" name="addSuper" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="81LHLJ7pw0Sb" type="8c3ctJdhRSz0" value="" name="addSub" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="LCMqtpP4cYhc" type="8c3ctJdhRSz0" value="" name="recurse" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="protected" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="oCqkmJVsIo9d" name="dragMoveEvent" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="2MSK8ZwDoKF1" type="klyMKdw6qkra" value="" name="event" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="protected" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="DsXGnuAXf6sz" name="dropEvent" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Miy1pqzXc35B" type="9paxApwLfSaQ" value="" name="event" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="protected" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="yDmDngYwT8sb" name="setVisibilityIcon" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="wmxZEX0aDwa2" type="Szod9Jha7CsN" value="" name="item" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="kXXMYcYUpIfc" type="n9VOC17QaolU" value="" name="obj" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ScY0kSgsiim3" name="showContextMenu" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Ii9nQm4v3KkZ" type="EdGiS5i5Fz0r" value="" name="" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="c3TYVSJy5swn" name="createAction" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="WjWRkXOLqh72" type="YC7RYuSE9Stn" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Kcd2IP5b8CMW" type="j3HN7RojRZkd" value="" name="text" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="TDeW3aHNAuNT" type="wQR0lBZLC0ti" value="" name="method" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="cqHPBpwfunM0" type="bJJlEhCW8Ewj" value="" name="icon" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="VoqLYBDtljP0" name="QTreeWidget" />
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="Wv90SPQm0L5j" xmi.id="H7HBUneS0ho7" parent="VoqLYBDtljP0" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="w6p9G6t4JmSW" name="QTreeWidgetItem" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="7EQ1DtdY3xOw" name="QDragMoveEvent" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ko6aZvAbFatN" name="QDropEvent" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="BwSNqFnI0jvf" name="QMap" />
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="YQyYJnd4K3cI" xmi.id="hNGcAApJ4Igv" client="Wv90SPQm0L5j" name="" />
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="w6p9G6t4JmSW" xmi.id="LhwQzaJU0Uy9" client="Wv90SPQm0L5j" name="" />
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="EcOTh0GL2tr5" xmi.id="EmjEGhNonv09" client="Wv90SPQm0L5j" name="" />
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="YQyYJnd4K3cI" xmi.id="lupZpngyME4T" client="Wv90SPQm0L5j" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="KR2QdOwaoLYX" comment="Copyright 2008  Andreas Fischer  &lt;andi.fischer@hispeed.ch>&#xa;&#xa;This program is free software; you can redistribute it and/or&#xa;modify it under the terms of the GNU General Public License as&#xa;published by the Free Software Foundation; either version 2 of&#xa;the License or (at your option) version 3 or any later version&#xa;accepted by the membership of KDE e.V. (or its successor approved&#xa;by the membership of KDE e.V.), which shall act as a proxy &#xa;defined in Section 14 of version 3 of the license.&#xa;&#xa;This program is distributed in the hope that it will be useful,&#xa;but WITHOUT ANY WARRANTY; without even the implied warranty of&#xa;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#xa;GNU General Public License for more details.&#xa;&#xa;You should have received a copy of the GNU General Public License&#xa;along with this program.  If not, see &lt;http://www.gnu.org/licenses/>.&#xa;//**&#xa;This class is a gateway to KIconLoaderfor for handling all the&#xa;used icons in umbrello. Identification is done with an enum and&#xa;then a translation to the icon name.&#xa;@author  Andreas Fischer" name="Icon_Utils" >
       <UML:Namespace.ownedElement>
        <UML:Class visibility="public" isSpecification="false" namespace="KR2QdOwaoLYX" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="W7th5kPYv32y" name="Icon_Type" />
       </UML:Namespace.ownedElement>
      </UML:Class>
      <UML:Package visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="m4CKd7jmiWUx" comment="                                                                        *&#xa;  This program is free software; you can redistribute it and/or modify  *&#xa;  it under the terms of the GNU General Public License as published by  *&#xa;  the Free Software Foundation; either version 2 of the License, or     *&#xa;  (at your option) any later version.                                   *&#xa;                                                                        *&#xa;  copyright (C) 2002-2008                                               *&#xa;  Umbrello UML Modeller Authors &lt;umbrello-devel@kde.org>                  *&#xa;//**&#xa;@author Paul Hensgen&#xa;Bugs and comments to umbrello-devel@kde.org or http://bugs.kde.org" name="Uml" >
       <UML:Namespace.ownedElement>
        <UML:Enumeration stereotype="enum" visibility="public" isSpecification="false" namespace="m4CKd7jmiWUx" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="haYjKnMhj4qZ" name="Model_Type" >
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="haYjKnMhj4qZ" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="mfx8lADYDPso" name="mt_Logical" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="haYjKnMhj4qZ" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="WZZD338kehSy" name="mt_UseCase" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="haYjKnMhj4qZ" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="UmdBqSka7iht" name="mt_Component" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="haYjKnMhj4qZ" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="quR1HHqmoNzr" name="mt_Deployment" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="haYjKnMhj4qZ" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="O7Z2mzyFjaQa" name="mt_EntityRelationship" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="haYjKnMhj4qZ" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="2B87tp0hhPjx" name="N_MODELTYPES" />
        </UML:Enumeration>
        <UML:Enumeration stereotype="enum" visibility="public" isSpecification="false" namespace="m4CKd7jmiWUx" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="gXjSugHIlpJY" name="Object_Type" >
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="gXjSugHIlpJY" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="oFnYpB6pMCxD" name="ot_UMLObject" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="gXjSugHIlpJY" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="2vthLcez9LS1" name="ot_Actor" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="gXjSugHIlpJY" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="1hHnWaLJo6rd" name="ot_UseCase" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="gXjSugHIlpJY" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="HvRc7On7Jgpc" name="ot_Package" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="gXjSugHIlpJY" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="GRcNn2OojgZG" name="ot_Interface" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="gXjSugHIlpJY" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="EsZ2wOeEH5oO" name="ot_Datatype" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="gXjSugHIlpJY" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="TZUkEJLUkxsV" name="ot_Enum" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="gXjSugHIlpJY" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="xEIesru7kR9e" name="ot_Class" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="gXjSugHIlpJY" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="nnq4seRJCv2Q" name="ot_Association" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="gXjSugHIlpJY" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ENswIiSDxkrp" name="ot_Attribute" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="gXjSugHIlpJY" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ZkuHB4wzpm1g" name="ot_Operation" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="gXjSugHIlpJY" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="PSxbNzzZKrUa" name="ot_EnumLiteral" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="gXjSugHIlpJY" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="YwnVedIBNDTY" name="ot_Template" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="gXjSugHIlpJY" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="FNV47VkWxi5J" name="ot_Component" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="gXjSugHIlpJY" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="f4syuMYQGKvs" name="ot_Artifact" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="gXjSugHIlpJY" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="xB4KMVqbqKgx" name="ot_Node" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="gXjSugHIlpJY" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="pOUk4Z3icugU" name="ot_Stereotype" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="gXjSugHIlpJY" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="GCuVWnNTwPnJ" name="ot_Role" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="gXjSugHIlpJY" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="scuiwYgjvATx" name="ot_Entity" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="gXjSugHIlpJY" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="hVfHPJjdWb82" name="ot_EntityAttribute" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="gXjSugHIlpJY" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="OUWJrHckrUSn" name="ot_Folder" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="gXjSugHIlpJY" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="16WwEytwTXBs" name="ot_EntityConstraint" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="gXjSugHIlpJY" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="qvVMUcNr4rAv" name="ot_UniqueConstraint" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="gXjSugHIlpJY" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="6kdyE4jFAE9P" name="ot_ForeignKeyConstraint" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="gXjSugHIlpJY" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="C1JfYSVMLyhq" name="ot_CheckConstraint" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="gXjSugHIlpJY" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Y4hcvpW1Z7zn" name="ot_Category" />
        </UML:Enumeration>
        <UML:Class visibility="public" isSpecification="false" namespace="m4CKd7jmiWUx" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Bh1MvAj7B0kh" name="Visibility" >
         <UML:Classifier.feature>
          <UML:Attribute visibility="private" isSpecification="false" xmi.id="F6yR2YYiyHBa" type="SF2oBjeknJKg" name="_v" />
          <UML:Operation stereotype="constructor" visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="94qTJxiCX3Oa" name="Visibility" />
          <UML:Operation stereotype="constructor" visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="smDnXdqJTVNn" name="Visibility" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="YrKbVlzfoo65" type="SF2oBjeknJKg" value="" name="v" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" ownerScope="classifier" isRoot="false" xmi.id="joFGsdoiO1Tv" name="toString" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="e2l0Bfq6ZLlE" type="dUt1TMu4e6AS" />
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="dJC6oXtLOBws" type="SF2oBjeknJKg" value="" name="value" />
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="vtVhhbmRN1fD" type="8c3ctJdhRSz0" value="" name="mnemonic" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" ownerScope="classifier" isRoot="false" xmi.id="uXfIXJVAlP9E" comment="Convert Visibility value into QString representation.&#xa;&#xa;@param mnemonic    If true then return a single character:&#xa;             &quot;+&quot; for public, &quot;-&quot; for private,&#xa;             &quot;#&quot; for protected or &quot;~&quot; for implementation" name="fromString" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="xYdixmuen92v" type="Bh1MvAj7B0kh" />
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="DYjmuV0o0e4V" type="j3HN7RojRZkd" value="" name="vis" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="bqe2NMfavNKn" name="toString" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="iSlTcnOBb1Bx" type="dUt1TMu4e6AS" />
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="qLZoxeKuCva7" type="8c3ctJdhRSz0" value="" name="mnemonic" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation stereotype="constructor" visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="NpVGCq309bo6" name="operator Value" />
         </UML:Classifier.feature>
         <UML:Namespace.ownedElement>
          <UML:Enumeration stereotype="enum" visibility="public" isSpecification="false" namespace="Bh1MvAj7B0kh" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="SF2oBjeknJKg" name="Value" >
           <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="SF2oBjeknJKg" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="8qfhydS7KTRF" name="Public" />
           <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="SF2oBjeknJKg" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="cAKl84TbHVPS" name="Private" />
           <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="SF2oBjeknJKg" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="C1AxKVdSJG9F" name="Protected" />
           <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="SF2oBjeknJKg" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="tbND3oQfxkQ5" name="Implementation" />
           <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="SF2oBjeknJKg" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="org3K3WW4gRO" name="FromParent" />
          </UML:Enumeration>
         </UML:Namespace.ownedElement>
        </UML:Class>
        <UML:Enumeration stereotype="enum" visibility="public" isSpecification="false" namespace="m4CKd7jmiWUx" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="5YjeZvZuk59w" name="Widget_Type" >
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="5YjeZvZuk59w" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="tAu0lg60l2Pn" name="wt_UMLWidget" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="5YjeZvZuk59w" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="axTWFc5IAouh" name="wt_Actor" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="5YjeZvZuk59w" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="jUcTXjNOtHMd" name="wt_UseCase" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="5YjeZvZuk59w" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="yQdjS3U0yvWB" name="wt_Class" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="5YjeZvZuk59w" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="XbRiQMP9ozdJ" name="wt_Interface" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="5YjeZvZuk59w" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="i0faG1DCRott" name="wt_Datatype" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="5YjeZvZuk59w" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="rNroINxpzPVN" name="wt_Enum" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="5YjeZvZuk59w" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="jvWVs7oZ6R9K" name="wt_Entity" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="5YjeZvZuk59w" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="QMWrAPi0mZm2" name="wt_Package" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="5YjeZvZuk59w" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ujpt6JEpCjK4" name="wt_Object" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="5YjeZvZuk59w" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="o6duVkEv6ikF" name="wt_Note" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="5YjeZvZuk59w" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="7SDrzzrughln" name="wt_Box" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="5YjeZvZuk59w" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="y0aAhvCVzqQV" name="wt_Message" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="5YjeZvZuk59w" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="acOfL9sQZ5IZ" name="wt_Text" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="5YjeZvZuk59w" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="29RgoCTmA4wp" name="wt_State" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="5YjeZvZuk59w" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="x7LuxjNVJm8c" name="wt_Activity" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="5YjeZvZuk59w" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="v03U3L15SSmH" name="wt_Component" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="5YjeZvZuk59w" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="dD1lFybC3u50" name="wt_Artifact" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="5YjeZvZuk59w" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="dSTwEcZ7caae" name="wt_Node" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="5YjeZvZuk59w" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="vZjN0TcbfeKu" name="wt_Association" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="5YjeZvZuk59w" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="at5dnAdOc4Jp" name="wt_ForkJoin" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="5YjeZvZuk59w" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="gquHQSvL2cg2" name="wt_Precondition" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="5YjeZvZuk59w" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="6JdlxxdVri8c" name="wt_CombinedFragment" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="5YjeZvZuk59w" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="sj1TnKGSA8ja" name="wt_FloatingDashLine" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="5YjeZvZuk59w" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="bctdEXdIqE3l" name="wt_Signal" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="5YjeZvZuk59w" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="9hGyNMbG5chr" name="wt_Pin" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="5YjeZvZuk59w" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="uvJ430cccTFq" name="wt_ObjectNode" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="5YjeZvZuk59w" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="0q9r2AaCppAD" name="wt_Region" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="5YjeZvZuk59w" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="BjRFJ86D1PF4" name="wt_Category" />
        </UML:Enumeration>
        <UML:Enumeration stereotype="enum" visibility="public" isSpecification="false" namespace="m4CKd7jmiWUx" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="NphzIupJjyAl" name="Diagram_Type" >
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="NphzIupJjyAl" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="7ixwX69hpaw7" name="dt_Undefined" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="NphzIupJjyAl" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="g0KhNYkkNPjg" name="dt_Class" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="NphzIupJjyAl" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="HWz0T7maphWL" name="dt_UseCase" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="NphzIupJjyAl" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="le0ZEugtu0aH" name="dt_Sequence" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="NphzIupJjyAl" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="WIzuhiazCXzf" name="dt_Collaboration" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="NphzIupJjyAl" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="cjFPPmkAQijc" name="dt_State" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="NphzIupJjyAl" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="cNVWO4luMkm2" name="dt_Activity" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="NphzIupJjyAl" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="QK1dryITgWt5" name="dt_Component" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="NphzIupJjyAl" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="IbDgKxGwKkTg" name="dt_Deployment" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="NphzIupJjyAl" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="oCZ8xJALeByV" name="dt_EntityRelationship" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="NphzIupJjyAl" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="8Fxolqt1P6fj" name="N_DIAGRAMTYPES" />
        </UML:Enumeration>
        <UML:Enumeration stereotype="enum" visibility="public" isSpecification="false" namespace="m4CKd7jmiWUx" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="1veKd5yRHVaC" name="Association_Type" >
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="1veKd5yRHVaC" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="piYTuUw2jtqS" name="at_Generalization" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="1veKd5yRHVaC" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="hhT7l6on0S5d" name="at_Aggregation" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="1veKd5yRHVaC" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="X33nZbzOJVpD" name="at_Dependency" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="1veKd5yRHVaC" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="0lDhf18KibRS" name="at_Association" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="1veKd5yRHVaC" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="gEFgeKJCLMxu" name="at_Association_Self" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="1veKd5yRHVaC" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="xwGFQ5QQre5U" name="at_Coll_Message" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="1veKd5yRHVaC" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="dDoKnEmTS176" name="at_Seq_Message" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="1veKd5yRHVaC" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="JQGclBVg8lvW" name="at_Coll_Message_Self" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="1veKd5yRHVaC" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="pMueyz6bBuvw" name="at_Seq_Message_Self" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="1veKd5yRHVaC" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="6fPYeWdxurYd" name="at_Containment" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="1veKd5yRHVaC" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="33K9oDfbXZFV" name="at_Composition" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="1veKd5yRHVaC" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="WJ5hEydKe0rI" name="at_Realization" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="1veKd5yRHVaC" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="USEPJm2KnKTb" name="at_UniAssociation" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="1veKd5yRHVaC" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="W8B3fOXCiaru" name="at_Anchor" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="1veKd5yRHVaC" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="YTEAT3RwVdLn" name="at_State" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="1veKd5yRHVaC" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="NL7AebjAhuBL" name="at_Activity" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="1veKd5yRHVaC" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="JiVzIKtpn7zF" name="at_Exception" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="1veKd5yRHVaC" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="9OBc1UPOpVWR" name="at_Category2Parent" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="1veKd5yRHVaC" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="4GbjAn4RTXQk" name="at_Child2Category" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="1veKd5yRHVaC" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="sJZfPWuWt38u" name="at_Relationship" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="1veKd5yRHVaC" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="XYHL3nm71MoC" name="at_Unknown" />
        </UML:Enumeration>
        <UML:Enumeration stereotype="enum" visibility="public" isSpecification="false" namespace="m4CKd7jmiWUx" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="7tbaQ2KIJrwi" name="Signature_Type" >
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="7tbaQ2KIJrwi" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="MoCFsL9NrOis" name="st_NoSig" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="7tbaQ2KIJrwi" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ATxBplLwexU3" name="st_ShowSig" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="7tbaQ2KIJrwi" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="zpJGeFx049Fu" name="st_SigNoVis" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="7tbaQ2KIJrwi" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="UNHLj0DtRA5G" name="st_NoSigNoVis" />
        </UML:Enumeration>
        <UML:Enumeration stereotype="enum" visibility="public" isSpecification="false" namespace="m4CKd7jmiWUx" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="wQAYLeZIRtZ4" name="Text_Role" >
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="wQAYLeZIRtZ4" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="8W4CfI48fMRM" name="tr_Floating" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="wQAYLeZIRtZ4" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="KfGlnJ1hh9E3" name="tr_MultiA" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="wQAYLeZIRtZ4" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="nnLDguHnQJx4" name="tr_MultiB" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="wQAYLeZIRtZ4" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="b2CEOdbiGpT2" name="tr_Name" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="wQAYLeZIRtZ4" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="8SjpbvsMjEXN" name="tr_Seq_Message" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="wQAYLeZIRtZ4" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="6mAV68XfAhuY" name="tr_Seq_Message_Self" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="wQAYLeZIRtZ4" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ITEZIhZQ7GDg" name="tr_Coll_Message" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="wQAYLeZIRtZ4" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="C60tIYGMIRrO" name="tr_Coll_Message_Self" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="wQAYLeZIRtZ4" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="XO4h5wDOPRvh" name="tr_State" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="wQAYLeZIRtZ4" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="6U5DiIruMrnc" name="tr_RoleAName" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="wQAYLeZIRtZ4" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="N4zgTo20D6fG" name="tr_RoleBName" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="wQAYLeZIRtZ4" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="2scRHV6LzBWi" name="tr_ChangeA" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="wQAYLeZIRtZ4" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="SNaoCMPaOOEr" name="tr_ChangeB" />
        </UML:Enumeration>
        <UML:Enumeration stereotype="enum" visibility="public" isSpecification="false" namespace="m4CKd7jmiWUx" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="CGpNNUcNKEnZ" name="ListView_Type" >
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="CGpNNUcNKEnZ" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ktuh3QNTnyFz" name="lvt_View" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="CGpNNUcNKEnZ" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="IeXg2lXD2KaN" name="lvt_Logical_View" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="CGpNNUcNKEnZ" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="mAk6PVd7PXoQ" name="lvt_UseCase_View" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="CGpNNUcNKEnZ" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="xAti68hOlD4n" name="lvt_Logical_Folder" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="CGpNNUcNKEnZ" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="yZyytXJfh4j6" name="lvt_UseCase_Folder" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="CGpNNUcNKEnZ" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="XMBut0Ko8BWE" name="lvt_UseCase_Diagram" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="CGpNNUcNKEnZ" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="IBc3OgoLFnJ6" name="lvt_Collaboration_Diagram" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="CGpNNUcNKEnZ" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="IdlzfU4CqF7h" name="lvt_Class_Diagram" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="CGpNNUcNKEnZ" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="DPVLZ1ZrC9sZ" name="lvt_State_Diagram" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="CGpNNUcNKEnZ" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="neu2RB6hmrhP" name="lvt_Activity_Diagram" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="CGpNNUcNKEnZ" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Jla9yfoC2JXb" name="lvt_Sequence_Diagram" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="CGpNNUcNKEnZ" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="K5QVEG20vu0K" name="lvt_Actor" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="CGpNNUcNKEnZ" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="572qyjDISlPQ" name="lvt_UseCase" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="CGpNNUcNKEnZ" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="OEcRX80qBPJN" name="lvt_Class" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="CGpNNUcNKEnZ" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="fLNaFOvIVx6T" name="lvt_Attribute" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="CGpNNUcNKEnZ" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="eIj637USL7rq" name="lvt_Operation" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="CGpNNUcNKEnZ" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="DreOGxluI9UV" name="lvt_Template" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="CGpNNUcNKEnZ" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="VNo0KsRwA90E" name="lvt_Interface" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="CGpNNUcNKEnZ" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="GVeZaTNnK29Z" name="lvt_Package" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="CGpNNUcNKEnZ" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="zuTG1vjWJVUb" name="lvt_Component_Diagram" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="CGpNNUcNKEnZ" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="OwYW5YiJ1Msb" name="lvt_Component_Folder" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="CGpNNUcNKEnZ" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="pFO8HXfFQ6TP" name="lvt_Component_View" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="CGpNNUcNKEnZ" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="1AuIgOu2IQYL" name="lvt_Component" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="CGpNNUcNKEnZ" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="wHeybUZPiwVx" name="lvt_Diagrams" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="CGpNNUcNKEnZ" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="R8CrEdFDm9WQ" name="lvt_Artifact" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="CGpNNUcNKEnZ" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="VOSmoy7kDkgp" name="lvt_Deployment_Diagram" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="CGpNNUcNKEnZ" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="EGCwChudp4T1" name="lvt_Deployment_Folder" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="CGpNNUcNKEnZ" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="giEQpiqK6I6s" name="lvt_Deployment_View" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="CGpNNUcNKEnZ" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="GCbSwHH8XT3h" name="lvt_Node" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="CGpNNUcNKEnZ" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="8vJvxkwbQ81F" name="lvt_Datatype" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="CGpNNUcNKEnZ" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="prXt7emMoLoi" name="lvt_Datatype_Folder" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="CGpNNUcNKEnZ" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="c3o8Urnck4Vg" name="lvt_Enum" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="CGpNNUcNKEnZ" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="oPFEVHTK61CC" name="lvt_Entity" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="CGpNNUcNKEnZ" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="dwYPHK7rNvzr" name="lvt_EntityAttribute" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="CGpNNUcNKEnZ" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="lnRTrw9eJPso" name="lvt_EntityRelationship_Diagram" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="CGpNNUcNKEnZ" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="eK7iJJuwFSLU" name="lvt_EntityRelationship_Folder" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="CGpNNUcNKEnZ" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="mQL7JLy46NWv" name="lvt_EntityRelationship_Model" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="CGpNNUcNKEnZ" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="JfZa2QPekWN3" name="lvt_Subsystem" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="CGpNNUcNKEnZ" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="nHx0iGUSgnaz" name="lvt_Model" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="CGpNNUcNKEnZ" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="6W2AuY4BBdmC" name="lvt_EnumLiteral" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="CGpNNUcNKEnZ" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="1BqlfBmQTjQ9" name="lvt_UniqueConstraint" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="CGpNNUcNKEnZ" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="xsbbd9ZkgbuY" name="lvt_PrimaryKeyConstraint" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="CGpNNUcNKEnZ" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="7yjIaVSZeJLJ" name="lvt_ForeignKeyConstraint" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="CGpNNUcNKEnZ" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="U5hvn72kxcKb" name="lvt_CheckConstraint" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="CGpNNUcNKEnZ" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ltJPSBxZ8hpg" name="lvt_Category" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="CGpNNUcNKEnZ" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="AIFpZY81eoxP" name="lvt_Unknown" />
        </UML:Enumeration>
        <UML:Enumeration stereotype="enum" visibility="public" isSpecification="false" namespace="m4CKd7jmiWUx" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="tx7rZRQJKhgm" name="Changeability_Type" >
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="tx7rZRQJKhgm" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="seJyJ9eTPuIy" name="chg_Changeable" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="tx7rZRQJKhgm" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="SPz4DuT4sbvP" name="chg_Frozen" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="tx7rZRQJKhgm" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="2JiL0N5r1PpI" name="chg_AddOnly" />
        </UML:Enumeration>
        <UML:Enumeration stereotype="enum" visibility="public" isSpecification="false" namespace="m4CKd7jmiWUx" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="WUjvM0toPqra" name="Sequence_Message_Type" >
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="WUjvM0toPqra" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="lKedvY0wphHo" name="sequence_message_synchronous" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="WUjvM0toPqra" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="4Mf5jSLFu48G" name="sequence_message_asynchronous" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="WUjvM0toPqra" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="4z3RquzbCcC8" name="sequence_message_creation" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="WUjvM0toPqra" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="8C2xtJlxdO0N" name="sequence_message_lost" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="WUjvM0toPqra" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="rJajOj0Qi1qY" name="sequence_message_found" />
        </UML:Enumeration>
        <UML:Enumeration stereotype="enum" visibility="public" isSpecification="false" namespace="m4CKd7jmiWUx" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="tp75PHBXSDTJ" name="DBIndex_Type" >
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="tp75PHBXSDTJ" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="WCH8bFTQX39t" name="None" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="tp75PHBXSDTJ" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="k7JR67xzv35K" name="Primary" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="tp75PHBXSDTJ" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="KGqmUJ6yTL44" name="Index" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="tp75PHBXSDTJ" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="YXS5ZayHfGim" name="Unique" />
        </UML:Enumeration>
        <UML:Enumeration stereotype="enum" visibility="public" isSpecification="false" namespace="m4CKd7jmiWUx" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="NglIhqb15RoZ" comment="Constants used for indexing the roles of associations." name="Role_Type" >
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="NglIhqb15RoZ" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="sV9DaCj5epeC" name="A" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="NglIhqb15RoZ" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="lwszceLGPdxE" name="B" />
        </UML:Enumeration>
        <UML:Enumeration stereotype="enum" visibility="public" isSpecification="false" namespace="m4CKd7jmiWUx" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="CzJblqJdLTot" comment="Direction of operation parameters:&#xa;  in = operation uses the parameter as an input value&#xa;  out = operation fills the parameter as a return value&#xa;  inout = operation both reads and writes the parameter&#xa;The numeric values of this enum are not currently saved to file." name="Parameter_Direction" >
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="CzJblqJdLTot" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="fVzHKbU4XM18" name="pd_In" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="CzJblqJdLTot" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="0MONyMbAJsm4" name="pd_InOut" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="CzJblqJdLTot" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="i3f2URv7wsPF" name="pd_Out" />
        </UML:Enumeration>
        <UML:Enumeration stereotype="enum" visibility="public" isSpecification="false" namespace="m4CKd7jmiWUx" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="UrHzDI7BfWWb" comment="Supported programming languages" name="Programming_Language" >
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="UrHzDI7BfWWb" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="q8l7yV9fZoh3" name="pl_ActionScript" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="UrHzDI7BfWWb" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="DaB7TYMvPbua" name="pl_Ada" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="UrHzDI7BfWWb" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="u0jXWF8KLrRK" name="pl_Cpp" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="UrHzDI7BfWWb" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="NazwMexXE6ef" name="pl_CSharp" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="UrHzDI7BfWWb" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="cza1aTZSTIzx" name="pl_D" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="UrHzDI7BfWWb" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="W5Frxg9KE8EY" name="pl_IDL" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="UrHzDI7BfWWb" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="m93zGheseDsF" name="pl_Java" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="UrHzDI7BfWWb" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ePf7gf2CiH1f" name="pl_JavaScript" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="UrHzDI7BfWWb" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="vBx9H9f4Ji1X" name="pl_MySQL" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="UrHzDI7BfWWb" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="NdN2qFFSduZJ" name="pl_Pascal" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="UrHzDI7BfWWb" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="XbTGsUtnfpux" name="pl_Perl" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="UrHzDI7BfWWb" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="yXzFD0mbbAbS" name="pl_PHP" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="UrHzDI7BfWWb" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Nou0gSHE1kSs" name="pl_PHP5" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="UrHzDI7BfWWb" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="FLds8Yn53kKH" name="pl_PostgreSQL" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="UrHzDI7BfWWb" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="i7qKFPkaDcbt" name="pl_Python" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="UrHzDI7BfWWb" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="4s56bXyqrbgx" name="pl_Ruby" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="UrHzDI7BfWWb" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="7U29CNQvSEFf" name="pl_SQL" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="UrHzDI7BfWWb" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="bzFobofefjiG" name="pl_Tcl" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="UrHzDI7BfWWb" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Eg45Fk3LC5UP" name="pl_XMLSchema" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="UrHzDI7BfWWb" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="QsKs4XXfUlR5" name="pl_Reserved" />
        </UML:Enumeration>
        <UML:Class stereotype="typedef" visibility="public" isSpecification="false" namespace="m4CKd7jmiWUx" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Z6hEnPU23Y7J" name="IDType" />
        <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="m4CKd7jmiWUx" xmi.id="X3urtRe6zFYZ" client="MRvaUd4dy2vR" name="" />
       </UML:Namespace.ownedElement>
      </UML:Package>
      <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" elementReference="DEF25bcCX9gg" isRoot="false" xmi.id="EkW5TcpBorWd" name="UMLPackageList" />
      <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" elementReference="5oIcTG9eSPeV" isRoot="false" xmi.id="0GfVPKBd2ggW" name="UMLPackageListIt" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="GTh4LBgOzy1Q" name="UMLStereotype" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="5zC3XL9jxXAd" name="QObject" />
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="EcOTh0GL2tr5" xmi.id="CA4eXi7Ywm3J" parent="5zC3XL9jxXAd" name="" />
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="zC5M9e0b3SnI" xmi.id="o0A2leF0s6OK" parent="EcOTh0GL2tr5" name="" />
      <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" elementReference="7Vb3818Ub7rC" isRoot="false" xmi.id="RuMJhLZC6vss" name="UMLClassifierList" />
      <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" elementReference="IBAsTfCY8nbF" isRoot="false" xmi.id="ojjOqZYGTuXA" name="UMLClassifierListIt" />
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="D6KJ1AAHLIAm" xmi.id="vML37wIue0GS" parent="zC5M9e0b3SnI" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="BN0IVbZqNkxK" name="UMLEntityAttribute" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="D6KJ1AAHLIAm" comment="                                                                        *&#xa;  This program is free software; you can redistribute it and/or modify  *&#xa;  it under the terms of the GNU General Public License as published by  *&#xa;  the Free Software Foundation; either version 2 of the License, or     *&#xa;  (at your option) any later version.                                   *&#xa;                                                                        *&#xa;  copyright (C) 2002-2006                                               *&#xa;  Umbrello UML Modeller Authors &lt;umbrello-devel@kde.org>                  *&#xa;//**&#xa;This class is used to set up information for a entity constraint.&#xa;&#xa;@short Sets up entity constraint information.&#xa;@author Sharan Rao&#xa;@see UMLObject UMLClassifierListItem&#xa;Bugs and comments to umbrello-devel@kde.org or http://bugs.kde.org" name="UMLEntityConstraint" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="vML37wIue0GS" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation stereotype="constructor" visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="0s6csM5RAlTq" comment="Sets up a constraint.&#xa;&#xa;@param parent    The parent of this UMLEntityConstraint.&#xa;@param name      The name of this UMLEntityConstraint.&#xa;@param id        The unique id given to this UMLEntityConstraint." name="UMLEntityConstraint" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="zdkI8yblJCjx" type="75G7jzEHQyIY" value="" name="parent" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="wUX1Y9BX2H9s" type="j3HN7RojRZkd" value="" name="name" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="bEKjynXxPIFV" type="Z6hEnPU23Y7J" value="" name="id" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation stereotype="constructor" visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="EpGV1zSxUyw0" comment="Sets up a constraint.&#xa;&#xa;@param parent    The parent of this UMLEntityConstraint." name="UMLEntityConstraint" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="57X5MhyvtIcp" type="75G7jzEHQyIY" value="" name="parent" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="3AmSQ0xcpD7q" comment="Overloaded '==' operator" name="operator ==" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="HOm4arulPeOv" type="8c3ctJdhRSz0" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="qf1hxeXymHRC" type="BYldWgdbl9h8" value="" name="rhs" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="KzV58CBwpDck" comment="destructor." name="~ UMLEntityConstraint" />
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="p9ibO9leWXi4" comment="Copy the internal presentation of this object into the UMLEntityConstraint&#xa;object." name="copyInto" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="MbnmFBfX8AcH" type="75G7jzEHQyIY" value="" name="lhs" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="true" isLeaf="false" isRoot="false" xmi.id="KmD9xprmwaLJ" comment="Make a clone of the UMLEntityConstraint." name="clone" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="h4xBZfFvG2hT" type="75G7jzEHQyIY" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="MRvaUd4dy2vR" xmi.id="dSF0DDIj0MBL" parent="D6KJ1AAHLIAm" name="" />
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="YQyYJnd4K3cI" xmi.id="ouIG65ecTuGN" client="MRvaUd4dy2vR" name="" />
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="BN0IVbZqNkxK" xmi.id="3QrWL5rFJzA4" client="MRvaUd4dy2vR" name="" />
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="BN0IVbZqNkxK" xmi.id="cJxtI7xQXTwX" client="MRvaUd4dy2vR" name="" />
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="YQyYJnd4K3cI" xmi.id="Bm4gE1DaNprp" client="MRvaUd4dy2vR" name="" />
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="YQyYJnd4K3cI" xmi.id="GhJVlFrD2nWO" client="MRvaUd4dy2vR" name="" />
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="BN0IVbZqNkxK" xmi.id="zM417aPbMqXm" client="MRvaUd4dy2vR" name="" />
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="m4CKd7jmiWUx" xmi.id="X3urtRe6zFYZ" client="MRvaUd4dy2vR" name="" />
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="YQyYJnd4K3cI" xmi.id="RKIQZpy0b40w" client="MRvaUd4dy2vR" name="" />
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="YQyYJnd4K3cI" xmi.id="XXV7bV1CtEA2" client="MRvaUd4dy2vR" name="" />
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="YQyYJnd4K3cI" xmi.id="niFyPp0QIrTZ" client="MRvaUd4dy2vR" name="" />
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="BN0IVbZqNkxK" xmi.id="TC5j4ZHtsgBx" client="MRvaUd4dy2vR" name="" />
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="BN0IVbZqNkxK" xmi.id="S8jImtE85ZZl" client="MRvaUd4dy2vR" name="" />
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="YQyYJnd4K3cI" xmi.id="qdjtCHclCu4J" client="MRvaUd4dy2vR" name="" />
      <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" elementReference="FqTK0xDFYwn7" isRoot="false" xmi.id="MuR0yJicuobD" name="UMLObjectListIt" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="KBNhUHJk7m25" comment="This sub-class adds copyInto and clone to the QPtrList&lt;UMLObject>&#xa;base class." name="UMLObjectList" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="0BZuxA5HLSwq" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation stereotype="constructor" visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="tqMCJI01WWoV" name="UMLObjectList" />
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="5jCtv5sCFKU7" name="~ UMLObjectList" />
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Ig0PPjTGZpQq" comment="Copy the internal presentation of this object into the new&#xa;object." name="copyInto" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="NiTc3xjLbhiy" type="6Prcve70NJsG" value="" name="rhs" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="QBCy1co71ejv" comment="Make a clone of this object." name="clone" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="Iqtd8luTUN3V" type="6Prcve70NJsG" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="KBNhUHJk7m25" xmi.id="0BZuxA5HLSwq" parent="hGKDA6KV0jVw" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="MRvaUd4dy2vR" comment="This class is used to set up information for a foreign key entity constraint.&#xa;&#xa;@short Sets up Foreign Key  entity constraint information.&#xa;@author Sharan Rao&#xa;@see UMLObject UMLClassifierListItem UMLEntityConstraint&#xa;Bugs and comments to umbrello-devel@kde.org or http://bugs.kde.org" name="UMLForeignKeyConstraint" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="dSF0DDIj0MBL" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="RpxJMjH4RhvA" type="Z6hEnPU23Y7J" comment="Used to resolve forward references to UMLEntity" name="m_pReferencedEntityID" />
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="2uqu80wuDgc3" type="Sq0ldvmUxRAb" comment="Used to resolve forward references to UMLEntityAttributes&#xa;Key -> The local attribute&#xa;Value -> Id of the attribute it is mapping to" name="m_pEntityAttributeIDMap" />
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="INWLuNzuFnoL" type="KiIfnwaL1Qqj" comment="The UMLEntity that this foreign key references" name="m_ReferencedEntity" />
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="HjrRbtlPRxBp" type="hHOzXWYh0pdd" comment="Stores the Mapping of attributes between parent table and referenced table" name="m_AttributeMap" />
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="BalGn3zgWuNw" type="XTKVpWqZPBj0" comment="What to do on Update of referenced attributes" name="m_UpdateAction" />
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="CcA7cFDrw4IY" type="XTKVpWqZPBj0" comment="What to do on Deletion of referenced attributes" name="m_DeleteAction" />
        <UML:Operation stereotype="constructor" visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="31HHSWXIyU1k" comment="Sets up a constraint.&#xa;&#xa;@param parent    The parent of this UMLForeignKeyConstraint.&#xa;@param name      The name of this UMLForeignKeyConstraint.&#xa;@param id        The unique id given to this UMLForeignKeyConstraint." name="UMLForeignKeyConstraint" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="nHnXAY1temtP" type="75G7jzEHQyIY" value="" name="parent" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="GyJLfl7jkP0A" type="j3HN7RojRZkd" value="" name="name" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="vWSsyUakjNHt" type="Z6hEnPU23Y7J" value="" name="id" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation stereotype="constructor" visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="tGnV0gsHcCaH" comment="Sets up a constraint.&#xa;&#xa;@param parent    The parent of this UMLForeignKeyConstraint." name="UMLForeignKeyConstraint" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="vhyf6xp0TGsR" type="75G7jzEHQyIY" value="" name="parent" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="iSBRnQJee49f" comment="Overloaded '==' operator" name="operator ==" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="xCxcG4Fy49IG" type="8c3ctJdhRSz0" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="XXIyn8NVYXvJ" type="i2wKCWb5BakI" value="" name="rhs" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="frLoP36ubMsM" comment="destructor." name="~ UMLForeignKeyConstraint" />
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="UGq0njJivGIB" comment="Copy the internal presentation of this object into the UMLForeignKeyConstraint&#xa;object." name="copyInto" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="JX9NgPeJGx8g" type="75G7jzEHQyIY" value="" name="lhs" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="zEaYbRs3fi4S" comment="Make a clone of the UMLForeignKeyConstraint." name="clone" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="RN8KcRVvycIf" type="75G7jzEHQyIY" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="1uyGq6unLSLu" comment="Returns a string representation of the UMLForeignKeyConstraint.&#xa;&#xa;@param sig               If true will show the attribute type and&#xa;                 initial value.&#xa;@return  Returns a string representation of the UMLAttribute." name="toString" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="Y7qWi89h18xp" type="dUt1TMu4e6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="tDxYuzyJN7ex" type="7tbaQ2KIJrwi" value="" name="sig" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="CrcVIvPB6Lk0" comment="Set the Referenced Entity&#xa;@param ent The Entity to Reference" name="setReferencedEntity" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="XzRY5MNICxnU" type="KiIfnwaL1Qqj" value="" name="ent" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="sBfyUNxm6FSr" name="getReferencedEntity" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="90DAR1uwyJS4" type="KiIfnwaL1Qqj" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="fnKrk7JaGzYk" comment="Creates the &lt;UML:ForeignKeyConstraint> XMI element." name="saveToXMI" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="MTXQixIrxT0M" type="ctbqRd7AbF66" value="" name="qDoc" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="UuGSBiUqVogF" type="CKFlXJq4UrkK" value="" name="qElement" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="wznAwMvHnShW" comment="Display the properties configuration dialog for the attribute." name="showPropertiesDialog" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="enD7crNWoAgl" type="8c3ctJdhRSz0" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="NxLKOLfsDvJO" type="tt3Q9VNPmVtu" value="" name="parent" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="UZ2I1hmOd7h1" comment="Adds the attribute pair to the attributeMap&#xa;@param pAttr The Attribute of the Parent Entity&#xa;@param rAttr The Attribute of the Referenced Entity&#xa;@return true if the attribute pair could be added successfully" name="addEntityAttributePair" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="xBesPbOWtPPK" type="8c3ctJdhRSz0" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="7K2vShevGeBG" type="TKsgDB3rwGzW" value="" name="pAttr" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Kxcx2HwTbo8p" type="TKsgDB3rwGzW" value="" name="rAttr" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="62DKgOY0JBvL" comment="Removes an Attribute pair&#xa;@param pAttr The Attribute of the Parent Entity in the map. This attribute is the&#xa;key of the map&#xa;@return true of the attribute pair could be removed successfully" name="removeEntityAttributePair" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="1oxsDMCHMPa3" type="8c3ctJdhRSz0" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Qqn0cvna6RQT" type="TKsgDB3rwGzW" value="" name="" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="l814JvOil9iN" comment="Check if a attribute pair already exists&#xa;@param pAttr The Attribute of the Parent Entity&#xa;@param rAttr The Attribute of the Referenced Entity&#xa;@return true if the attribute pair could be found." name="hasEntityAttributePair" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="CUHvdzJhUCpO" type="8c3ctJdhRSz0" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="4Vv8uLbv8YmL" type="TKsgDB3rwGzW" value="" name="pAttr" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="swbFMBG5HH8b" type="TKsgDB3rwGzW" value="" name="rAttr" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="YOIgw4zm0Y1K" name="getEntityAttributePairs" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="yMJMC89spgLZ" type="hHOzXWYh0pdd" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="PUK1GVx6nqN7" name="getDeleteAction" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="YId0HmhG90aJ" type="XTKVpWqZPBj0" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="6hBtNURnwlmB" name="getUpdateAction" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="EjH2Xc93uk4A" type="XTKVpWqZPBj0" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="VlOejyvnf6e0" name="setDeleteAction" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Y5lVoYe3Fv3l" type="XTKVpWqZPBj0" value="" name="uda" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="YCoQuqYPZw1G" name="setUpdateAction" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="sw1V0gUXlF0a" type="XTKVpWqZPBj0" value="" name="uda" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="neb1Xem3qYUi" comment="Clears all mappings between local and referenced attributes" name="clearMappings" />
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="P06wv7Bn2CH0" comment="Remimplementation from base classes&#xa;Used to resolve forward references to referenced entities in xmi" name="resolveRef" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="slVe0VCm7nnf" type="8c3ctJdhRSz0" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="protected" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="RXiF5AvSB1N6" name="sigReferencedEntityChanged" />
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="7Yr7k67brdFq" name="slotReferencedEntityChanged" />
        <UML:Operation visibility="protected" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="6PaEANtZuZox" comment="Loads the &lt;UML:ForeignKeyConstraint> XMI element." name="load" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="t2eidrWkE6wO" type="8c3ctJdhRSz0" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="ijQtjnxqJmx3" type="CKFlXJq4UrkK" value="" name="element" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="3Tt5JxspVnLk" comment="Initialisation of common variables" name="init" />
       </UML:Classifier.feature>
       <UML:Namespace.ownedElement>
        <UML:Enumeration stereotype="enum" visibility="public" isSpecification="false" namespace="MRvaUd4dy2vR" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="XTKVpWqZPBj0" comment="Update/Delete Action: Action to be taken on Update or Delete of a referenced attribute&#xa;is either, No Action, Restrict, Cascade, Set NULL , Set Default" name="UpdateDeleteAction" >
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="XTKVpWqZPBj0" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="luwm2QFjwJMU" name="uda_NoAction" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="XTKVpWqZPBj0" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="JSgkmrLHIgk5" name="uda_Restrict" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="XTKVpWqZPBj0" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="AacZkMXVGRFG" name="uda_Cascade" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="XTKVpWqZPBj0" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="rUxllJG3junW" name="uda_SetNull" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="XTKVpWqZPBj0" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="j6l1mW5u4hTo" name="uda_SetDefault" />
        </UML:Enumeration>
       </UML:Namespace.ownedElement>
      </UML:Class>
      <UML:Package visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="IkotSWpqh1mi" name="Model_Utils" >
       <UML:Namespace.ownedElement>
        <UML:Enumeration stereotype="enum" visibility="public" isSpecification="false" namespace="IkotSWpqh1mi" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="dbndDWWVLN8R" comment="Return type of parseOperation()" name="Parse_Status" >
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="dbndDWWVLN8R" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="70ubNx4fhsW7" name="PS_OK" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="dbndDWWVLN8R" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="OLw5MimyHZZU" name="PS_Empty" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="dbndDWWVLN8R" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="65zPS6oZ6g8S" name="PS_Malformed_Arg" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="dbndDWWVLN8R" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="bC7G4cOQxIWI" name="PS_Unknown_ArgType" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="dbndDWWVLN8R" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="0IGIppmtskII" name="PS_Illegal_MethodName" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="dbndDWWVLN8R" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="o4sukyML9ScB" name="PS_Unknown_ReturnType" />
         <UML:EnumerationLiteral visibility="public" isSpecification="false" namespace="dbndDWWVLN8R" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="40czG6HGMVWB" name="PS_Unspecified_Error" />
        </UML:Enumeration>
        <UML:Class visibility="public" isSpecification="false" namespace="IkotSWpqh1mi" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="IH5AzLTnQJhA" comment="Data structure filled by parseAttribute()" name="NameAndType" >
         <UML:Classifier.feature>
          <UML:Attribute visibility="public" isSpecification="false" xmi.id="F2WOU8aW6AVK" type="dUt1TMu4e6AS" name="m_name" />
          <UML:Attribute visibility="public" isSpecification="false" xmi.id="GnaaG5lZKojJ" type="75G7jzEHQyIY" name="m_type" />
          <UML:Attribute visibility="public" isSpecification="false" xmi.id="AA6aRlihnE5F" type="CzJblqJdLTot" name="m_direction" />
          <UML:Attribute visibility="public" isSpecification="false" xmi.id="KdlOlHiz2HZI" type="dUt1TMu4e6AS" name="m_initialValue" />
          <UML:Operation stereotype="constructor" visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="KJre7ZxFh1p9" name="NameAndType" />
          <UML:Operation stereotype="constructor" visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="mWoYirn1VXPE" name="NameAndType" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="o6EoLn6f4wHC" type="dUt1TMu4e6AS" value="" name="name" />
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="TCRADFHzl5VR" type="75G7jzEHQyIY" value="" name="type" />
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="xJSQoseawqOF" type="CzJblqJdLTot" value="" name="direction" />
            <UML:Parameter visibility="private" isSpecification="false" xmi.id="cSugM9qpLIyY" type="dUt1TMu4e6AS" value="" name="initialValue" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
         </UML:Classifier.feature>
        </UML:Class>
        <UML:Class stereotype="typedef" visibility="public" isSpecification="false" namespace="IkotSWpqh1mi" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="VDVEJ1fEI8c6" name="NameAndType_List" />
        <UML:Class stereotype="typedef" visibility="public" isSpecification="false" namespace="IkotSWpqh1mi" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="yEgs527fUzLr" name="NameAndType_ListIt" />
        <UML:Class visibility="public" isSpecification="false" namespace="IkotSWpqh1mi" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="8CeTSczvqU97" comment="Data structure filled by parseOperation()" name="OpDescriptor" >
         <UML:Classifier.feature>
          <UML:Attribute visibility="public" isSpecification="false" xmi.id="TmJjsvpq7TgC" type="dUt1TMu4e6AS" name="m_name" />
          <UML:Attribute visibility="public" isSpecification="false" xmi.id="VnpymBnsLRJn" type="VDVEJ1fEI8c6" name="m_args" />
          <UML:Attribute visibility="public" isSpecification="false" xmi.id="2IgslpxCZGwS" type="75G7jzEHQyIY" name="m_pReturnType" />
         </UML:Classifier.feature>
        </UML:Class>
       </UML:Namespace.ownedElement>
      </UML:Package>
      <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" elementReference="PPLkrfVtvBje" isRoot="false" xmi.id="ygrYuny1WCFh" name="UMLAssociationList" />
      <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" elementReference="7gMqvyHKOa3D" isRoot="false" xmi.id="DY69knngReEJ" name="UMLAssociationListIt" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="EcOTh0GL2tr5" comment="This class is the non-graphical version of @ref UMLWidget.  These are&#xa;created and maintained in the class @ref UMLDoc.  This class holds all&#xa;the generic information needed for all UML objects.&#xa;&#xa;@short The base class for UML objects.&#xa;@author Paul Hensgen &lt;phensgen@techie.com>&#xa;Bugs and comments to umbrello-devel@kde.org or http://bugs.kde.org" name="UMLObject" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="CA4eXi7Ywm3J" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Attribute visibility="protected" isSpecification="false" xmi.id="SUftgAPjxnkZ" type="Z6hEnPU23Y7J" comment="The object's id." name="m_nId" />
        <UML:Attribute visibility="protected" isSpecification="false" xmi.id="6yPuwQu3p6U3" type="dUt1TMu4e6AS" comment="The object's documentation." name="m_Doc" />
        <UML:Attribute visibility="protected" isSpecification="false" xmi.id="r5XrCCpehSYL" type="g2AlSN6Uj0Sp" comment="The package the object belongs to if applicable." name="m_pUMLPackage" />
        <UML:Attribute visibility="protected" isSpecification="false" xmi.id="cv4Yjo7nlUhh" type="6bgFIb8avmQP" comment="The stereotype of the object if applicable." name="m_pStereotype" />
        <UML:Attribute visibility="protected" isSpecification="false" xmi.id="tbjifDmWHHMT" type="dUt1TMu4e6AS" comment="The objects name." name="m_Name" />
        <UML:Attribute visibility="protected" isSpecification="false" xmi.id="S989ceSCXXiG" type="gXjSugHIlpJY" comment="The objects type." name="m_BaseType" />
        <UML:Attribute visibility="protected" isSpecification="false" xmi.id="Ln14IimBITtv" type="Bh1MvAj7B0kh" comment="The objects visibility." name="m_Vis" />
        <UML:Attribute visibility="protected" isSpecification="false" xmi.id="edSvtmPLvVSV" type="8c3ctJdhRSz0" comment="The state of whether the object is abstract or not." name="m_bAbstract" />
        <UML:Attribute visibility="protected" isSpecification="false" xmi.id="9uigROvlCupU" type="8c3ctJdhRSz0" comment="This attribute holds whether the UMLObject has instance scope&#xa;(false - the default) or classifier scope (true)." name="m_bStatic" />
        <UML:Attribute visibility="protected" isSpecification="false" xmi.id="dZft0Wof8Ea1" type="8c3ctJdhRSz0" comment="Caller sets this true when in paste operation." name="m_bInPaste" />
        <UML:Attribute visibility="protected" isSpecification="false" xmi.id="yxMuQoPXg5C8" type="8c3ctJdhRSz0" comment="Auxiliary to maybeSignalObjectCreated()." name="m_bCreationWasSignalled" />
        <UML:Attribute visibility="protected" isSpecification="false" xmi.id="U5rezg8cElTE" type="75G7jzEHQyIY" comment="Pointer to an associated object.&#xa;Only a few of the classes inheriting from UMLObject use this.&#xa;However, it needs to be here because of inheritance graph&#xa;disjunctness." name="m_pSecondary" />
        <UML:Attribute visibility="protected" isSpecification="false" xmi.id="HGtPSSORNkLo" type="dUt1TMu4e6AS" comment="xmi.id of the secondary object for intermediate use during&#xa;loading.  The secondary ID is resolved to the m_pSecondary&#xa;in the course of resolveRef() at the end of loading." name="m_SecondaryId" />
        <UML:Attribute visibility="protected" isSpecification="false" xmi.id="WiLDmVJEaAsa" type="dUt1TMu4e6AS" comment="Last-chance backup for when m_SecondaryId is not found.&#xa;Used by Rose import: MDL files specify both a &quot;quidu&quot;&#xa;(which corresponds to m_SecondaryId) and the human readable&#xa;fully qualified target name of a reference.&#xa;In case the quidu is not found, the human readable name is&#xa;used which we store in m_SecondaryFallback." name="m_SecondaryFallback" />
        <UML:Operation stereotype="constructor" visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="fixZTztXAoe1" name="UMLObject" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="NH8QcFm65XXq" type="75G7jzEHQyIY" value="" name="parent" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="GRoAMPaz6VYZ" type="j3HN7RojRZkd" value="" name="name" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="UP6cDldb2jzc" type="Z6hEnPU23Y7J" value="" name="id" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation stereotype="constructor" visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="zmg4JEsZdgiz" comment="Creates a UMLObject.&#xa;&#xa;@param   parent   The parent of the object." name="UMLObject" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="6IyClXjEwpq8" type="75G7jzEHQyIY" value="" name="parent" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation stereotype="constructor" visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="aUhbBgDASuCl" comment="Creates a UMLObject with a given name and unique ID.&#xa;&#xa;@param   name   The name of the object.&#xa;@param   id     The unique ID of the object." name="UMLObject" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="65Jjj1jpHhz2" type="j3HN7RojRZkd" value="" name="name" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="CiG7W5F6Zufi" type="Z6hEnPU23Y7J" value="" name="id" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="arr3j3mp63Yo" comment="Overloaded '==' operator" name="operator ==" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="lhwqjTeliF5d" type="8c3ctJdhRSz0" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="dRuALXtwOkx7" type="2FdJxbK7JYEp" value="" name="rhs" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="qNl8vzvXPnhk" comment="Standard deconstructor." name="~ UMLObject" />
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="LaejIZp4Flsy" comment="Copy the internal presentation of this object into the new&#xa;object." name="copyInto" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="CUjvjmYY7Je3" type="75G7jzEHQyIY" value="" name="lhs" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="true" isLeaf="false" isRoot="false" xmi.id="HXagLFOeq3N6" comment="Make a clone of this object.&#xa;To be implemented by inheriting classes." name="clone" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="aA8pu0l6UV1C" type="75G7jzEHQyIY" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="FYkNpMO6twkE" comment="Returns the type of the object.&#xa;&#xa;@return  Returns the type of the object." name="getBaseType" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="B9szAE6kOEYG" type="gXjSugHIlpJY" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="FJNhmMt2ubNk" comment="Set the type of the object.&#xa;&#xa;@param ot The Uml::Object_Type to set." name="setBaseType" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="xlophZ3sguqq" type="gXjSugHIlpJY" value="" name="ot" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="6wYSA6jNO43A" comment="Returns the ID of the object.&#xa;&#xa;@return  Returns the ID of the object." name="getID" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="QuCLWZ5RItGx" type="Z6hEnPU23Y7J" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="QIo6AewEaTei" comment="Sets the documentation for the object.&#xa;&#xa;@param d The documentation for the object." name="setDoc" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="ZL6vP96q3GBX" type="j3HN7RojRZkd" value="" name="d" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="oEx65B4WRscZ" comment="Returns the documentation for the object.&#xa;&#xa;@return  Returns the documentation for the object." name="getDoc" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="WXn40QmXlsRB" type="dUt1TMu4e6AS" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="zX11nAWbMTgR" comment="Returns the visibility of the object.&#xa;&#xa;@return  Returns the visibility of the object." name="getVisibility" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="fkv6aWe41R8z" type="Bh1MvAj7B0kh" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ruUblvmiSlhG" comment="Sets the visibility of the object.&#xa;&#xa;@param s   The visibility of the object." name="setVisibility" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="tEpFhVeKDaPl" type="Bh1MvAj7B0kh" value="" name="s" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="63p5Sv4KoYtX" comment="Method used by setVisibility: its called by  cmdSetVisibility, Don't use it!" name="setVisibilitycmd" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="UfFuOx8H9yWq" type="Bh1MvAj7B0kh" value="" name="s" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="RABdiYOmbEr3" comment="Sets the classes stereotype name.&#xa;Internally uses setUMLStereotype().&#xa;&#xa;@param _name     Sets the classes stereotype name." name="setStereotype" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="7vLvSESurgoF" type="j3HN7RojRZkd" value="" name="_name" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="dxWkt2aKBjvt" comment="Method used by setStereotype: its called by  cmdSetStereotype, Don't use it!" name="setStereotypecmd" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="HKgsWXudRFZt" type="j3HN7RojRZkd" value="" name="_name" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="UznJfZZIW52N" comment="Sets the class' UMLStereotype. Adjusts the reference counts&#xa;at the previously set stereotype and at the new stereotype.&#xa;If the previously set UMLStereotype's reference count drops&#xa;to zero then the UMLStereotype is removed at the UMLDoc and&#xa;it is then physically deleted.&#xa;&#xa;@param s Sets the classes UMLStereotype." name="setUMLStereotype" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="II3jYaa0ZLJF" type="6bgFIb8avmQP" value="" name="s" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="usVPwWm05SFN" comment="Sets the classes Package.&#xa;DEPRECATED - use SetUMLPackage instead.&#xa;&#xa;@param _name   The classes Package name." name="setPackage" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="4Lvx6KLOcM78" type="j3HN7RojRZkd" value="" name="_name" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="wf8T0QgsICFC" comment="Sets the UMLPackage in which this class is located.&#xa;&#xa;@param pPkg   Pointer to the class' UMLPackage." name="setUMLPackage" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="KlDw7I53vBUt" type="g2AlSN6Uj0Sp" value="" name="pPkg" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="bBjsLz211DkT" comment="Returns the classes UMLStereotype object.&#xa;&#xa;@return   Returns the classes UMLStereotype object." name="getUMLStereotype" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="V6FQFjHrs1hD" type="aowHoM487F3E" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="0jCzuuQVjMkX" comment="Returns the classes stereotype name.&#xa;Returns an empty string if no stereotype object is set.&#xa;&#xa;@param includeAdornments Include surrounding angled brackets&#xa;                         &quot;«&quot; and &quot;»&quot;.&#xa;@return  Returns the classes stereotype name." name="getStereotype" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="yGpqHW2HEEE8" type="dUt1TMu4e6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="ipep4h1alGy0" type="8c3ctJdhRSz0" value="" name="includeAdornments" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="9ebs1MNj91XB" comment="Return the package(s) in which this UMLObject is contained&#xa;as a text.&#xa;&#xa;@param separator Separator string for joining together the&#xa;                 individual package prefixes (optional.)&#xa;                 If no separator is given then the separator&#xa;                 of the currently selected language is used.&#xa;@param includeRoot  Whether to prefix the root folder name.&#xa;                    Default: false.&#xa;@return  The UMLObject's enclosing package(s) as a text." name="getPackage" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="yC17CYGs40It" type="dUt1TMu4e6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="gYlPpiQlyDbD" type="j3HN7RojRZkd" value="" name="separator" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="kdSwqg4zKepJ" type="8c3ctJdhRSz0" value="" name="includeRoot" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="igcetErbpJXf" comment="Return a list of the packages in which this class is embedded.&#xa;The outermost package is first in the list.&#xa;&#xa;@param includeRoot  Whether to prefix the root folder name.&#xa;                    Default: false.&#xa;@return  UMLPackageList of the containing packages." name="getPackages" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="8VgCVw4DagpU" type="EkW5TcpBorWd" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="xaeHCRbAecFo" type="8c3ctJdhRSz0" value="" name="includeRoot" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="sg3ixZNu90AJ" comment="Returns the UMLPackage that this class is located in.&#xa;&#xa;@return  Pointer to the UMLPackage of this class." name="getUMLPackage" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="PjT1JgpRBUbf" type="g2AlSN6Uj0Sp" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="OfqzKgRCKUuI" comment="Assigns a new Id to the object" name="setID" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="3GAAEKRd3ufK" type="Z6hEnPU23Y7J" value="" name="NewID" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="YUliwNNL0BKK" comment="Returns a copy of m_Name" name="getName" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="plVADPQFdaNr" type="dUt1TMu4e6AS" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="tpTuh6FGY0yV" comment="Set the UMLObject's name" name="setName" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="LJqKU8cIt7S4" type="j3HN7RojRZkd" value="" name="strName" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="VqJ8QhyHWPCD" comment="Method used by setName: its called by  cmdSetName, Don't use it!" name="setNamecmd" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="VRR3PPYjgM19" type="j3HN7RojRZkd" value="" name="strName" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="UdRNlrQEhjK5" comment="Returns the fully qualified name, i.e. all package prefixes and then m_Name.&#xa;&#xa;@param separator  The separator string to use (optional.)&#xa;                  If not given then the separator is chosen according&#xa;                  to the currently selected active programming language&#xa;                  of import and code generation.&#xa;@param includeRoot  Whether to prefix the root folder name to the FQN.&#xa;                    See UMLDoc::getRootFolder(). Default: false.&#xa;@return  The fully qualified name of this UMLObject." name="getFullyQualifiedName" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="0Ngf40lRH8Jw" type="dUt1TMu4e6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="OINsfZ4AyVCN" type="j3HN7RojRZkd" value="" name="separator" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="tk4Z75ibj9xS" type="8c3ctJdhRSz0" value="" name="includeRoot" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="fN5drHykz3H6" comment="Returns the abstract state of the object." name="getAbstract" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="8ygp5bH4wvj0" type="8c3ctJdhRSz0" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="wURBaj7F4Asv" comment="Sets the paste state of the object." name="setAbstract" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="RrdRstV0r9qw" type="8c3ctJdhRSz0" value="" name="bAbstract" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="i50e1idxC26n" comment="Sets the abstract state of the object." name="setInPaste" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="lB2oMtjliLAa" type="8c3ctJdhRSz0" value="" name="bInPaste" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Cea3nOxWUw8V" comment="This method is called if you wish to see the properties of a&#xa;UMLObject.  A dialog box will be displayed from which you&#xa;can change the object's properties.&#xa;&#xa;@param page    The page to show.&#xa;@param assoc   Whether to show association page.&#xa;@return        True if we modified the object." name="showProperties" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="gUrAQzd2j1pV" type="8c3ctJdhRSz0" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="elQooWZXhaL1" type="p9rIb5vfrY7b" value="" name="page" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="T3nBMxjYbJZN" type="8c3ctJdhRSz0" value="" name="assoc" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="XO2CyMERP1aj" comment="Resolve referenced objects (if any.)&#xa;Needs to be called after all UML objects are loaded from file.&#xa;This needs to be done after all model objects are loaded because&#xa;some of the xmi.id's might be forward references, i.e. they may&#xa;identify model objects which were not yet loaded at the point of&#xa;reference.&#xa;The default implementation attempts resolution of the m_SecondaryId.&#xa;&#xa;@return   True for success." name="resolveRef" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="wJHYbotFIkPh" type="8c3ctJdhRSz0" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="true" isLeaf="false" isRoot="false" xmi.id="j0hQ1WvWvwit" comment="This method saves the XMI attributes of each specific model class.&#xa;It needs to be implemented by each child class.&#xa;For creating the QDomElement and saving the common XMI parts,&#xa;it can use the save() method." name="saveToXMI" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="IuJfttMqBdMk" type="ctbqRd7AbF66" value="" name="qDoc" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="PFzfzMMgM47L" type="CKFlXJq4UrkK" value="" name="qElement" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="a0pVwVNCQgpJ" comment="This method loads the generic parts of the XMI common to most model&#xa;classes.  It is not usually reimplemented by child classes.&#xa;Instead, it invokes the load() method which implements the loading&#xa;of the specifics of each child class.&#xa;&#xa;@param element   The QDomElement from which to load." name="loadFromXMI" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="nBK7FPQoPFJK" type="8c3ctJdhRSz0" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="ZB7imTSBiRrf" type="CKFlXJq4UrkK" value="" name="element" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="lgW9MMQuVYaI" comment="Analyzes the given QDomElement for a reference to a stereotype.&#xa;&#xa;@param element   QDomElement to analyze.&#xa;@return          True if a stereotype reference was found, else false." name="loadStereotype" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="4kVSzpmiTGro" type="8c3ctJdhRSz0" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="13TiSILEUfLh" type="CKFlXJq4UrkK" value="" name="element" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="aIg6qGOpHpVk" comment="Returns true if this UMLObject has classifier scope,&#xa;otherwise false (the default)." name="getStatic" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="6ryaUHHZ1n1z" type="8c3ctJdhRSz0" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="alh11ZnapTgf" comment="Sets the value for m_bStatic." name="setStatic" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="i2SzpyjvnfVH" type="8c3ctJdhRSz0" value="" name="bStatic" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="xlqwWpv4Yd5a" comment="This should be reimplemented by subclasses if they wish to&#xa;accept certain types of associations. Note that this only&#xa;tells if this UMLObject can accept the association&#xa;type. When creating an association another check is made to&#xa;see if the association is valid. For example a UMLClass&#xa;(UMLClassifier) can accept generalizations and should&#xa;return true. If while creating a generalization the&#xa;superclass is already subclassed from this, the association&#xa;is not valid and will not be created.  The default accepts&#xa;nothing (returns false)" name="acceptAssociationType" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="0hZnN25IltEH" type="8c3ctJdhRSz0" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="At8zKoc2o40d" type="1veKd5yRHVaC" value="" name="" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="hALFlPnvGvsa" comment="Return secondary ID. Required by resolveRef()." name="getSecondaryId" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="hUbVWZ7XGeIb" type="dUt1TMu4e6AS" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="eLtQD8fuGz71" comment="Set the secondary ID.&#xa;Currently only required by petalTree2Uml(); all other setting of the&#xa;m_SecondaryID is internal to the UMLObject class hierarchy." name="setSecondaryId" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="OvueomCWElzk" type="j3HN7RojRZkd" value="" name="id" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="K6FZiYANt4l6" comment="Return secondary ID fallback.&#xa;Required by resolveRef() for imported model files." name="getSecondaryFallback" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="CQyQP6Rl1JPp" type="dUt1TMu4e6AS" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="5aJJLJ1eNHD6" comment="Set the secondary ID fallback.&#xa;Currently only used by petalTree2Uml()." name="setSecondaryFallback" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="pNRgPCnZalzy" type="j3HN7RojRZkd" value="" name="id" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="rQjqh7emhx30" comment="Auxiliary to saveToXMI.&#xa;Create a QDomElement with the given tag, and save the XMI attributes&#xa;that are common to all child classes to the newly created element.&#xa;This method does not need to be overridden by child classes." name="save" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="ge2Lb3Lq80SS" type="67URooyOfZF7" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="G5eeMri9D9pc" type="j3HN7RojRZkd" value="" name="tag" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="JaCrK9p9YZ0F" type="ctbqRd7AbF66" value="" name="qDoc" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="pAZ0HPbYxlPH" comment="Forces the emission of the modified signal.  Useful when&#xa;updating several attributes at a time: you can block the&#xa;signals, update all atts, and then force the signal." name="emitModified" />
        <UML:Operation visibility="protected" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="uFRSmPiS1ina" comment="Emitted when the UMLObject has changed. Note that some objects emit&#xa;this signal when one of its children changes, for example, a UMLClass&#xa;emits a modified() signal when one of its operation changes while the Operation&#xa;itself emits the corresponding signal as well." name="modified" />
        <UML:Operation visibility="protected" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="j8Qs6qIuyquD" comment="Initializes key variables of the class." name="init" />
        <UML:Operation visibility="protected" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="FVlAG9S9Mrb8" comment="Calls UMLDoc::signalUMLObjectCreated() if m_BaseType affords&#xa;doing so." name="maybeSignalObjectCreated" />
        <UML:Operation visibility="protected" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="EHaFxLphREXW" comment="Auxiliary to loadFromXMI.&#xa;This method is usually overridden by child classes.&#xa;It is responsible for loading the specific XMI structure&#xa;of the child class." name="load" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="7RBTGlbU29hy" type="8c3ctJdhRSz0" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="4nQ1dKEqo012" type="CKFlXJq4UrkK" value="" name="element" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="PAKwLZbSExG9" xmi.id="uXRI8STL1XSj" parent="EcOTh0GL2tr5" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Yp4SNPl2TgE2" name="UMLEntity" />
      <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" elementReference="QO1zGta3pr5w" isRoot="false" xmi.id="qOczg3ppL7rU" name="UMLEntityList" />
      <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" elementReference="AZ8KhVU8rU75" isRoot="false" xmi.id="Ng8BVC7LajJF" name="UMLEntityListIt" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="PAKwLZbSExG9" comment="                                                                        *&#xa;  This program is free software; you can redistribute it and/or modify  *&#xa;  it under the terms of the GNU General Public License as published by  *&#xa;  the Free Software Foundation; either version 2 of the License, or     *&#xa;  (at your option) any later version.                                   *&#xa;                                                                        *&#xa;  copyright (C) 2002-2008                                               *&#xa;  Umbrello UML Modeller Authors &lt;umbrello-devel@kde.org>                  *&#xa;//**&#xa;This class contains the non-graphical information required for UMLObjects&#xa;which appear as moveable widgets on the canvas.&#xa;&#xa;This class inherits from @ref UMLObject which contains most of the&#xa;information.&#xa;It is not instantiated itself, it's just used as a super class for&#xa;actual model objects.&#xa;&#xa;@short Non-graphical information for a UMLCanvasObject.&#xa;@author Jonathan Riddell&#xa;@see UMLObject&#xa;Bugs and comments to umbrello-devel@kde.org or http://bugs.kde.org" name="UMLCanvasObject" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="uXRI8STL1XSj" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Attribute visibility="protected" isSpecification="false" xmi.id="mLq50v4hHClI" type="KBNhUHJk7m25" comment="List of all the associations in this object.&#xa;Inheriting classes add more types of objects that are possible in this list;&#xa;for example, UMLClassifier adds operations, attributes, and templates.&#xa;&#xa;@todo Only a pointer to the appropriate association end object&#xa;      (UMLRole) should be saved here, not the entire UMLAssociation.&#xa;" name="m_List" />
        <UML:Operation stereotype="constructor" visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="6Ih5p8o7MCqC" name="UMLCanvasObject" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="msQWCYc5I6Bx" type="j3HN7RojRZkd" value="" name="name" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="sPW83LW8dCDQ" type="Z6hEnPU23Y7J" value="" name="id" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="K0XeCNoyDFSP" comment="Standard deconstructor." name="~ UMLCanvasObject" />
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="l4U3Afy13U94" comment=" Overloaded '==' operator" name="operator ==" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="OZAP1IUpueDi" type="8c3ctJdhRSz0" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="gYWtnyIZ1la9" type="neCQoOo8OLma" value="" name="rhs" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="22oQLY026Wvs" comment="Copy the internal presentation of this object into the new&#xa;object." name="copyInto" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="TCPUvzdJWmjY" type="75G7jzEHQyIY" value="" name="lhs" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="2BLwpYcsYOIu" comment="Adds an association end to m_List.&#xa;&#xa;@param assoc  The association to add.&#xa;              @todo change param type to UMLRole" name="addAssociationEnd" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="9ejh00ZwHVw0" type="8c3ctJdhRSz0" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="FKCl6tH84a2t" type="wHw0lpsEzHiu" value="" name="assoc" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="JnFI2vDHFP1J" comment="Determine if this canvasobject has the given association.&#xa;&#xa;@param assoc   The association to check." name="hasAssociation" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="tDz8gu8zfLGh" type="8c3ctJdhRSz0" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="IGRKrRBy3vd3" type="wHw0lpsEzHiu" value="" name="assoc" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="FTxSqwm6CBQ1" comment="Remove an association end from the CanvasObject.&#xa;&#xa;@param assoc   The association to remove.&#xa;               @todo change param type to UMLRole" name="removeAssociationEnd" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="ZcSEviuA9rdx" type="p9rIb5vfrY7b" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="dZzgUdkLohTU" type="wHw0lpsEzHiu" value="" name="assoc" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="nN3xYRz90yoT" comment="Remove all association ends from the CanvasObject." name="removeAllAssociationEnds" />
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ZWoNDIqlsIxl" comment="Returns the number of associations for the CanvasObject.&#xa;This is the sum of the aggregations and compositions.&#xa;&#xa;@return  The number of associations for the Concept." name="associations" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="0pw7gX4Ru7NS" type="p9rIb5vfrY7b" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="WMaUIOxqukB5" comment="Return the list of associations for the CanvasObject.&#xa;&#xa;@return   The list of associations for the CanvasObject." name="getAssociations" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="01qqHmbHbXMG" type="ygrYuny1WCFh" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="2QfwV2NzMxUd" comment="Return the subset of m_List that matches the given type.&#xa;&#xa;@param assocType   The Association_Type to match.&#xa;@return   The list of associations that match assocType." name="getSpecificAssocs" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="rXBS2Xg5wM1R" type="ygrYuny1WCFh" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="LPTD9eI7e7xv" type="1veKd5yRHVaC" value="" name="assocType" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="MMRjJvKcInnQ" comment="Return a list of the superclasses of this concept.&#xa;TODO: This overlaps with UMLClassifier::findSuperClassConcepts(),&#xa;      see if we can merge the two.&#xa;&#xa;@return  The list of superclasses for the concept." name="getSuperClasses" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="P6X1BTx2y8S0" type="RuMJhLZC6vss" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="d95ZV5zrRQYj" comment="Return a list of the classes that inherit from this concept.&#xa;TODO: This overlaps with UMLClassifier::findSubClassConcepts(),&#xa;      see if we can merge the two.&#xa;&#xa;@return  The list of classes inheriting from the concept." name="getSubClasses" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="JsJZd7z3BV2M" type="RuMJhLZC6vss" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="wzMu5ouhxyGQ" comment="Shorthand for getSpecificAssocs(Uml::at_Realization)&#xa;&#xa;@return  The list of realizations for the Concept." name="getRealizations" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="3DGSdo9ufTUI" type="ygrYuny1WCFh" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="aRJlwM5sLRkP" comment="Shorthand for getSpecificAssocs(Uml::at_Aggregation)&#xa;&#xa;@return  The list of aggregations for the Concept." name="getAggregations" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="Ff6BbKbeYr49" type="ygrYuny1WCFh" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="eE4JhWZFxt0s" comment="Shorthand for getSpecificAssocs(Uml::at_Composition)&#xa;&#xa;@return  The list of compositions for the Concept." name="getCompositions" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="F3iYUTvh6zsh" type="ygrYuny1WCFh" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="KSJqJNzvZ1EE" comment="Shorthand for getSpecificAssocs(Uml::at_Relationship)&#xa;&#xa;@return  The list of relationships for the entity." name="getRelationships" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="VoTRfRJsUzQy" type="ygrYuny1WCFh" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="SKeYJWFdyYRG" comment="Find a child object with the given name.&#xa;&#xa;@param n         The name of the object to find.&#xa;@param t         The type to find (optional.) If not given then&#xa;                 any object type will match.&#xa;@return  Pointer to the object found; NULL if none found." name="findChildObject" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="AsI7QkLK9UmZ" type="75G7jzEHQyIY" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="wR9TQMiwABNn" type="j3HN7RojRZkd" value="" name="n" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="bef5d326Ngch" type="gXjSugHIlpJY" value="" name="t" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="qUTydojESOI4" comment="Find an association.&#xa;&#xa;@param id        The id of the object to find.&#xa;@param considerAncestors boolean switch to consider ancestors while searching&#xa;@return  Pointer to the object found (NULL if not found.)" name="findChildObjectById" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="TTNuqfyIx65t" type="75G7jzEHQyIY" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="SK8pykU6cnB1" type="Z6hEnPU23Y7J" value="" name="id" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="VUJez5BnXfkB" type="8c3ctJdhRSz0" value="" name="considerAncestors" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="qa0RN9QsehUb" comment="Returns a name for the new association, operation, template&#xa;or attribute appended with a number if the default name is&#xa;taken e.g. new_association, new_association_1 etc.&#xa;&#xa;@param type      The object type for which to make a name.&#xa;@param prefix    Optional prefix to use for the name.&#xa;                 If not given then uniqChildName() will choose the prefix&#xa;                 internally based on the object type.&#xa;@return  Unique name string for the Object_Type given." name="uniqChildName" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="7UedJIzlud9c" type="dUt1TMu4e6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="UceQijJWJHve" type="lfMII6RmYpgO" value="" name="type" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="RLU51wgmc24u" type="j3HN7RojRZkd" value="" name="prefix" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="KT7ck2G9MjEN" name="removeAllChildObjects" />
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="fs9FtB8yfmbw" name="subordinates" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="5agxBpaVIh71" type="KBNhUHJk7m25" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="hMA33NQgDZw6" comment="Reimplementation of UMLObject method." name="resolveRef" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="j24OmdJpBznM" type="8c3ctJdhRSz0" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="protected" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Z9znjtrStuof" comment="Emit when new association is added.&#xa;@param assoc Pointer to the association which has been added." name="sigAssociationEndAdded" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="V5Vh4G3rbtub" type="wHw0lpsEzHiu" value="" name="assoc" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="protected" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="nwG281LgBIRs" comment="Emit when new association is removed.&#xa;@param assoc Pointer to the association which has been removed." name="sigAssociationEndRemoved" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="BII2A4hgAANC" type="wHw0lpsEzHiu" value="" name="assoc" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="iE4KpEKgZfyX" xmi.id="m845GuXORfg8" parent="PAKwLZbSExG9" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="jbhAE0BeGf5B" comment="  This program is free software; you can redistribute it and/or modify  *&#xa;  it under the terms of the GNU General Public License as published by  *&#xa;  the Free Software Foundation; either version 2 of the License, or     *&#xa;  (at your option) any later version.                                   *&#xa;                                                                        *&#xa;  copyright (C) 2002-2008                                               *&#xa;  Umbrello UML Modeller Authors &lt;umbrello-devel@kde.org>                  *&#xa;//**&#xa;This class is used to set up information for an attribute.  This is like&#xa;a programming attribute.  It has a type, name, visibility and initial value.&#xa;&#xa;@short Sets up attribute information.&#xa;@author Paul Hensgen &lt;phensgen@techie.com>&#xa;@see UMLObject&#xa;Bugs and comments to umbrello-devel@kde.org or http://bugs.kde.org" name="UMLAttribute" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="n6RRQ1F8aVBW" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Attribute visibility="protected" isSpecification="false" xmi.id="bKugw52QBM4j" type="dUt1TMu4e6AS" name="m_InitialValue" />
        <UML:Attribute visibility="protected" isSpecification="false" xmi.id="UkcJXn6ejlbZ" type="CzJblqJdLTot" name="m_ParmKind" />
        <UML:Operation stereotype="constructor" visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Ykf6DocOj6TM" name="UMLAttribute" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="aVggEAxunts3" type="75G7jzEHQyIY" value="" name="parent" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="t170XZV5H8CU" type="j3HN7RojRZkd" value="" name="name" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="xmterMyRpe53" type="Z6hEnPU23Y7J" value="" name="id" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="m3xXunanmhlK" type="Bh1MvAj7B0kh" value="" name="s" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="FGPWPZzKMqwB" type="75G7jzEHQyIY" value="" name="type" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="AuczWg0Ghwnb" type="j3HN7RojRZkd" value="" name="iv" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation stereotype="constructor" visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="jNMW38oIMBmj" comment="Sets up an attribute.&#xa;&#xa;@param parent    The parent of this UMLAttribute." name="UMLAttribute" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="ll35ZxGjrqiL" type="75G7jzEHQyIY" value="" name="parent" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="UjbBfOmMk7qn" comment="Overloaded '==' operator" name="operator ==" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="T7FDE5yRk10Y" type="8c3ctJdhRSz0" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Isq7iYTDF4Ms" type="Fe3ZqpJbZKe8" value="" name="rhs" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="oH7NclUsbKzJ" comment="destructor." name="~ UMLAttribute" />
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="qSU6XpwywBB8" comment="Copy the internal presentation of this object into the UMLAttribute&#xa;object." name="copyInto" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="F7Zx8XVwnaIN" type="75G7jzEHQyIY" value="" name="lhs" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="LkFw2CDsfgwA" comment="Reimplementation of method from UMLObject is required as&#xa;an extra signal, attributeChanged(), is emitted." name="setName" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Tt8P2HVFO2CW" type="j3HN7RojRZkd" value="" name="name" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ZfQKFghYOwSQ" comment="Reimplementation of method from UMLObject is required as&#xa;an extra signal, attributeChanged(), is emitted." name="setVisibility" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="9eHmIDwl6487" type="Bh1MvAj7B0kh" value="" name="s" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="LdMhfXBCCbXQ" comment="Make a clone of the UMLAttribute." name="clone" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="GEye9P3G3K2L" type="75G7jzEHQyIY" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Xw6cyEjHp3yU" comment="Returns The initial value of the UMLAttribute.&#xa;&#xa;@return  The initial value of the Attribute." name="getInitialValue" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="a9gliBByQ7bX" type="dUt1TMu4e6AS" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="WenXwnsThw3f" comment="Sets the initial value of the UMLAttribute.&#xa;&#xa;@param iv                The initial value of the UMLAttribute." name="setInitialValue" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="8mwxquPO149j" type="j3HN7RojRZkd" value="" name="iv" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="FKgdQHAwtvSp" comment="Returns a string representation of the UMLAttribute.&#xa;&#xa;@param sig               If true will show the attribute type and&#xa;                 initial value.&#xa;@return  Returns a string representation of the UMLAttribute." name="toString" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="ogHpkQZ0jFd9" type="dUt1TMu4e6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="gKGNFK0L4wJs" type="7tbaQ2KIJrwi" value="" name="sig" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Um3LfVAKoOh1" comment="Reimplement method from UMLObject." name="getFullyQualifiedName" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="cvNOK3P0lllL" type="dUt1TMu4e6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="iiMlcfbRMqE4" type="j3HN7RojRZkd" value="" name="separator" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="Fn4y0g5SQ6n3" type="8c3ctJdhRSz0" value="" name="includeRoot" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="PNmjB1nQmqMl" comment="Creates the &lt;UML:Attribute> XMI element." name="saveToXMI" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="URDuYzx8uJWE" type="ctbqRd7AbF66" value="" name="qDoc" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="MtF5e0Q1LDkV" type="CKFlXJq4UrkK" value="" name="qElement" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="CYvwMIhqjtiF" comment="Display the properties configuration dialog for the attribute." name="showPropertiesDialog" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="CoOWz719dw5z" type="8c3ctJdhRSz0" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="sfNmwr1IkENN" type="tt3Q9VNPmVtu" value="" name="parent" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ElnweV9U8VG5" name="setParmKind" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="KFN3RlQeXmAW" type="CzJblqJdLTot" value="" name="pk" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="r9fU5iRITEC7" name="getParmKind" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="hLbqoqv93GCT" type="CzJblqJdLTot" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="za7WKF0COdeR" comment="Returns all the template params (if any) that are in the type of this attribute" name="getTemplateParams" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="M6hpItv0DUo1" type="RuMJhLZC6vss" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="protected" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Ih8KxKnvsuRD" comment="Required for informing AssociationWidgets representing this attribute&#xa;that the attribute name or visibility has changed." name="attributeChanged" />
        <UML:Operation visibility="protected" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="7QPV31uN5cDO" comment="Loads the &lt;UML:Attribute> XMI element." name="load" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="7yhzq7CxVZQW" type="8c3ctJdhRSz0" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="V6MgaAgtpoDm" type="CKFlXJq4UrkK" value="" name="element" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="qoWLLuswFmb9" comment="Puts in the param templateParamList all the template params that are in templateParam" name="setTemplateParams" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="rbX0ycjSKKmr" type="j3HN7RojRZkd" value="" name="templateParam" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="5qTpZ5OQrtlC" type="x8GcFeNw74EU" value="" name="templateParamList" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="jbhAE0BeGf5B" xmi.id="n6RRQ1F8aVBW" parent="zC5M9e0b3SnI" name="" />
      <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" elementReference="nd72NgACHhCF" isRoot="false" xmi.id="HwgaEQRJEv6n" name="UMLAttributeListIt" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="yVBpOx19Y6Au" comment="This sub-class adds copyInto and clone to the QPtrList&lt;UMLAttribute>&#xa;base class." name="UMLAttributeList" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="JGgX9nJ7ISue" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation stereotype="constructor" visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="D2iTUd7sXsmV" name="UMLAttributeList" />
        <UML:Operation stereotype="constructor" visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="maG1S3Cc4cw0" name="UMLAttributeList" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="FpJmf5GRfWR7" type="rgDL4yyHyekT" value="" name="" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="YdjaGea5KlQO" name="~ UMLAttributeList" />
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="iOdg1L7GAQ1n" comment="Copy the internal presentation of this object into the new&#xa;object." name="copyInto" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="ZPZtBzFrMsXL" type="VHD8leEHFvrT" value="" name="rhs" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="DdbL3a7XrKfb" comment="Make a clone of this object." name="clone" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="wtq9pgdO5AGE" type="VHD8leEHFvrT" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="yVBpOx19Y6Au" xmi.id="JGgX9nJ7ISue" parent="mK62zHFFBvpP" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="zC5M9e0b3SnI" comment="Classifiers (classes, interfaces) have lists of operations,&#xa;attributes, templates and others.  This is a base class for&#xa;the items in this list.  This abstraction should remove&#xa;duplication of dialogs and allow for stereotypes in lists.&#xa;&#xa;@short A base class for classifier list items (e.g. attributes)&#xa;@author Jonathan Riddell&#xa;Bugs and comments to umbrello-devel@kde.org or http://bugs.kde.org" name="UMLClassifierListItem" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="o0A2leF0s6OK" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation stereotype="constructor" visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="SjKKogcKTOEy" name="UMLClassifierListItem" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="QszBsCiNhRQN" type="75G7jzEHQyIY" value="" name="parent" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="46pduJxK1Gep" type="j3HN7RojRZkd" value="" name="name" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="wG9NcML3EJC6" type="Z6hEnPU23Y7J" value="" name="id" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation stereotype="constructor" visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="VtRAKqVPuK2o" comment="Constructor.  Empty.&#xa;&#xa;@param parent    The parent to this operation.&#xa;         At first sight it would appear that the type of the&#xa;         parent should be UMLClassifier. However, the class&#xa;         UMLAttribute is also used for the parameters of&#xa;         operations, and in this case the UMLOperation is the&#xa;         parent." name="UMLClassifierListItem" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="cy8dEkQ8yXWb" type="75G7jzEHQyIY" value="" name="parent" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="trc68oAbhcm2" comment="Destructor.  Empty." name="~ UMLClassifierListItem" />
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="SHPKaP8CLEpZ" comment="Returns the type of the UMLClassifierListItem.&#xa;&#xa;@return  The type of the UMLClassifierListItem." name="getType" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="yDiwkCVe15kA" type="6RKvazYnW00Q" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="uulZUVZulwEL" comment="Returns the type name of the UMLClassifierListItem.&#xa;&#xa;@return  The type name of the UMLClassifierListItem." name="getTypeName" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="KKXfYKFUXvPF" type="dUt1TMu4e6AS" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="5st6ybEqUyPw" comment="Sets the type name of the UMLClassifierListItem.&#xa;DEPRECATED - use setType() instead.&#xa;&#xa;@param type      The type name of the UMLClassifierListItem." name="setTypeName" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="TxrCt3XDO2ru" type="j3HN7RojRZkd" value="" name="type" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="M4Przm72ey8c" comment="Sets the type of the UMLAttribute.&#xa;&#xa;@param type      Pointer to the UMLObject of the type." name="setType" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="YLS2Jqyknpxe" type="75G7jzEHQyIY" value="" name="type" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="rSqFVh9plWfi" comment="Returns a string representation of the list item.&#xa;&#xa;@param sig               What type of operation string to show.&#xa;@return  The string representation of the operation." name="toString" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="qFBb28Fta363" type="dUt1TMu4e6AS" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="ImkxiqXG90IS" type="7tbaQ2KIJrwi" value="" name="sig" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="true" isLeaf="false" isRoot="false" xmi.id="kGtTkYB3Ityy" comment="Display the properties configuration dialog for the list item.&#xa;&#xa;@param parent    The parent widget.&#xa;@return  True for success of this operation." name="showPropertiesDialog" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="b8e9BlBuz4Nj" type="8c3ctJdhRSz0" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="iVFrVVIJkTsn" type="tt3Q9VNPmVtu" value="" name="parent" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="aXkqQio8C1yf" comment="Copy the internal presentation of this object into the new&#xa;object." name="copyInto" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="XGzFjp0IxfP7" type="75G7jzEHQyIY" value="" name="lhs" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="true" isLeaf="false" isRoot="false" xmi.id="OazNcM4Arp0I" comment="The abstract method UMLObject::clone() must be implemented&#xa;by the classes inheriting from UMLClassifierListItem." name="clone" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="VnOfmMLHcIXL" type="75G7jzEHQyIY" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" elementReference="7T5RMbmXEMrF" isRoot="false" xmi.id="wymmISLCJBL6" name="UMLClassifierListItemListIt" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ryVv6j7CCBdW" comment="This sub-class adds copyInto and clone to the QPtrList&lt;UMLClassifierListItem>&#xa;base class." name="UMLClassifierListItemList" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="QjJjteqkbJdf" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation stereotype="constructor" visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Tlv22Yi2JZCF" name="UMLClassifierListItemList" />
        <UML:Operation stereotype="constructor" visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="2tvtcZSEPefE" name="UMLClassifierListItemList" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="BEAVmMioGeiq" type="EBSX0NkU8dWA" value="" name="other" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="D83amgp0sFWs" name="~ UMLClassifierListItemList" />
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="cEKkrrs232Vp" comment="Copy the internal presentation of this object into the new&#xa;object." name="copyInto" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="8R9ygfpIt90i" type="MEcasIR3QSeB" value="" name="rhs" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ysl0sGnESPpK" comment="Make a clone of this object." name="clone" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="hEM6g0HoRQl5" type="MEcasIR3QSeB" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="ryVv6j7CCBdW" xmi.id="QjJjteqkbJdf" parent="mO4yktDer0O7" name="" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="4aLxhLegDPg3" name="UMLOperation" />
      <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" elementReference="dRH6r4OWIkcy" isRoot="false" xmi.id="irl7IWCM6XHl" name="UMLOperationList" />
      <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" elementReference="stR3G54uXMyM" isRoot="false" xmi.id="OKsh3VflMQtc" name="UMLOperationListIt" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="u3wybCkR59TM" name="UMLTemplate" />
      <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" elementReference="FVEkpA6EUyvX" isRoot="false" xmi.id="RYHoxAOrBLqk" name="UMLTemplateList" />
      <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" elementReference="XYAchdwu6Aew" isRoot="false" xmi.id="KkAnh5K8dZua" name="UMLTemplateListIt" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="9jGGDxRgiGcT" name="UMLAssociation" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="JTzdUulvMWEt" name="IDChangeLog" />
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="wOWdwrNVw75o" comment="This class defines the non-graphical information required for a&#xa;UML Classifier (ie a class or interface).&#xa;This class inherits from @ref UMLPackage which allows classifiers&#xa;to also act as namespaces, i.e. it allows classifiers to nest.&#xa;&#xa;NOTE: There is a unit test available for this class.&#xa;      Please, use and adapt it when necessary.&#xa;&#xa;@short Information for a non-graphical Concept/Class.&#xa;@author Paul Hensgen &lt;phensgen@techie.com>&#xa;Bugs and comments to umbrello-devel@kde.org or http://bugs.kde.org" name="UMLClassifier" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="hHQtcEd7mnhT" />
       </UML:GeneralizableElement.generalization>
      </UML:Class>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="iE4KpEKgZfyX" comment="This class contains the non-graphical information required for a UML&#xa;Package.&#xa;This class inherits from @ref UMLCanvasObject which contains most of the&#xa;information.&#xa;&#xa;@short Non-graphical information for a Package.&#xa;@author Jonathan Riddell&#xa;@see UMLCanvasObject&#xa;Bugs and comments to umbrello-devel@kde.org or http://bugs.kde.org" name="UMLPackage" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="m845GuXORfg8" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Attribute visibility="protected" isSpecification="false" xmi.id="ibF2xin0ti2x" type="KBNhUHJk7m25" comment="References to the objects contained in this package.&#xa;The UMLPackage is the owner of the objects." name="m_objects" />
        <UML:Operation stereotype="constructor" visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="6KsXzYd8gs6J" name="UMLPackage" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="C9JCJSffiRYf" type="j3HN7RojRZkd" value="" name="name" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="XfMlr6FvO5QO" type="Z6hEnPU23Y7J" value="" name="id" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="b4UFwYY6hpGz" comment="Empty deconstructor." name="~ UMLPackage" />
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="HvexKCarsuch" comment="Copy the internal presentation of this object into the new&#xa;object." name="copyInto" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="zpbNs1jR5Bhz" type="75G7jzEHQyIY" value="" name="lhs" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="jD5P3LOIE0EX" comment="Make a clone of this object." name="clone" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="BmO1fzieoH1f" type="75G7jzEHQyIY" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Jl6MwlKgzP30" comment="Adds an object in this package.&#xa;&#xa;@param pObject   Pointer to the UMLObject to add.&#xa;@return    True if the object was actually added." name="addObject" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="oIaaZbFsKMDH" type="8c3ctJdhRSz0" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="jRIvPUSaHrbw" type="75G7jzEHQyIY" value="" name="pObject" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="5Xx4uy2dPJXo" comment="Removes an object from this package.&#xa;Does not physically delete the object.&#xa;&#xa;@param pObject   Pointer to the UMLObject to be removed." name="removeObject" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="nzN2oyycGWDo" type="75G7jzEHQyIY" value="" name="pObject" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="6SgQmrhqOcsJ" comment="Removes all objects from this package.&#xa;Inner containers (e.g. nested packages) are removed recursively." name="removeAllObjects" />
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="avwxETk1R74F" comment="Returns the list of objects contained in this package." name="containedObjects" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="30qIX36bTk1E" type="KBNhUHJk7m25" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ch40HwJqpEn3" comment="Adds an existing association to the matching concept in the list of concepts.&#xa;The selection of the matching concept depends on the association type:&#xa;For generalizations, the assoc is added to the concept that matches role A.&#xa;For aggregations and compositions , the assoc is added to the concept&#xa;that matches role B.&#xa;&#xa;@param assoc     The association to add" name="addAssocToConcepts" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="fV54a7Ke78wc" type="wHw0lpsEzHiu" value="" name="assoc" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="90BckDoMsqN9" comment="Remove the association from the participating concepts." name="removeAssocFromConcepts" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="lexaqleWEhap" type="wHw0lpsEzHiu" value="" name="assoc" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="msRt0LU9Lfk5" comment="Find the object of the given name in the list of contained objects.&#xa;&#xa;@param name              The name to seek.&#xa;@return  Pointer to the UMLObject found or NULL if not found." name="findObject" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="WIijxGWj9xb7" type="75G7jzEHQyIY" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="qWQgNlq6PngE" type="j3HN7RojRZkd" value="" name="name" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="I5FdixgXT6Do" comment="Find the object of the given ID in the list of contained objects.&#xa;&#xa;@param id                The ID to seek.&#xa;@return  Pointer to the UMLObject found or NULL if not found." name="findObjectById" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="RWWYT7gjAtKt" type="75G7jzEHQyIY" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="r1uFnZTHpB0n" type="Z6hEnPU23Y7J" value="" name="id" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="q1OH5b4xdwCQ" comment="Append all packages from this packaed ( and those from nested packeges)&#xa;to the given UMLPackageList.&#xa;&#xa;@param packages     The list to append to&#xa;@param includeNested  Whether to include the packages from nested packages&#xa;                         (default:true)" name="appendPackages" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="iSNsLgj9h7Qm" type="VfhJoi6FCcoe" value="" name="packages" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="jShKPrksUPBI" type="8c3ctJdhRSz0" value="" name="includeNested" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="5HYIsKwamHQ7" comment="Append all classifiers from this package (and those from&#xa;nested packages) to the given UMLClassifierList.&#xa;&#xa;@param classifiers               The list to append to.&#xa;@param includeNested             Whether to include the classifiers from&#xa;                         nested packages (default: true.)" name="appendClassifiers" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="uwMOMYhRnDhf" type="x8GcFeNw74EU" value="" name="classifiers" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="XbDJteOomcPz" type="8c3ctJdhRSz0" value="" name="includeNested" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="GmuLo8pi3C5P" comment="Append all classes from this package (and those from&#xa;nested packages) to the given UMLClassifierList.&#xa;&#xa;@param classes           The list to append to.&#xa;@param includeNested             Whether to include the classes from&#xa;                         nested packages (default: true.)" name="appendClasses" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="imqTxW9U7Kl0" type="x8GcFeNw74EU" value="" name="classes" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="w9nilCgzyYLk" type="8c3ctJdhRSz0" value="" name="includeNested" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="e8RhKW60GvUD" comment="Append all classes and interfaces from this package (and those&#xa;from nested packages) to the given UMLClassifierList.&#xa;&#xa;@param classifiers               The list to append to.&#xa;@param includeNested             Whether to include the classifiers from&#xa;                         nested packages (default: true.)" name="appendClassesAndInterfaces" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="RbfWtOVqVIWE" type="x8GcFeNw74EU" value="" name="classifiers" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="SCDOiW8NfZ2x" type="8c3ctJdhRSz0" value="" name="includeNested" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="37yJ0QURz7vs" comment="Append all entities from this package (and those&#xa;from nested packages) to the given UMLEntityList.&#xa;&#xa;@param entities               The list to append to.&#xa;@param includeNested          Whether to include the entities from&#xa;                         nested packages (default: true.)" name="appendEntities" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="wfTbCTZGaVXa" type="VQi0gFE8PQW6" value="" name="entities" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="t2zq9vidLPd2" type="8c3ctJdhRSz0" value="" name="includeNested" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="cq8zGf5AIWmS" comment="Append all interfaces from this package (and those from&#xa;nested packages) to the given UMLClassifierList.&#xa;&#xa;@param interfaces                The list to append to.&#xa;@param includeNested             Whether to include the interfaces from&#xa;                         nested packages (default: true.)" name="appendInterfaces" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="0JgYmE9fE8VL" type="x8GcFeNw74EU" value="" name="interfaces" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="1ByLaaLAQTAe" type="8c3ctJdhRSz0" value="" name="includeNested" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="6DoOkarirXGd" comment="Resolve types. Required when dealing with foreign XMI files.&#xa;Needs to be called after all UML objects are loaded from file.&#xa;Overrides the method from UMLObject.&#xa;Calls resolveRef() on each contained object.&#xa;&#xa;@return  True for overall success." name="resolveRef" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="jPGxWjJVvFqT" type="8c3ctJdhRSz0" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="private" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="p9cFdmrjxg6h" comment="Creates the &lt;UML:Package> XMI element." name="saveToXMI" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="ExP6SehC3w7X" type="ctbqRd7AbF66" value="" name="qDoc" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="fO3Yer2R1cfc" type="CKFlXJq4UrkK" value="" name="qElement" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="protected" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="OWJJCP1RKOVl" comment="Loads the &lt;UML:Package> XMI element.&#xa;Auxiliary to UMLObject::loadFromXMI." name="load" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="SIURu93GgKaq" type="8c3ctJdhRSz0" />
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="2Ax462bkRcI3" type="CKFlXJq4UrkK" value="" name="element" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="wOWdwrNVw75o" xmi.id="hHQtcEd7mnhT" parent="iE4KpEKgZfyX" name="" />
     </UML:Namespace.ownedElement>
     <XMI.extension xmi.extender="umbrello" >
      <diagrams>
       <diagram showopsig="1" linecolor="#ff0000" snapx="10" showattribassocs="1" snapy="10" linewidth="0" showattsig="1" showpackage="1" showstereotype="1" name="sequence diagram RefactoringAssistant" font="Sans Serif,10,-1,0,50,0,0,0,0,0" canvasheight="809" canvaswidth="1249" localid="BUKs3i2OCKo6" snapcsgrid="0" showgrid="0" showops="1" usefillcolor="1" fillcolor="#ffff00" zoom="100" xmi.id="hgSMKYYpjmHt" documentation="" showscope="1" snapgrid="0" showatts="1" type="3" >
        <widgets>
         <objectwidget linecolor="#ff0000" usesdiagramfillcolor="0" linewidth="none" usesdiagramusefillcolor="1" instancename="" x="166" decon="0" showstereotype="1" y="48" font="Sans Serif,10,-1,0,50,0,1,0,0,0" localid="NEl4f8g1dT22" width="83" isinstance="0" multipleinstance="0" usefillcolor="1" fillcolor="#ffff00" xmi.id="Xm2rXXJVq8Z0" height="27" drawasactor="0" />
         <objectwidget linecolor="#ff0000" usesdiagramfillcolor="0" linewidth="none" usesdiagramusefillcolor="1" instancename="" x="394" decon="0" showstereotype="1" y="48" font="Sans Serif,10,-1,0,50,0,1,0,0,0" localid="ajbS9DedSO2G" width="67" isinstance="0" multipleinstance="0" usefillcolor="1" fillcolor="#ffff00" xmi.id="pE7uURNYaylH" height="27" drawasactor="0" />
         <objectwidget linecolor="#ff0000" usesdiagramfillcolor="0" linewidth="none" usesdiagramusefillcolor="0" instancename="m_refactoringAssist" x="645" decon="0" showstereotype="1" y="102" font="Sans Serif,10,-1,0,50,0,1,0,0,0" localid="siUCyuAL8uOm" width="238" isinstance="0" multipleinstance="0" usefillcolor="1" fillcolor="#ffff00" xmi.id="Wv90SPQm0L5j" height="27" drawasactor="0" />
         <objectwidget linecolor="#ff0000" usesdiagramfillcolor="0" linewidth="none" usesdiagramusefillcolor="1" instancename="newClassifier" x="900" decon="0" showstereotype="1" y="48" font="Sans Serif,10,-1,0,50,0,1,0,0,0" localid="AYmLv68Z9hBU" width="170" isinstance="0" multipleinstance="0" usefillcolor="1" fillcolor="#ffff00" xmi.id="wOWdwrNVw75o" height="27" drawasactor="0" />
         <objectwidget linecolor="#ff0000" usesdiagramfillcolor="0" linewidth="none" usesdiagramusefillcolor="1" instancename="oldClassifier" x="1081" decon="0" showstereotype="1" y="48" font="Sans Serif,10,-1,0,50,0,1,0,0,0" localid="BUKs3i2OCKo6" width="164" isinstance="0" multipleinstance="0" usefillcolor="1" fillcolor="#ffff00" xmi.id="wOWdwrNVw75o" height="27" drawasactor="0" />
         <notewidget width="122" showstereotype="1" x="591" noteType="0" y="348" usesdiagramusefillcolor="1" usesdiagramfillcolor="0" isinstance="0" fillcolor="#dcdcdc" height="50" linecolor="#000000" xmi.id="jOk4JQ48Nk9V" usefillcolor="1" linewidth="none" font="Sans Serif,10,-1,0,50,0,0,0,0,0" text="Move attribute." />
        </widgets>
        <messages>
         <messagewidget linecolor="none" usesdiagramfillcolor="1" widgetbid="ajbS9DedSO2G" textid="HtWJAM0cZyVh" operation="rBReMgb6d5hF" linewidth="none" seqnum="" usesdiagramusefillcolor="1" x="207" showstereotype="1" y="133" widgetaid="NEl4f8g1dT22" font="Sans Serif,10,-1,0,50,0,0,0,0,0" width="228" isinstance="0" usefillcolor="1" fillcolor="none" xmi.id="rBReMgb6d5hF" height="322" sequencemessagetype="1000" >
          <floatingtext linecolor="none" usesdiagramfillcolor="1" linewidth="none" usesdiagramusefillcolor="1" x="220" showstereotype="1" y="112" text=": refactor(classifier : UMLClassifier*)" font="Sans Serif,10,-1,0,50,0,0,0,0,0" pretext="" role="704" width="202" isinstance="0" posttext="" usefillcolor="1" fillcolor="none" xmi.id="HtWJAM0cZyVh" height="21" />
         </messagewidget>
         <messagewidget linecolor="none" usesdiagramfillcolor="1" widgetbid="siUCyuAL8uOm" textid="r2WzHQTZYqZ8" operation="W13Ujpb5cFSp" linewidth="none" seqnum="" usesdiagramusefillcolor="1" x="427" showstereotype="1" y="158" widgetaid="ajbS9DedSO2G" font="Sans Serif,10,-1,0,50,0,0,0,0,0" width="345" isinstance="0" usefillcolor="1" fillcolor="none" xmi.id="W13Ujpb5cFSp" height="32" sequencemessagetype="1000" >
          <floatingtext linecolor="none" usesdiagramfillcolor="1" linewidth="none" usesdiagramusefillcolor="1" x="432" showstereotype="1" y="137" text=": RefactoringAssistant(doc : UMLDoc*, obj : UMLClassifier*, parent : QWidget*, name : const QString&amp;)" font="Sans Serif,10,-1,0,50,0,0,0,0,0" pretext="" role="704" width="559" isinstance="0" posttext="" usefillcolor="1" fillcolor="none" xmi.id="r2WzHQTZYqZ8" height="21" />
         </messagewidget>
         <messagewidget linecolor="none" usesdiagramfillcolor="1" widgetbid="siUCyuAL8uOm" textid="3Pg3tdLJ5spv" operation="JZq5C6WNxHJ3" linewidth="none" seqnum="" usesdiagramusefillcolor="1" x="427" showstereotype="1" y="214" widgetaid="ajbS9DedSO2G" font="Sans Serif,10,-1,0,50,0,0,0,0,0" width="345" isinstance="0" usefillcolor="1" fillcolor="none" xmi.id="JZq5C6WNxHJ3" height="55" sequencemessagetype="1000" >
          <floatingtext linecolor="none" usesdiagramfillcolor="1" linewidth="none" usesdiagramusefillcolor="1" x="475" showstereotype="1" y="193" text=": refactor(obj : UMLClassifier*)" font="Sans Serif,10,-1,0,50,0,0,0,0,0" pretext="" role="704" width="171" isinstance="0" posttext="" usefillcolor="1" fillcolor="none" xmi.id="3Pg3tdLJ5spv" height="21" />
         </messagewidget>
         <messagewidget linecolor="none" usesdiagramfillcolor="1" widgetbid="siUCyuAL8uOm" textid="krrlEVn876RC" operation="show" linewidth="none" seqnum="" usesdiagramusefillcolor="1" x="427" showstereotype="1" y="295" widgetaid="ajbS9DedSO2G" font="Sans Serif,10,-1,0,50,0,0,0,0,0" width="345" isinstance="0" usefillcolor="1" fillcolor="none" xmi.id="bKmowHPAV8a1" height="32" sequencemessagetype="1000" >
          <floatingtext linecolor="none" usesdiagramfillcolor="1" linewidth="none" usesdiagramusefillcolor="1" x="475" showstereotype="1" y="274" text=": show" font="Sans Serif,10,-1,0,50,0,0,0,0,0" pretext="" role="704" width="43" isinstance="0" posttext="" usefillcolor="1" fillcolor="none" xmi.id="krrlEVn876RC" height="21" />
         </messagewidget>
         <messagewidget linecolor="none" usesdiagramfillcolor="1" widgetbid="siUCyuAL8uOm" textid="D20ZDINH4ZVO" operation="DsXGnuAXf6sz" linewidth="none" seqnum="" usesdiagramusefillcolor="1" x="762" showstereotype="1" y="358" widgetaid="siUCyuAL8uOm" font="Sans Serif,10,-1,0,50,0,0,0,0,0" width="50" isinstance="0" usefillcolor="1" fillcolor="none" xmi.id="DsXGnuAXf6sz" height="134" sequencemessagetype="1000" >
          <floatingtext linecolor="none" usesdiagramfillcolor="1" linewidth="none" usesdiagramusefillcolor="1" x="767" showstereotype="1" y="337" text=": dropEvent(event : QDropEvent*)" font="Sans Serif,10,-1,0,50,0,0,0,0,0" pretext="" role="705" width="189" isinstance="0" posttext="" usefillcolor="1" fillcolor="none" xmi.id="D20ZDINH4ZVO" height="21" />
         </messagewidget>
         <messagewidget linecolor="none" usesdiagramfillcolor="1" widgetbid="AYmLv68Z9hBU" textid="GxA3DQAlA2cT" operation="addAttribute(att)" linewidth="none" seqnum="" usesdiagramusefillcolor="1" x="764" showstereotype="1" y="396" widgetaid="siUCyuAL8uOm" font="Sans Serif,10,-1,0,50,0,0,0,0,0" width="229" isinstance="0" usefillcolor="1" fillcolor="none" xmi.id="kpGL6buIi4t2" height="32" sequencemessagetype="1000" >
          <floatingtext linecolor="none" usesdiagramfillcolor="1" linewidth="none" usesdiagramusefillcolor="1" x="793" showstereotype="1" y="375" text=": addAttribute(att)" font="Sans Serif,10,-1,0,50,0,0,0,0,0" pretext="" role="704" width="101" isinstance="0" posttext="" usefillcolor="1" fillcolor="none" xmi.id="GxA3DQAlA2cT" height="21" />
         </messagewidget>
         <messagewidget linecolor="none" usesdiagramfillcolor="1" widgetbid="BUKs3i2OCKo6" textid="FgrWdzXoOfZW" operation="removeAttribute(attr)" linewidth="none" seqnum="" usesdiagramusefillcolor="1" x="764" showstereotype="1" y="456" widgetaid="siUCyuAL8uOm" font="Sans Serif,10,-1,0,50,0,0,0,0,0" width="407" isinstance="0" usefillcolor="1" fillcolor="none" xmi.id="GfHzUXIZ6Dpo" height="32" sequencemessagetype="1000" >
          <floatingtext linecolor="none" usesdiagramfillcolor="1" linewidth="none" usesdiagramusefillcolor="1" x="793" showstereotype="1" y="435" text=": removeAttribute(attr)" font="Sans Serif,10,-1,0,50,0,0,0,0,0" pretext="" role="704" width="125" isinstance="0" posttext="" usefillcolor="1" fillcolor="none" xmi.id="FgrWdzXoOfZW" height="21" />
         </messagewidget>
        </messages>
        <associations>
         <assocwidget indexa="1" indexb="1" visibilityA="0" widgetaid="jOk4JQ48Nk9V" visibilityB="0" roleBdoc="" roleAdoc="" linecolor="none" changeabilityA="900" totalcounta="2" changeabilityB="900" widgetbid="DsXGnuAXf6sz" totalcountb="2" type="513" documentation="" linewidth="none" >
          <linepath>
           <startpoint startx="713" starty="367" />
           <endpoint endx="762" endy="367" />
          </linepath>
         </assocwidget>
        </associations>
       </diagram>
      </diagrams>
     </XMI.extension>
    </UML:Model>
    <UML:Model stereotype="folder" visibility="public" isSpecification="false" namespace="m1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Use Case View" name="Use Case View" >
     <UML:Namespace.ownedElement/>
    </UML:Model>
    <UML:Model stereotype="folder" visibility="public" isSpecification="false" namespace="m1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Component View" name="Component View" >
     <UML:Namespace.ownedElement/>
    </UML:Model>
    <UML:Model stereotype="folder" visibility="public" isSpecification="false" namespace="m1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Deployment View" name="Deployment View" >
     <UML:Namespace.ownedElement/>
    </UML:Model>
    <UML:Model stereotype="folder" visibility="public" isSpecification="false" namespace="m1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Entity Relationship Model" name="Entity Relationship Model" >
     <UML:Namespace.ownedElement/>
    </UML:Model>
   </UML:Namespace.ownedElement>
  </UML:Model>
 </XMI.content>
 <XMI.extensions xmi.extender="umbrello" >
  <docsettings viewid="hgSMKYYpjmHt" uniqueid="FgrWdzXoOfZW" documentation="" />
  <listview>
   <listitem open="1" type="800" label="Views" >
    <listitem open="1" type="801" id="Logical View" >
     <listitem open="0" type="810" id="hgSMKYYpjmHt" label="sequence diagram RefactoringAssistant" />
     <listitem open="0" type="813" id="BXYb60nz4mvi" />
     <listitem open="0" type="813" id="MrbhhCI2Jxa7" />
     <listitem open="0" type="813" id="23T1g7UXrEXj" />
     <listitem open="0" type="813" id="Y7mcsfIsijtN" />
     <listitem open="0" type="813" id="3sNkZxlu3tDM" >
      <listitem open="0" type="813" id="7hakjSHMNTJk" />
      <listitem open="0" type="813" id="BjD4PMwq797Q" />
      <listitem open="0" type="813" id="0z3gtxvNQQgL" />
      <listitem open="0" type="813" id="UTXLuYN3FZ5d" />
      <listitem open="0" type="813" id="oNNFo1Yj3uve" />
     </listitem>
     <listitem open="0" type="813" id="jmP4cB2lgYKm" />
     <listitem open="0" type="813" id="qNugaPNJBnNl" />
     <listitem open="0" type="813" id="JTzdUulvMWEt" />
     <listitem open="0" type="813" id="KR2QdOwaoLYX" >
      <listitem open="0" type="813" id="W7th5kPYv32y" />
     </listitem>
     <listitem open="0" type="813" id="1HF0aIhrQxTF" />
     <listitem open="0" type="813" id="s8bF9sGBa8dq" />
     <listitem open="0" type="813" id="DrVaTH3TPboF" />
     <listitem open="0" type="813" id="YctAWo4VEqTF" />
     <listitem open="0" type="813" id="SsGKUGjOy0eZ" />
     <listitem open="0" type="813" id="H8FcrF283KIZ" />
     <listitem open="0" type="813" id="ATOBlgixcuxw" />
     <listitem open="0" type="813" id="i4mKd2igxi0p" />
     <listitem open="0" type="813" id="uiHIdkXlCtwx" />
     <listitem open="0" type="813" id="yQny3cR2re0R" />
     <listitem open="0" type="813" id="jCKv3EqbrhjL" />
     <listitem open="0" type="813" id="pluNPd16lalK" />
     <listitem open="0" type="813" id="XiaaIbYxcTvh" />
     <listitem open="0" type="813" id="zdlI8EoP4sli" />
     <listitem open="0" type="813" id="rcdCEBsSYc9k" />
     <listitem open="0" type="813" id="6hxMGqTohpou" />
     <listitem open="0" type="813" id="aeLwrLPeS4sq" />
     <listitem open="0" type="813" id="TZRKGAfkyUSc" />
     <listitem open="0" type="813" id="sKMIlpHruqYx" />
     <listitem open="0" type="813" id="kNhsZ3Tz9TNI" />
     <listitem open="0" type="813" id="18ZEvL3pLhMY" />
     <listitem open="0" type="813" id="67URooyOfZF7" />
     <listitem open="0" type="813" id="7EQ1DtdY3xOw" />
     <listitem open="0" type="813" id="ko6aZvAbFatN" />
     <listitem open="0" type="813" id="Al2Pw99A9a1j" />
     <listitem open="0" type="813" id="p9hGOSA6YosN" />
     <listitem open="0" type="813" id="cpPyLcr5Vrjn" />
     <listitem open="0" type="813" id="KwNIOnt8BY1i" />
     <listitem open="0" type="813" id="EYzY6XNnKfgK" />
     <listitem open="0" type="813" id="oW069fRHbakp" />
     <listitem open="0" type="813" id="BwSNqFnI0jvf" />
     <listitem open="0" type="813" id="bUhlv210K6rs" />
     <listitem open="0" type="813" id="watJjAv16IKT" />
     <listitem open="0" type="813" id="3DFEv8HDDIiB" />
     <listitem open="0" type="813" id="0Jr4CbkT2j4U" />
     <listitem open="0" type="813" id="5zC3XL9jxXAd" />
     <listitem open="0" type="813" id="kv2gIi2FLnXS" />
     <listitem open="0" type="813" id="YZbub5iXYIGl" />
     <listitem open="0" type="813" id="fLSokCZ5xXd4" />
     <listitem open="0" type="813" id="VoqieIx68BOd" />
     <listitem open="0" type="813" id="dUt1TMu4e6AS" />
     <listitem open="0" type="813" id="64uTjbyTyZiz" />
     <listitem open="0" type="813" id="unyOHbcTeYIO" />
     <listitem open="0" type="813" id="vpcUMCfFS7Ii" />
     <listitem open="0" type="813" id="S8zO8eyroGkr" />
     <listitem open="0" type="813" id="VoqLYBDtljP0" />
     <listitem open="0" type="813" id="w6p9G6t4JmSW" />
     <listitem open="0" type="813" id="4BbFjaxI3c1y" />
     <listitem open="0" type="813" id="e2xy7oq1OhJ6" />
     <listitem open="0" type="813" id="5J7tYqi1P9Jd" />
     <listitem open="0" type="813" id="QT96Be7Ui3LE" />
     <listitem open="0" type="813" id="Wv90SPQm0L5j" >
      <listitem open="0" type="814" id="wDZQJR1FBwnQ" />
      <listitem open="0" type="814" id="RlyfhYfR3Dnb" />
      <listitem open="0" type="814" id="nJ5dckFWvmuF" />
      <listitem open="0" type="814" id="VJGrXKIuvU1n" />
      <listitem open="0" type="815" id="W13Ujpb5cFSp" />
      <listitem open="0" type="815" id="zTFOPCU8hfRQ" />
      <listitem open="0" type="815" id="JZq5C6WNxHJ3" />
      <listitem open="0" type="815" id="tUqa7HzOopR1" />
      <listitem open="0" type="815" id="tvOqDgs3fBkH" />
      <listitem open="0" type="815" id="3EsOvp9mHxLP" />
      <listitem open="0" type="815" id="DKl17D008NrJ" />
      <listitem open="0" type="815" id="3hNgs7xvJnJC" />
      <listitem open="0" type="815" id="dQyuMJHXb3Yi" />
      <listitem open="0" type="815" id="EZhKwYexD1d3" />
      <listitem open="0" type="815" id="6bwNMDZzeVuy" />
      <listitem open="0" type="815" id="hMyJrqHezk1A" />
      <listitem open="0" type="815" id="et3be4lQAKk2" />
      <listitem open="0" type="815" id="yl4YZgxBZ0mD" />
      <listitem open="0" type="815" id="M4bOnU8lDAHk" />
      <listitem open="0" type="815" id="SnXIIGtcKU05" />
      <listitem open="0" type="815" id="ceVhqN4H710J" />
      <listitem open="0" type="815" id="Zg5OPA9wmEGf" />
      <listitem open="0" type="815" id="ziJjwXOE0UIB" />
      <listitem open="0" type="815" id="Q5RNu0irizac" />
      <listitem open="0" type="815" id="59xl6YNcSB4t" />
      <listitem open="0" type="815" id="oCqkmJVsIo9d" />
      <listitem open="0" type="815" id="DsXGnuAXf6sz" />
      <listitem open="0" type="815" id="yDmDngYwT8sb" />
      <listitem open="0" type="815" id="ScY0kSgsiim3" />
      <listitem open="0" type="815" id="c3TYVSJy5swn" />
     </listitem>
     <listitem open="0" type="813" id="MdvIly5WKjzQ" />
     <listitem open="0" type="813" id="pE7uURNYaylH" >
      <listitem open="0" type="814" id="EpREJUyNvvEq" />
      <listitem open="0" type="814" id="zUFUfJKCCqo5" />
      <listitem open="0" type="814" id="EllVr0lTSw43" />
      <listitem open="0" type="814" id="LJolmjOjDdBq" />
      <listitem open="0" type="814" id="tPQceJ4Db5Bw" />
      <listitem open="0" type="814" id="jJ9xGbbpvLvH" />
      <listitem open="0" type="814" id="IPs41a2sxRVa" />
      <listitem open="0" type="814" id="mUTsRNSspwjz" />
      <listitem open="0" type="814" id="Et3K0WfiaP3B" />
      <listitem open="0" type="814" id="RlpNRpCDJf3l" />
      <listitem open="0" type="814" id="0UboOIncBpvC" />
      <listitem open="0" type="814" id="mwI3aJoYlNM9" />
      <listitem open="0" type="814" id="f8mrvf1GDrBB" />
      <listitem open="0" type="814" id="lGZODLSzGk0q" />
      <listitem open="0" type="814" id="2nOnAjvqpffk" />
      <listitem open="0" type="814" id="Ke0XV9hGQGeb" />
      <listitem open="0" type="814" id="Z7YppYfrL2dW" />
      <listitem open="0" type="814" id="NjNlxzMX6uMu" />
      <listitem open="0" type="814" id="ZXYAlZH6GcsE" />
      <listitem open="0" type="814" id="cfsUH9Ypg4zP" />
      <listitem open="0" type="814" id="dEWsoO6Oap0f" />
      <listitem open="0" type="814" id="wYF2na9PF0uU" />
      <listitem open="0" type="814" id="9QJoSHD4TjwI" />
      <listitem open="0" type="814" id="50eepeJjAXlv" />
      <listitem open="0" type="814" id="7tLKrDm0d4o3" />
      <listitem open="0" type="814" id="L07oj14n1iPq" />
      <listitem open="0" type="814" id="uN2VRoYmoeYW" />
      <listitem open="0" type="814" id="fbJhHgXcM52a" />
      <listitem open="0" type="814" id="P11EfXiK8z1Q" />
      <listitem open="0" type="814" id="fX01c2b1RSZW" />
      <listitem open="0" type="814" id="vAUjly0AzzMe" />
      <listitem open="0" type="814" id="W4xf1y3gT3g6" />
      <listitem open="0" type="814" id="5F5UhezaoTJZ" />
      <listitem open="0" type="814" id="tRlMURQXgW0M" />
      <listitem open="0" type="814" id="AzwxQEUnTCAi" />
      <listitem open="0" type="814" id="DARI4nOxC7Ie" />
      <listitem open="0" type="814" id="Yi9DC9ZN6TIW" />
      <listitem open="0" type="814" id="zoaBuspSZwdl" />
      <listitem open="0" type="814" id="RFG2RghQSHbK" />
      <listitem open="0" type="814" id="8OlhLOQPZXbD" />
      <listitem open="0" type="814" id="vGU4Fv8h8Mja" />
      <listitem open="0" type="814" id="0OyRdYljuWQF" />
      <listitem open="0" type="814" id="D0n8WBLP0wrK" />
      <listitem open="0" type="814" id="8WaYesEeIbl3" />
      <listitem open="0" type="814" id="3jv4fnOnHwLt" />
      <listitem open="0" type="814" id="oYY59H6nkvsq" />
      <listitem open="0" type="814" id="7LeOGxG4Vm7f" />
      <listitem open="0" type="814" id="3EQn7Ib4Ghz7" />
      <listitem open="0" type="814" id="qVZKHhxKtN60" />
      <listitem open="0" type="814" id="df3tM21WR1uD" />
      <listitem open="0" type="814" id="16JsRPr42syN" />
      <listitem open="0" type="814" id="ounYFwWE2p7T" />
      <listitem open="0" type="814" id="HUGD0Q9mIwIX" />
      <listitem open="0" type="814" id="GcFg5C1NeIYc" />
      <listitem open="0" type="814" id="gfNwZfUPSCH5" />
      <listitem open="0" type="815" id="GGAT8HBSlQKB" />
      <listitem open="0" type="815" id="U2lD46RvxSL6" />
      <listitem open="0" type="815" id="yhUiCLazNvUm" />
      <listitem open="0" type="815" id="Ypfti9fFNItO" />
      <listitem open="0" type="815" id="iErSnakE4YAl" />
      <listitem open="0" type="815" id="XpyL85pdrZRr" />
      <listitem open="0" type="815" id="gZ3l8DUd0Tz9" />
      <listitem open="0" type="815" id="t91uay36knT6" />
      <listitem open="0" type="815" id="N9G7whBuKibo" />
      <listitem open="0" type="815" id="22GdRMnoV2wP" />
      <listitem open="0" type="815" id="sUAY3mY4pofG" />
      <listitem open="0" type="815" id="B2msrXOi1WG3" />
      <listitem open="0" type="815" id="QJnSbzHkz3cq" />
      <listitem open="0" type="815" id="zlfymFnLELvg" />
      <listitem open="0" type="815" id="XS5sUXkUGPQ3" />
      <listitem open="0" type="815" id="9wbbSnfxFjpi" />
      <listitem open="0" type="815" id="Bsuwl7tu4UWU" />
      <listitem open="0" type="815" id="t8Ef2dyBUq7F" />
      <listitem open="0" type="815" id="JCcn0j2wjAuB" />
      <listitem open="0" type="815" id="CSbb7o2QyeDz" />
      <listitem open="0" type="815" id="pZRmDdlYpeaD" />
      <listitem open="0" type="815" id="rgikfDjSmBEx" />
      <listitem open="0" type="815" id="rBReMgb6d5hF" />
      <listitem open="0" type="815" id="6gBijqxqIFjq" />
      <listitem open="0" type="815" id="qybaOgfVLpB4" />
      <listitem open="0" type="815" id="zN0YbxgPtIzI" />
      <listitem open="0" type="815" id="mltc87g5Ugb5" />
      <listitem open="0" type="815" id="QAdRMen6PfjX" />
      <listitem open="0" type="815" id="EuXJRJprTSIn" />
      <listitem open="0" type="815" id="g0SeaAeKBHWw" />
      <listitem open="0" type="815" id="5AHLFJJwIlas" />
      <listitem open="0" type="815" id="VfWnQ4dKFnQi" />
      <listitem open="0" type="815" id="TbJiOhOo4bcK" />
      <listitem open="0" type="815" id="aUR6vO4MzL4M" />
      <listitem open="0" type="815" id="cAbZVfvU64X6" />
      <listitem open="0" type="815" id="vMIzQp5DfE1Q" />
      <listitem open="0" type="815" id="wKiHaB5UWNTw" />
      <listitem open="0" type="815" id="AXApl9Fm5PQE" />
      <listitem open="0" type="815" id="s7RSr7HnPz40" />
      <listitem open="0" type="815" id="99UfUvZeShRD" />
      <listitem open="0" type="815" id="PyMqdo1SSzNW" />
      <listitem open="0" type="815" id="EblT57BT3WHh" />
      <listitem open="0" type="815" id="KI9kGUGbugMt" />
      <listitem open="0" type="815" id="28XwptnHFD9k" />
      <listitem open="0" type="815" id="9Uxq4pm4xJyk" />
      <listitem open="0" type="815" id="TyRcYSLjzLrG" />
      <listitem open="0" type="815" id="sAYFUPWxLxZs" />
      <listitem open="0" type="815" id="NsbMBQcaCGam" />
      <listitem open="0" type="815" id="691vOp4HzcWT" />
      <listitem open="0" type="815" id="z2OIxvAKnlew" />
      <listitem open="0" type="815" id="CEWMS48YE7Uc" />
      <listitem open="0" type="815" id="wWtt6NM5NkLK" />
      <listitem open="0" type="815" id="wsRAzvkuPcnV" />
      <listitem open="0" type="815" id="WF2z5mt1eK9b" />
      <listitem open="0" type="815" id="CCmZmamF2U3j" />
      <listitem open="0" type="815" id="62xJgwtOL1wg" />
      <listitem open="0" type="815" id="suboqqcusaDY" />
      <listitem open="0" type="815" id="W4ur5oWMce75" />
      <listitem open="0" type="815" id="o4lmSi2Lae7O" />
      <listitem open="0" type="815" id="UhGKHRrmVjbb" />
      <listitem open="0" type="815" id="Y5x8j3BW7xIa" />
      <listitem open="0" type="815" id="GahlJIMpOIv5" />
      <listitem open="0" type="815" id="L7bQ4tyhErsA" />
      <listitem open="0" type="815" id="LZzhrsnAzOa3" />
      <listitem open="0" type="815" id="GZiSOZcCx9dC" />
      <listitem open="0" type="815" id="RzfJ2sTLRQ3I" />
      <listitem open="0" type="815" id="IqSGC0HSX0sw" />
      <listitem open="0" type="815" id="XV6Uchf4gINg" />
      <listitem open="0" type="815" id="Ao1ZC4rTsHj3" />
      <listitem open="0" type="815" id="GyTnwMhTpnwR" />
      <listitem open="0" type="815" id="SbV8rrm0doZq" />
      <listitem open="0" type="815" id="sPHjg0muwFit" />
      <listitem open="0" type="815" id="CWhqKEeBdvuI" />
      <listitem open="0" type="815" id="teCptuiTI3tT" />
      <listitem open="0" type="815" id="Lj4B5oqFJV5b" />
      <listitem open="0" type="815" id="jhkNcefVGrJ8" />
      <listitem open="0" type="815" id="k1b24UTOCXXF" />
      <listitem open="0" type="815" id="KNUbsYCZFxws" />
      <listitem open="0" type="815" id="ZZLoPew9gX9i" />
      <listitem open="0" type="815" id="za6B5dQPytyo" />
      <listitem open="0" type="815" id="R9Og6KYdssRH" />
      <listitem open="0" type="815" id="WNOCsXvs7z1C" />
      <listitem open="0" type="815" id="bQaZJWOkfmOl" />
      <listitem open="0" type="815" id="4vNwnmDJAbU0" />
      <listitem open="0" type="815" id="6NsBMuMxKuXb" />
      <listitem open="0" type="815" id="QtJ6fhpjaCeN" />
      <listitem open="0" type="815" id="zrf7R97VUyhq" />
      <listitem open="0" type="815" id="s3mAxHjNA2Tn" />
      <listitem open="0" type="815" id="hHUIT8fQyKXP" />
      <listitem open="0" type="815" id="RduvbZkRaWbX" />
      <listitem open="0" type="815" id="lItvKKg1bAJ3" />
      <listitem open="0" type="815" id="JxTFHzehcWcD" />
      <listitem open="0" type="815" id="6KcgqBCbT3Un" />
      <listitem open="0" type="815" id="NAoxL60c3RrI" />
      <listitem open="0" type="815" id="QTz2xaD3upij" />
      <listitem open="0" type="815" id="0sITvnEGv1BE" />
      <listitem open="0" type="815" id="wF5q3nX3dqVW" />
      <listitem open="0" type="815" id="FMiLikPeyVS1" />
      <listitem open="0" type="815" id="4gl8GenTyVmg" />
      <listitem open="0" type="815" id="h8wuFrpHWYPk" />
      <listitem open="0" type="815" id="rBeaMN53T1xh" />
      <listitem open="0" type="815" id="rlyLJM5WWIgA" />
      <listitem open="0" type="815" id="FW0Pe29UBn4Y" />
      <listitem open="0" type="815" id="B8Ze7VJwGGHX" />
      <listitem open="0" type="815" id="aM26ciFsCFFq" />
      <listitem open="0" type="815" id="GOIRCNxNTVza" />
      <listitem open="0" type="815" id="yHXEXoj79lBl" />
      <listitem open="0" type="815" id="RQbdeqSuFkJP" />
      <listitem open="0" type="815" id="5FkYkh9iyguV" />
      <listitem open="0" type="815" id="SbcbLoLmCuOq" />
      <listitem open="0" type="815" id="lqiyY2NeH7Az" />
      <listitem open="0" type="815" id="oJfnxXGO8rxT" />
      <listitem open="0" type="815" id="MFcdKna64Dr0" />
      <listitem open="0" type="815" id="81hYMXXim7K4" />
      <listitem open="0" type="815" id="uuAx62xq8Lf5" />
      <listitem open="0" type="815" id="eyfEU0zd2e9O" />
      <listitem open="0" type="815" id="8aDGttLYrymL" />
      <listitem open="0" type="815" id="nRF4ZqTfRfvK" />
      <listitem open="0" type="815" id="hPHRolycADgh" />
      <listitem open="0" type="815" id="EIlZtqJYGay2" />
      <listitem open="0" type="815" id="JwcT7HA8PWb8" />
      <listitem open="0" type="815" id="lKPEv1rAHdh9" />
      <listitem open="0" type="815" id="R0hfZfisbIKi" />
      <listitem open="0" type="815" id="ZSpwzO4iiTxd" />
      <listitem open="0" type="815" id="DU9e3ZdFiS29" />
      <listitem open="0" type="815" id="CuO8g0StUZVV" />
      <listitem open="0" type="815" id="76kpYny7H5I7" />
      <listitem open="0" type="815" id="83bA1TfBN1H1" />
      <listitem open="0" type="815" id="1isUFNzMSiB0" />
      <listitem open="0" type="815" id="T76kDOpJPRTQ" />
      <listitem open="0" type="815" id="a5pBBSzf49YN" />
      <listitem open="0" type="815" id="zeNWOCCzI18T" />
      <listitem open="0" type="815" id="R56TCdog3xdQ" />
      <listitem open="0" type="815" id="ZCAZleIjIdFf" />
      <listitem open="0" type="815" id="nPe5OmXppbI1" />
      <listitem open="0" type="815" id="E7fG2IebVo9E" />
      <listitem open="0" type="815" id="QRxj2COpb0tx" />
      <listitem open="0" type="815" id="kOmZz3YC8EQA" />
      <listitem open="0" type="815" id="U4jxqsCFH7wJ" />
      <listitem open="0" type="815" id="II7rI0p0ObZL" />
      <listitem open="0" type="815" id="c5XkHvsmzcho" />
      <listitem open="0" type="815" id="Sr3kzz1HH88X" />
      <listitem open="0" type="815" id="8vXUV4q77NqP" />
      <listitem open="0" type="815" id="HiBGIq2li3Th" />
      <listitem open="0" type="815" id="0UwHb2mhyJCT" />
      <listitem open="0" type="815" id="L2aTNOse71tN" />
      <listitem open="0" type="815" id="pv6XzZEx2AFb" />
      <listitem open="0" type="815" id="BzI9HUccUA3s" />
      <listitem open="0" type="815" id="ZtWesPziJ6FG" />
      <listitem open="0" type="815" id="dSDdaQElQVuf" />
      <listitem open="0" type="815" id="wV07KmAWYv1N" />
      <listitem open="0" type="815" id="IXZSiKObQ4fA" />
      <listitem open="0" type="815" id="vZrFScu6Y4HO" />
      <listitem open="0" type="815" id="kZlLdwGMDPJT" />
      <listitem open="0" type="815" id="smKRpr1PQSvQ" />
      <listitem open="0" type="815" id="Q18utC0fWTeD" />
      <listitem open="0" type="815" id="C3wrlWfdJy48" />
      <listitem open="0" type="815" id="p4XDWRbvSjpJ" />
      <listitem open="0" type="815" id="1YsmMuLcWYHZ" />
     </listitem>
     <listitem open="0" type="813" id="9jGGDxRgiGcT" />
     <listitem open="0" type="813" id="jbhAE0BeGf5B" >
      <listitem open="0" type="814" id="bKugw52QBM4j" />
      <listitem open="0" type="814" id="UkcJXn6ejlbZ" />
      <listitem open="0" type="815" id="Ykf6DocOj6TM" />
      <listitem open="0" type="815" id="jNMW38oIMBmj" />
      <listitem open="0" type="815" id="UjbBfOmMk7qn" />
      <listitem open="0" type="815" id="oH7NclUsbKzJ" />
      <listitem open="0" type="815" id="qSU6XpwywBB8" />
      <listitem open="0" type="815" id="LkFw2CDsfgwA" />
      <listitem open="0" type="815" id="ZfQKFghYOwSQ" />
      <listitem open="0" type="815" id="LdMhfXBCCbXQ" />
      <listitem open="0" type="815" id="Xw6cyEjHp3yU" />
      <listitem open="0" type="815" id="WenXwnsThw3f" />
      <listitem open="0" type="815" id="FKgdQHAwtvSp" />
      <listitem open="0" type="815" id="Um3LfVAKoOh1" />
      <listitem open="0" type="815" id="PNmjB1nQmqMl" />
      <listitem open="0" type="815" id="CYvwMIhqjtiF" />
      <listitem open="0" type="815" id="ElnweV9U8VG5" />
      <listitem open="0" type="815" id="r9fU5iRITEC7" />
      <listitem open="0" type="815" id="za7WKF0COdeR" />
      <listitem open="0" type="815" id="Ih8KxKnvsuRD" />
      <listitem open="0" type="815" id="7QPV31uN5cDO" />
      <listitem open="0" type="815" id="qoWLLuswFmb9" />
     </listitem>
     <listitem open="0" type="813" id="yVBpOx19Y6Au" >
      <listitem open="0" type="815" id="D2iTUd7sXsmV" />
      <listitem open="0" type="815" id="maG1S3Cc4cw0" />
      <listitem open="0" type="815" id="YdjaGea5KlQO" />
      <listitem open="0" type="815" id="iOdg1L7GAQ1n" />
      <listitem open="0" type="815" id="DdbL3a7XrKfb" />
     </listitem>
     <listitem open="0" type="813" id="PAKwLZbSExG9" >
      <listitem open="0" type="814" id="mLq50v4hHClI" />
      <listitem open="0" type="815" id="6Ih5p8o7MCqC" />
      <listitem open="0" type="815" id="K0XeCNoyDFSP" />
      <listitem open="0" type="815" id="l4U3Afy13U94" />
      <listitem open="0" type="815" id="22oQLY026Wvs" />
      <listitem open="0" type="815" id="2BLwpYcsYOIu" />
      <listitem open="0" type="815" id="JnFI2vDHFP1J" />
      <listitem open="0" type="815" id="FTxSqwm6CBQ1" />
      <listitem open="0" type="815" id="nN3xYRz90yoT" />
      <listitem open="0" type="815" id="ZWoNDIqlsIxl" />
      <listitem open="0" type="815" id="WMaUIOxqukB5" />
      <listitem open="0" type="815" id="2QfwV2NzMxUd" />
      <listitem open="0" type="815" id="MMRjJvKcInnQ" />
      <listitem open="0" type="815" id="d95ZV5zrRQYj" />
      <listitem open="0" type="815" id="wzMu5ouhxyGQ" />
      <listitem open="0" type="815" id="aRJlwM5sLRkP" />
      <listitem open="0" type="815" id="eE4JhWZFxt0s" />
      <listitem open="0" type="815" id="KSJqJNzvZ1EE" />
      <listitem open="0" type="815" id="SKeYJWFdyYRG" />
      <listitem open="0" type="815" id="qUTydojESOI4" />
      <listitem open="0" type="815" id="qa0RN9QsehUb" />
      <listitem open="0" type="815" id="KT7ck2G9MjEN" />
      <listitem open="0" type="815" id="fs9FtB8yfmbw" />
      <listitem open="0" type="815" id="hMA33NQgDZw6" />
      <listitem open="0" type="815" id="Z9znjtrStuof" />
      <listitem open="0" type="815" id="nwG281LgBIRs" />
     </listitem>
     <listitem open="0" type="813" id="wOWdwrNVw75o" />
     <listitem open="0" type="813" id="zC5M9e0b3SnI" >
      <listitem open="0" type="815" id="SjKKogcKTOEy" />
      <listitem open="0" type="815" id="VtRAKqVPuK2o" />
      <listitem open="0" type="815" id="trc68oAbhcm2" />
      <listitem open="0" type="815" id="SHPKaP8CLEpZ" />
      <listitem open="0" type="815" id="uulZUVZulwEL" />
      <listitem open="0" type="815" id="5st6ybEqUyPw" />
      <listitem open="0" type="815" id="M4Przm72ey8c" />
      <listitem open="0" type="815" id="rSqFVh9plWfi" />
      <listitem open="0" type="815" id="kGtTkYB3Ityy" />
      <listitem open="0" type="815" id="aXkqQio8C1yf" />
      <listitem open="0" type="815" id="OazNcM4Arp0I" />
     </listitem>
     <listitem open="0" type="813" id="ryVv6j7CCBdW" >
      <listitem open="0" type="815" id="Tlv22Yi2JZCF" />
      <listitem open="0" type="815" id="2tvtcZSEPefE" />
      <listitem open="0" type="815" id="D83amgp0sFWs" />
      <listitem open="0" type="815" id="cEKkrrs232Vp" />
      <listitem open="0" type="815" id="ysl0sGnESPpK" />
     </listitem>
     <listitem open="0" type="813" id="TUkJYGg9wPgO" />
     <listitem open="0" type="813" id="Yp4SNPl2TgE2" />
     <listitem open="0" type="813" id="BN0IVbZqNkxK" />
     <listitem open="0" type="813" id="D6KJ1AAHLIAm" >
      <listitem open="0" type="815" id="0s6csM5RAlTq" />
      <listitem open="0" type="815" id="EpGV1zSxUyw0" />
      <listitem open="0" type="815" id="3AmSQ0xcpD7q" />
      <listitem open="0" type="815" id="KzV58CBwpDck" />
      <listitem open="0" type="815" id="p9ibO9leWXi4" />
      <listitem open="0" type="815" id="KmD9xprmwaLJ" />
     </listitem>
     <listitem open="0" type="813" id="MRvaUd4dy2vR" >
      <listitem open="0" type="814" id="RpxJMjH4RhvA" />
      <listitem open="0" type="814" id="2uqu80wuDgc3" />
      <listitem open="0" type="814" id="INWLuNzuFnoL" />
      <listitem open="0" type="814" id="HjrRbtlPRxBp" />
      <listitem open="0" type="814" id="BalGn3zgWuNw" />
      <listitem open="0" type="814" id="CcA7cFDrw4IY" />
      <listitem open="0" type="815" id="31HHSWXIyU1k" />
      <listitem open="0" type="815" id="tGnV0gsHcCaH" />
      <listitem open="0" type="815" id="iSBRnQJee49f" />
      <listitem open="0" type="815" id="frLoP36ubMsM" />
      <listitem open="0" type="815" id="UGq0njJivGIB" />
      <listitem open="0" type="815" id="zEaYbRs3fi4S" />
      <listitem open="0" type="815" id="1uyGq6unLSLu" />
      <listitem open="0" type="815" id="CrcVIvPB6Lk0" />
      <listitem open="0" type="815" id="sBfyUNxm6FSr" />
      <listitem open="0" type="815" id="fnKrk7JaGzYk" />
      <listitem open="0" type="815" id="wznAwMvHnShW" />
      <listitem open="0" type="815" id="UZ2I1hmOd7h1" />
      <listitem open="0" type="815" id="62DKgOY0JBvL" />
      <listitem open="0" type="815" id="l814JvOil9iN" />
      <listitem open="0" type="815" id="YOIgw4zm0Y1K" />
      <listitem open="0" type="815" id="PUK1GVx6nqN7" />
      <listitem open="0" type="815" id="6hBtNURnwlmB" />
      <listitem open="0" type="815" id="VlOejyvnf6e0" />
      <listitem open="0" type="815" id="YCoQuqYPZw1G" />
      <listitem open="0" type="815" id="neb1Xem3qYUi" />
      <listitem open="0" type="815" id="P06wv7Bn2CH0" />
      <listitem open="0" type="815" id="RXiF5AvSB1N6" />
      <listitem open="0" type="815" id="7Yr7k67brdFq" />
      <listitem open="0" type="815" id="6PaEANtZuZox" />
      <listitem open="0" type="815" id="3Tt5JxspVnLk" />
      <listitem open="0" type="831" id="XTKVpWqZPBj0" >
       <listitem open="0" type="839" id="luwm2QFjwJMU" />
       <listitem open="0" type="839" id="JSgkmrLHIgk5" />
       <listitem open="0" type="839" id="AacZkMXVGRFG" />
       <listitem open="0" type="839" id="rUxllJG3junW" />
       <listitem open="0" type="839" id="j6l1mW5u4hTo" />
      </listitem>
     </listitem>
     <listitem open="0" type="813" id="nMgV5ZqwviaV" />
     <listitem open="0" type="813" id="EcOTh0GL2tr5" >
      <listitem open="0" type="814" id="SUftgAPjxnkZ" />
      <listitem open="0" type="814" id="6yPuwQu3p6U3" />
      <listitem open="0" type="814" id="r5XrCCpehSYL" />
      <listitem open="0" type="814" id="cv4Yjo7nlUhh" />
      <listitem open="0" type="814" id="tbjifDmWHHMT" />
      <listitem open="0" type="814" id="S989ceSCXXiG" />
      <listitem open="0" type="814" id="Ln14IimBITtv" />
      <listitem open="0" type="814" id="edSvtmPLvVSV" />
      <listitem open="0" type="814" id="9uigROvlCupU" />
      <listitem open="0" type="814" id="dZft0Wof8Ea1" />
      <listitem open="0" type="814" id="yxMuQoPXg5C8" />
      <listitem open="0" type="814" id="U5rezg8cElTE" />
      <listitem open="0" type="814" id="HGtPSSORNkLo" />
      <listitem open="0" type="814" id="WiLDmVJEaAsa" />
      <listitem open="0" type="815" id="fixZTztXAoe1" />
      <listitem open="0" type="815" id="zmg4JEsZdgiz" />
      <listitem open="0" type="815" id="aUhbBgDASuCl" />
      <listitem open="0" type="815" id="arr3j3mp63Yo" />
      <listitem open="0" type="815" id="qNl8vzvXPnhk" />
      <listitem open="0" type="815" id="LaejIZp4Flsy" />
      <listitem open="0" type="815" id="HXagLFOeq3N6" />
      <listitem open="0" type="815" id="FYkNpMO6twkE" />
      <listitem open="0" type="815" id="FJNhmMt2ubNk" />
      <listitem open="0" type="815" id="6wYSA6jNO43A" />
      <listitem open="0" type="815" id="QIo6AewEaTei" />
      <listitem open="0" type="815" id="oEx65B4WRscZ" />
      <listitem open="0" type="815" id="zX11nAWbMTgR" />
      <listitem open="0" type="815" id="ruUblvmiSlhG" />
      <listitem open="0" type="815" id="63p5Sv4KoYtX" />
      <listitem open="0" type="815" id="RABdiYOmbEr3" />
      <listitem open="0" type="815" id="dxWkt2aKBjvt" />
      <listitem open="0" type="815" id="UznJfZZIW52N" />
      <listitem open="0" type="815" id="usVPwWm05SFN" />
      <listitem open="0" type="815" id="wf8T0QgsICFC" />
      <listitem open="0" type="815" id="bBjsLz211DkT" />
      <listitem open="0" type="815" id="0jCzuuQVjMkX" />
      <listitem open="0" type="815" id="9ebs1MNj91XB" />
      <listitem open="0" type="815" id="igcetErbpJXf" />
      <listitem open="0" type="815" id="sg3ixZNu90AJ" />
      <listitem open="0" type="815" id="OfqzKgRCKUuI" />
      <listitem open="0" type="815" id="YUliwNNL0BKK" />
      <listitem open="0" type="815" id="tpTuh6FGY0yV" />
      <listitem open="0" type="815" id="VqJ8QhyHWPCD" />
      <listitem open="0" type="815" id="UdRNlrQEhjK5" />
      <listitem open="0" type="815" id="fN5drHykz3H6" />
      <listitem open="0" type="815" id="wURBaj7F4Asv" />
      <listitem open="0" type="815" id="i50e1idxC26n" />
      <listitem open="0" type="815" id="Cea3nOxWUw8V" />
      <listitem open="0" type="815" id="XO2CyMERP1aj" />
      <listitem open="0" type="815" id="j0hQ1WvWvwit" />
      <listitem open="0" type="815" id="a0pVwVNCQgpJ" />
      <listitem open="0" type="815" id="lgW9MMQuVYaI" />
      <listitem open="0" type="815" id="aIg6qGOpHpVk" />
      <listitem open="0" type="815" id="alh11ZnapTgf" />
      <listitem open="0" type="815" id="xlqwWpv4Yd5a" />
      <listitem open="0" type="815" id="hALFlPnvGvsa" />
      <listitem open="0" type="815" id="eLtQD8fuGz71" />
      <listitem open="0" type="815" id="K6FZiYANt4l6" />
      <listitem open="0" type="815" id="5aJJLJ1eNHD6" />
      <listitem open="0" type="815" id="rQjqh7emhx30" />
      <listitem open="0" type="815" id="pAZ0HPbYxlPH" />
      <listitem open="0" type="815" id="uFRSmPiS1ina" />
      <listitem open="0" type="815" id="j8Qs6qIuyquD" />
      <listitem open="0" type="815" id="FVlAG9S9Mrb8" />
      <listitem open="0" type="815" id="EHaFxLphREXW" />
     </listitem>
     <listitem open="0" type="813" id="KBNhUHJk7m25" >
      <listitem open="0" type="815" id="tqMCJI01WWoV" />
      <listitem open="0" type="815" id="5jCtv5sCFKU7" />
      <listitem open="0" type="815" id="Ig0PPjTGZpQq" />
      <listitem open="0" type="815" id="QBCy1co71ejv" />
     </listitem>
     <listitem open="0" type="813" id="4aLxhLegDPg3" />
     <listitem open="0" type="813" id="iE4KpEKgZfyX" >
      <listitem open="0" type="814" id="ibF2xin0ti2x" />
      <listitem open="0" type="815" id="6KsXzYd8gs6J" />
      <listitem open="0" type="815" id="b4UFwYY6hpGz" />
      <listitem open="0" type="815" id="HvexKCarsuch" />
      <listitem open="0" type="815" id="jD5P3LOIE0EX" />
      <listitem open="0" type="815" id="Jl6MwlKgzP30" />
      <listitem open="0" type="815" id="5Xx4uy2dPJXo" />
      <listitem open="0" type="815" id="6SgQmrhqOcsJ" />
      <listitem open="0" type="815" id="avwxETk1R74F" />
      <listitem open="0" type="815" id="ch40HwJqpEn3" />
      <listitem open="0" type="815" id="90BckDoMsqN9" />
      <listitem open="0" type="815" id="msRt0LU9Lfk5" />
      <listitem open="0" type="815" id="I5FdixgXT6Do" />
      <listitem open="0" type="815" id="q1OH5b4xdwCQ" />
      <listitem open="0" type="815" id="5HYIsKwamHQ7" />
      <listitem open="0" type="815" id="GmuLo8pi3C5P" />
      <listitem open="0" type="815" id="e8RhKW60GvUD" />
      <listitem open="0" type="815" id="37yJ0QURz7vs" />
      <listitem open="0" type="815" id="cq8zGf5AIWmS" />
      <listitem open="0" type="815" id="6DoOkarirXGd" />
      <listitem open="0" type="815" id="p9cFdmrjxg6h" />
      <listitem open="0" type="815" id="OWJJCP1RKOVl" />
     </listitem>
     <listitem open="0" type="813" id="GTh4LBgOzy1Q" />
     <listitem open="0" type="813" id="u3wybCkR59TM" />
     <listitem open="0" type="813" id="9gsnRb7o0Y97" />
     <listitem open="0" type="813" id="HqKCYsfepPvW" />
     <listitem open="0" type="813" id="Xm2rXXJVq8Z0" >
      <listitem open="0" type="813" id="eoUlavDDEd1y" />
      <listitem open="0" type="814" id="XH0hZY7fykf7" />
      <listitem open="0" type="814" id="c7MhbhRihy4I" />
      <listitem open="0" type="814" id="jSZk5uFc9FJi" />
      <listitem open="0" type="814" id="mOLk8ysi5CNf" />
      <listitem open="0" type="814" id="tpNanPqUrPCu" />
      <listitem open="0" type="814" id="HRWPen5Q9RBH" />
      <listitem open="0" type="814" id="P1yTDL64ATcv" />
      <listitem open="0" type="814" id="qSNhqZZ705Ud" />
      <listitem open="0" type="814" id="qa1zzCGMBEnO" />
      <listitem open="0" type="814" id="atSiK4cAXzrN" />
      <listitem open="0" type="814" id="XOSXTv8JVAGS" />
      <listitem open="0" type="814" id="KXmWjauHTLyo" />
      <listitem open="0" type="814" id="NYysXoF2Cgae" />
      <listitem open="0" type="814" id="bgv4qCUBhGfO" />
      <listitem open="0" type="814" id="qZgIsc6GA28f" />
      <listitem open="0" type="814" id="g7uLNZkC6OUz" />
      <listitem open="0" type="814" id="0YDAYLnLfVKf" />
      <listitem open="0" type="814" id="s7UyVyvVU8d2" />
      <listitem open="0" type="814" id="SRN7ufneY1Kw" />
      <listitem open="0" type="814" id="rjyn0L5qTZmw" />
      <listitem open="0" type="814" id="ViQzo30GSNON" />
      <listitem open="0" type="814" id="191ZAJT10Rn0" />
      <listitem open="0" type="815" id="o3GhKGZP85aK" />
      <listitem open="0" type="815" id="7U23SiJhuy3E" />
      <listitem open="0" type="815" id="w3iG3s0QJtfw" />
      <listitem open="0" type="815" id="VxcaHN9HPLCP" />
      <listitem open="0" type="815" id="o9SBVcb4wBZr" />
      <listitem open="0" type="815" id="hvWeEQVY9roJ" />
      <listitem open="0" type="815" id="vnc2cQMoecWi" />
      <listitem open="0" type="815" id="ld9yur77ay9m" />
      <listitem open="0" type="815" id="dDldq7YcjhYb" />
      <listitem open="0" type="815" id="m5zKqluTwf4l" />
      <listitem open="0" type="815" id="UorWXSSKWRcM" />
      <listitem open="0" type="815" id="7Mcg3XsVJh1q" />
      <listitem open="0" type="815" id="cuG36ZnBvNry" />
      <listitem open="0" type="815" id="o7l1spMUjaVn" />
      <listitem open="0" type="815" id="vgNokUWYbHYT" />
      <listitem open="0" type="815" id="Kfsn7Xe2Bzov" />
      <listitem open="0" type="815" id="pyxXUasmGiYL" />
      <listitem open="0" type="815" id="kChcc6xS4tzX" />
      <listitem open="0" type="815" id="ZTm3ET5wfmZG" />
      <listitem open="0" type="815" id="WZgWyqhWHTXT" />
      <listitem open="0" type="815" id="5WfVBCThj7Dg" />
      <listitem open="0" type="815" id="zYnS0rH4LuZW" />
      <listitem open="0" type="815" id="LrncsWDs4yI3" />
      <listitem open="0" type="815" id="DoiTSw1nmmNe" />
      <listitem open="0" type="815" id="cCIxbhhdkyFa" />
      <listitem open="0" type="815" id="BbjQajFHPhd1" />
      <listitem open="0" type="815" id="KpAuoN5VqSaz" />
      <listitem open="0" type="815" id="GrgvBCGU2OMo" />
      <listitem open="0" type="815" id="hJk1QPmfHRaQ" />
      <listitem open="0" type="815" id="d5u87OapfKo5" />
      <listitem open="0" type="815" id="XgFBSni3saC0" />
      <listitem open="0" type="815" id="e5kiLyzqfEz5" />
      <listitem open="0" type="815" id="EPnLkTSMYC4t" />
      <listitem open="0" type="815" id="GtlEUVHgs32c" />
      <listitem open="0" type="815" id="GVRaUTCiMvxp" />
      <listitem open="0" type="815" id="qePqE12TUS3w" />
      <listitem open="0" type="815" id="5jj3ZVeO73CK" />
      <listitem open="0" type="815" id="gudSSRSVBCXi" />
      <listitem open="0" type="815" id="eFheLUk1MMTo" />
      <listitem open="0" type="815" id="bMkxiBmV34S7" />
      <listitem open="0" type="815" id="ZTDxZogAAO6q" />
      <listitem open="0" type="815" id="nVGbtGmShxPG" />
      <listitem open="0" type="815" id="iwGPrddbh2W8" />
      <listitem open="0" type="815" id="tFeaF8glNmXh" />
      <listitem open="0" type="815" id="EuLQ9uR095aP" />
      <listitem open="0" type="815" id="dT8kXg9jxFGy" />
      <listitem open="0" type="815" id="uqQsXRx8u3sP" />
      <listitem open="0" type="815" id="ykZMW08OpWGM" />
      <listitem open="0" type="815" id="jHeZGoxCXWY1" />
      <listitem open="0" type="815" id="QBzjXcHErvo5" />
      <listitem open="0" type="815" id="Heg5ic79n7qL" />
      <listitem open="0" type="815" id="b841k5Z1hF7Q" />
      <listitem open="0" type="815" id="o69vw2FY8HXt" />
      <listitem open="0" type="815" id="KgSm9yCx5Jqz" />
      <listitem open="0" type="815" id="D5VN2ErKuJ41" />
      <listitem open="0" type="815" id="qglxuQK6WoRW" />
      <listitem open="0" type="815" id="2GruavvoCp7l" />
      <listitem open="0" type="815" id="gHbA53g5JXzr" />
      <listitem open="0" type="815" id="u8LXNI31ae9d" />
      <listitem open="0" type="815" id="AiVGg9abFv6a" />
      <listitem open="0" type="815" id="BYtQR01f9bPv" />
      <listitem open="0" type="815" id="87aHizD0kYoa" />
      <listitem open="0" type="815" id="Qtf9PUjcxtgj" />
      <listitem open="0" type="815" id="BlfACLpdETmd" />
      <listitem open="0" type="815" id="xTFsKucHyNkU" />
      <listitem open="0" type="815" id="2Ze0uOSxevsB" />
      <listitem open="0" type="815" id="E0tKikZoRT5Y" />
      <listitem open="0" type="815" id="yZEN1Jv6JWFP" />
      <listitem open="0" type="815" id="jzPRDPt9w5Ux" />
      <listitem open="0" type="815" id="y8HuDlsa8uG2" />
      <listitem open="0" type="815" id="TFHb7VeEqbLp" />
      <listitem open="0" type="815" id="S2lGd43FL51z" />
      <listitem open="0" type="815" id="sT1IQSpqUY56" />
      <listitem open="0" type="815" id="dJN086d7n0v9" />
      <listitem open="0" type="815" id="ddbqLtu1ARkl" />
      <listitem open="0" type="815" id="jHl00VDd7mRS" />
      <listitem open="0" type="815" id="pZ1k4fplBWP5" />
      <listitem open="0" type="815" id="AYmMBoJzLKjP" />
      <listitem open="0" type="815" id="HvoaGWzD27M3" />
      <listitem open="0" type="815" id="OOASOldZ52Pp" />
      <listitem open="0" type="815" id="1GP4GouHujCU" />
      <listitem open="0" type="815" id="82YMblQG1fLX" />
      <listitem open="0" type="815" id="lsqCQc8vIYt7" />
      <listitem open="0" type="815" id="atN2EjNFsOn3" />
      <listitem open="0" type="815" id="fG2fgnfReTb4" />
      <listitem open="0" type="815" id="iuUNhJHGTNh1" />
      <listitem open="0" type="815" id="6bjZT8F90kUi" />
      <listitem open="0" type="815" id="qs3UCg6GGnph" />
      <listitem open="0" type="815" id="BlYtUH8I79kJ" />
      <listitem open="0" type="815" id="qrY6eNlaQbUD" />
      <listitem open="0" type="815" id="t6zyeH7n1deT" />
     </listitem>
     <listitem open="0" type="813" id="Jr6MgSkHK0xA" />
     <listitem open="0" type="813" id="mXQazKd6zVtQ" >
      <listitem open="0" type="814" id="mPsSBgOFn3dL" />
      <listitem open="0" type="814" id="hzbB8vwBT8Mi" />
      <listitem open="0" type="814" id="bHUFpmIcC84L" />
      <listitem open="0" type="814" id="pQaaSBt9BSIH" />
      <listitem open="0" type="814" id="OFSpNnXw4zAt" />
      <listitem open="0" type="814" id="lQVvYYELymtQ" />
      <listitem open="0" type="814" id="wlX7DqOZ3qMO" />
      <listitem open="0" type="814" id="dtIfsSZcs4VP" />
      <listitem open="0" type="814" id="ciiZSazOLVTW" />
      <listitem open="0" type="815" id="XDJpEv7Y9Sts" />
      <listitem open="0" type="815" id="2maBCR3q0hhS" />
      <listitem open="0" type="815" id="CC7g8wggViBq" />
      <listitem open="0" type="815" id="6D86unW40dl8" />
      <listitem open="0" type="815" id="rhwwO6EUJMZB" />
      <listitem open="0" type="815" id="fj4x3d8AjOGQ" />
      <listitem open="0" type="815" id="Kwi1JyPgO4Qn" />
      <listitem open="0" type="815" id="3Qpc7dAPXsPq" />
      <listitem open="0" type="815" id="CmIzz3x0RmcW" />
      <listitem open="0" type="815" id="7eliigFtQVqO" />
      <listitem open="0" type="815" id="BkdZFTxlCKjh" />
      <listitem open="0" type="815" id="duKhPpSYZ56m" />
      <listitem open="0" type="815" id="I2T6DcbpXtUu" />
      <listitem open="0" type="815" id="nfYGeDOwDr0P" />
      <listitem open="0" type="815" id="tMAUtOOg4uxg" />
      <listitem open="0" type="815" id="bVjEp7rjTzBM" />
      <listitem open="0" type="815" id="HX2RQd2z8mDy" />
      <listitem open="0" type="815" id="atIpb7CqeEI2" />
      <listitem open="0" type="815" id="PpakRMV1Fnop" />
      <listitem open="0" type="815" id="lyAvXK7v9fda" />
      <listitem open="0" type="815" id="CAYrilws3Cca" />
      <listitem open="0" type="815" id="VEeYOE7sglov" />
     </listitem>
     <listitem open="0" type="813" id="7xmHi72fVXGS" />
     <listitem open="0" type="813" id="CxBzM6Vr0crS" />
     <listitem open="0" type="813" id="3irjz8IKWpJ5" />
     <listitem open="0" type="818" id="IkotSWpqh1mi" >
      <listitem open="0" type="813" id="IH5AzLTnQJhA" >
       <listitem open="0" type="814" id="F2WOU8aW6AVK" />
       <listitem open="0" type="814" id="GnaaG5lZKojJ" />
       <listitem open="0" type="814" id="AA6aRlihnE5F" />
       <listitem open="0" type="814" id="KdlOlHiz2HZI" />
       <listitem open="0" type="815" id="KJre7ZxFh1p9" />
       <listitem open="0" type="815" id="mWoYirn1VXPE" />
      </listitem>
      <listitem open="0" type="813" id="VDVEJ1fEI8c6" />
      <listitem open="0" type="813" id="yEgs527fUzLr" />
      <listitem open="0" type="813" id="8CeTSczvqU97" >
       <listitem open="0" type="814" id="TmJjsvpq7TgC" />
       <listitem open="0" type="814" id="VnpymBnsLRJn" />
       <listitem open="0" type="814" id="2IgslpxCZGwS" />
      </listitem>
      <listitem open="0" type="831" id="dbndDWWVLN8R" >
       <listitem open="0" type="839" id="70ubNx4fhsW7" />
       <listitem open="0" type="839" id="OLw5MimyHZZU" />
       <listitem open="0" type="839" id="65zPS6oZ6g8S" />
       <listitem open="0" type="839" id="bC7G4cOQxIWI" />
       <listitem open="0" type="839" id="0IGIppmtskII" />
       <listitem open="0" type="839" id="o4sukyML9ScB" />
       <listitem open="0" type="839" id="40czG6HGMVWB" />
      </listitem>
     </listitem>
     <listitem open="0" type="818" id="CBRlk9bhdUfX" >
      <listitem open="0" type="813" id="1HzV6JbllLJG" >
       <listitem open="0" type="814" id="8g4J71BtjU6x" />
       <listitem open="0" type="814" id="RCC67Cj9TjeY" />
       <listitem open="0" type="814" id="0DHlZYzfD3xK" />
       <listitem open="0" type="814" id="48BlcIg3Us7c" />
       <listitem open="0" type="814" id="3rjUaL0YZGH6" />
       <listitem open="0" type="814" id="oGjzHgJLmV4O" />
       <listitem open="0" type="814" id="nlPHbXrcOY7w" />
       <listitem open="0" type="814" id="u5SRLjV8xE7E" />
       <listitem open="0" type="814" id="vRXhub4hMTww" />
       <listitem open="0" type="814" id="ymYKKdECjgb2" />
      </listitem>
      <listitem open="0" type="813" id="N68ILGWEf1tX" >
       <listitem open="0" type="813" id="Tf4ZWYZJuuWi" >
        <listitem open="0" type="814" id="v4PzwIbF1k1z" />
        <listitem open="0" type="814" id="KNpkkg1BJ4lp" />
        <listitem open="0" type="814" id="aK6UCcA7gZ6b" />
        <listitem open="0" type="814" id="siqrQprjCeRu" />
        <listitem open="0" type="814" id="IR6bVpO37VYJ" />
        <listitem open="0" type="814" id="7gQmGVL6BBvb" />
        <listitem open="0" type="814" id="ymI9Ok3eB7Fe" />
        <listitem open="0" type="814" id="wch37FMCwlwA" />
        <listitem open="0" type="814" id="GHERQ90PuJYG" />
        <listitem open="0" type="814" id="3ZvCh8qdkXfr" />
        <listitem open="0" type="814" id="l12fmyn0G1Rg" />
        <listitem open="0" type="814" id="8S30jbHkBCws" />
       </listitem>
       <listitem open="0" type="813" id="ImT3H8s28uhs" >
        <listitem open="0" type="814" id="rUt7TIlakpaT" />
        <listitem open="0" type="814" id="OrDZ17PKrrL9" />
        <listitem open="0" type="814" id="xD936pwxHn4l" />
       </listitem>
       <listitem open="0" type="813" id="5nLoctFzjRYi" >
        <listitem open="0" type="814" id="Yw2QlLXiZgmf" />
        <listitem open="0" type="814" id="VganTcWWPpK0" />
        <listitem open="0" type="814" id="iYzRzVAVPAvA" />
       </listitem>
       <listitem open="0" type="813" id="UQr37bgaHGLi" >
        <listitem open="0" type="814" id="qpEFeXFL3Ck2" />
        <listitem open="0" type="814" id="isX71RGVr7Yw" />
       </listitem>
       <listitem open="0" type="814" id="dvCxN8tLsQeB" />
       <listitem open="0" type="814" id="aB4SbibcaxL7" />
       <listitem open="0" type="814" id="u62xxFK5wsnf" />
       <listitem open="0" type="814" id="I3zeUHO4SQV1" />
       <listitem open="0" type="814" id="86bh3wox0qty" />
       <listitem open="0" type="814" id="3B1y1mbKpbyK" />
       <listitem open="0" type="814" id="lLtl9khDtg9u" />
       <listitem open="0" type="814" id="TkCGL8aBTvRC" />
       <listitem open="0" type="814" id="ki1eXaaItR32" />
       <listitem open="0" type="814" id="HfaiY1uJiuvF" />
       <listitem open="0" type="814" id="v2T09aPQEz7m" />
       <listitem open="0" type="814" id="x2MCbSpUSHTb" />
       <listitem open="0" type="814" id="ps13p8on8rU1" />
       <listitem open="0" type="814" id="Kj9m0cNpSNrH" />
       <listitem open="0" type="814" id="iCVxQqfGerTG" />
       <listitem open="0" type="814" id="MhbPtKRbCxhD" />
       <listitem open="0" type="814" id="OxiD2EAkOfhm" />
       <listitem open="0" type="814" id="TK27BUOWBxv4" />
      </listitem>
      <listitem open="0" type="813" id="9sBZWTLj4j5v" >
       <listitem open="0" type="814" id="FcZH7MOKVp3F" />
       <listitem open="0" type="814" id="yexa7c7ESGnw" />
       <listitem open="0" type="814" id="i8dmpif4IFJQ" />
       <listitem open="0" type="814" id="Zii4VlISOD2T" />
       <listitem open="0" type="814" id="UVQlkh9HNpMt" />
       <listitem open="0" type="814" id="W1w2pmQHIo00" />
       <listitem open="0" type="814" id="V9ItyekXG3T5" />
       <listitem open="0" type="814" id="OrjqtahObdQO" />
       <listitem open="0" type="814" id="Qodgceg8lwzk" />
       <listitem open="0" type="814" id="YhFokir6XbwR" />
       <listitem open="0" type="814" id="9bnkFD8d2lHe" />
       <listitem open="0" type="814" id="Nvk9shrOO6D6" />
      </listitem>
      <listitem open="0" type="813" id="95etzUAzwC6b" >
       <listitem open="0" type="814" id="Vcbv0lcl7EpJ" />
       <listitem open="0" type="814" id="vuNsFU1NYdEX" />
       <listitem open="0" type="814" id="7MU2Ybd1BCx9" />
       <listitem open="0" type="814" id="xXs5jfOcXlUn" />
       <listitem open="0" type="814" id="ET8k7KFEhkED" />
       <listitem open="0" type="814" id="JqFS2Ab0fR5O" />
       <listitem open="0" type="814" id="7R0eBSPNvX72" />
       <listitem open="0" type="814" id="sMFX4RkLHznK" />
       <listitem open="0" type="814" id="7MImoLAvk8Zv" />
       <listitem open="0" type="814" id="YzIUUPUKkhrm" />
       <listitem open="0" type="814" id="7c8OZtgfGwR2" />
       <listitem open="0" type="814" id="Hax2iUvHREju" />
       <listitem open="0" type="814" id="bBELt460eEMD" />
      </listitem>
      <listitem open="0" type="813" id="HLeUIJfgEMrG" >
       <listitem open="0" type="814" id="Y1yvefh8ziF8" />
       <listitem open="0" type="814" id="CbeNZYPqt1IB" />
       <listitem open="0" type="814" id="KwpYGgmogkjK" />
       <listitem open="0" type="814" id="PRSM7gTJH7eo" />
       <listitem open="0" type="814" id="d1dW3tfNpSu5" />
      </listitem>
      <listitem open="0" type="813" id="71sLxINFsIHa" >
       <listitem open="0" type="814" id="nCpCOW40iJJZ" />
       <listitem open="0" type="814" id="NNXzbtChu32q" />
       <listitem open="0" type="814" id="JQ5BiKjTUXet" />
       <listitem open="0" type="814" id="hUmZVnPoDSzt" />
       <listitem open="0" type="814" id="miLFDx6Hfv0f" />
      </listitem>
      <listitem open="0" type="831" id="J8cTC4sawAT0" >
       <listitem open="0" type="839" id="fyf9j6DHAuVw" />
       <listitem open="0" type="839" id="K0yNW3enCEHM" />
       <listitem open="0" type="839" id="I7wEINCxKp51" />
       <listitem open="0" type="839" id="tII2CmyUmwqG" />
       <listitem open="0" type="839" id="zS49hLVzQQCg" />
       <listitem open="0" type="839" id="lOc5Ch55zN79" />
      </listitem>
     </listitem>
     <listitem open="0" type="818" id="m4CKd7jmiWUx" >
      <listitem open="0" type="813" id="Z6hEnPU23Y7J" />
      <listitem open="0" type="813" id="Bh1MvAj7B0kh" >
       <listitem open="0" type="814" id="F6yR2YYiyHBa" />
       <listitem open="0" type="815" id="94qTJxiCX3Oa" />
       <listitem open="0" type="815" id="smDnXdqJTVNn" />
       <listitem open="0" type="815" id="joFGsdoiO1Tv" />
       <listitem open="0" type="815" id="uXfIXJVAlP9E" />
       <listitem open="0" type="815" id="bqe2NMfavNKn" />
       <listitem open="0" type="815" id="NpVGCq309bo6" />
       <listitem open="0" type="831" id="SF2oBjeknJKg" >
        <listitem open="0" type="839" id="8qfhydS7KTRF" />
        <listitem open="0" type="839" id="cAKl84TbHVPS" />
        <listitem open="0" type="839" id="C1AxKVdSJG9F" />
        <listitem open="0" type="839" id="tbND3oQfxkQ5" />
        <listitem open="0" type="839" id="org3K3WW4gRO" />
       </listitem>
      </listitem>
      <listitem open="0" type="831" id="1veKd5yRHVaC" >
       <listitem open="0" type="839" id="piYTuUw2jtqS" />
       <listitem open="0" type="839" id="hhT7l6on0S5d" />
       <listitem open="0" type="839" id="X33nZbzOJVpD" />
       <listitem open="0" type="839" id="0lDhf18KibRS" />
       <listitem open="0" type="839" id="gEFgeKJCLMxu" />
       <listitem open="0" type="839" id="xwGFQ5QQre5U" />
       <listitem open="0" type="839" id="dDoKnEmTS176" />
       <listitem open="0" type="839" id="JQGclBVg8lvW" />
       <listitem open="0" type="839" id="pMueyz6bBuvw" />
       <listitem open="0" type="839" id="6fPYeWdxurYd" />
       <listitem open="0" type="839" id="33K9oDfbXZFV" />
       <listitem open="0" type="839" id="WJ5hEydKe0rI" />
       <listitem open="0" type="839" id="USEPJm2KnKTb" />
       <listitem open="0" type="839" id="W8B3fOXCiaru" />
       <listitem open="0" type="839" id="YTEAT3RwVdLn" />
       <listitem open="0" type="839" id="NL7AebjAhuBL" />
       <listitem open="0" type="839" id="JiVzIKtpn7zF" />
       <listitem open="0" type="839" id="9OBc1UPOpVWR" />
       <listitem open="0" type="839" id="4GbjAn4RTXQk" />
       <listitem open="0" type="839" id="sJZfPWuWt38u" />
       <listitem open="0" type="839" id="XYHL3nm71MoC" />
      </listitem>
      <listitem open="0" type="831" id="tx7rZRQJKhgm" >
       <listitem open="0" type="839" id="seJyJ9eTPuIy" />
       <listitem open="0" type="839" id="SPz4DuT4sbvP" />
       <listitem open="0" type="839" id="2JiL0N5r1PpI" />
      </listitem>
      <listitem open="0" type="831" id="tp75PHBXSDTJ" >
       <listitem open="0" type="839" id="WCH8bFTQX39t" />
       <listitem open="0" type="839" id="k7JR67xzv35K" />
       <listitem open="0" type="839" id="KGqmUJ6yTL44" />
       <listitem open="0" type="839" id="YXS5ZayHfGim" />
      </listitem>
      <listitem open="0" type="831" id="NphzIupJjyAl" >
       <listitem open="0" type="839" id="7ixwX69hpaw7" />
       <listitem open="0" type="839" id="g0KhNYkkNPjg" />
       <listitem open="0" type="839" id="HWz0T7maphWL" />
       <listitem open="0" type="839" id="le0ZEugtu0aH" />
       <listitem open="0" type="839" id="WIzuhiazCXzf" />
       <listitem open="0" type="839" id="cjFPPmkAQijc" />
       <listitem open="0" type="839" id="cNVWO4luMkm2" />
       <listitem open="0" type="839" id="QK1dryITgWt5" />
       <listitem open="0" type="839" id="IbDgKxGwKkTg" />
       <listitem open="0" type="839" id="oCZ8xJALeByV" />
       <listitem open="0" type="839" id="8Fxolqt1P6fj" />
      </listitem>
      <listitem open="0" type="831" id="CGpNNUcNKEnZ" >
       <listitem open="0" type="839" id="ktuh3QNTnyFz" />
       <listitem open="0" type="839" id="IeXg2lXD2KaN" />
       <listitem open="0" type="839" id="mAk6PVd7PXoQ" />
       <listitem open="0" type="839" id="xAti68hOlD4n" />
       <listitem open="0" type="839" id="yZyytXJfh4j6" />
       <listitem open="0" type="839" id="XMBut0Ko8BWE" />
       <listitem open="0" type="839" id="IBc3OgoLFnJ6" />
       <listitem open="0" type="839" id="IdlzfU4CqF7h" />
       <listitem open="0" type="839" id="DPVLZ1ZrC9sZ" />
       <listitem open="0" type="839" id="neu2RB6hmrhP" />
       <listitem open="0" type="839" id="Jla9yfoC2JXb" />
       <listitem open="0" type="839" id="K5QVEG20vu0K" />
       <listitem open="0" type="839" id="572qyjDISlPQ" />
       <listitem open="0" type="839" id="OEcRX80qBPJN" />
       <listitem open="0" type="839" id="fLNaFOvIVx6T" />
       <listitem open="0" type="839" id="eIj637USL7rq" />
       <listitem open="0" type="839" id="DreOGxluI9UV" />
       <listitem open="0" type="839" id="VNo0KsRwA90E" />
       <listitem open="0" type="839" id="GVeZaTNnK29Z" />
       <listitem open="0" type="839" id="zuTG1vjWJVUb" />
       <listitem open="0" type="839" id="OwYW5YiJ1Msb" />
       <listitem open="0" type="839" id="pFO8HXfFQ6TP" />
       <listitem open="0" type="839" id="1AuIgOu2IQYL" />
       <listitem open="0" type="839" id="wHeybUZPiwVx" />
       <listitem open="0" type="839" id="R8CrEdFDm9WQ" />
       <listitem open="0" type="839" id="VOSmoy7kDkgp" />
       <listitem open="0" type="839" id="EGCwChudp4T1" />
       <listitem open="0" type="839" id="giEQpiqK6I6s" />
       <listitem open="0" type="839" id="GCbSwHH8XT3h" />
       <listitem open="0" type="839" id="8vJvxkwbQ81F" />
       <listitem open="0" type="839" id="prXt7emMoLoi" />
       <listitem open="0" type="839" id="c3o8Urnck4Vg" />
       <listitem open="0" type="839" id="oPFEVHTK61CC" />
       <listitem open="0" type="839" id="dwYPHK7rNvzr" />
       <listitem open="0" type="839" id="lnRTrw9eJPso" />
       <listitem open="0" type="839" id="eK7iJJuwFSLU" />
       <listitem open="0" type="839" id="mQL7JLy46NWv" />
       <listitem open="0" type="839" id="JfZa2QPekWN3" />
       <listitem open="0" type="839" id="nHx0iGUSgnaz" />
       <listitem open="0" type="839" id="6W2AuY4BBdmC" />
       <listitem open="0" type="839" id="1BqlfBmQTjQ9" />
       <listitem open="0" type="839" id="xsbbd9ZkgbuY" />
       <listitem open="0" type="839" id="7yjIaVSZeJLJ" />
       <listitem open="0" type="839" id="U5hvn72kxcKb" />
       <listitem open="0" type="839" id="ltJPSBxZ8hpg" />
       <listitem open="0" type="839" id="AIFpZY81eoxP" />
      </listitem>
      <listitem open="0" type="831" id="haYjKnMhj4qZ" >
       <listitem open="0" type="839" id="mfx8lADYDPso" />
       <listitem open="0" type="839" id="WZZD338kehSy" />
       <listitem open="0" type="839" id="UmdBqSka7iht" />
       <listitem open="0" type="839" id="quR1HHqmoNzr" />
       <listitem open="0" type="839" id="O7Z2mzyFjaQa" />
       <listitem open="0" type="839" id="2B87tp0hhPjx" />
      </listitem>
      <listitem open="0" type="831" id="gXjSugHIlpJY" >
       <listitem open="0" type="839" id="oFnYpB6pMCxD" />
       <listitem open="0" type="839" id="2vthLcez9LS1" />
       <listitem open="0" type="839" id="1hHnWaLJo6rd" />
       <listitem open="0" type="839" id="HvRc7On7Jgpc" />
       <listitem open="0" type="839" id="GRcNn2OojgZG" />
       <listitem open="0" type="839" id="EsZ2wOeEH5oO" />
       <listitem open="0" type="839" id="TZUkEJLUkxsV" />
       <listitem open="0" type="839" id="xEIesru7kR9e" />
       <listitem open="0" type="839" id="nnq4seRJCv2Q" />
       <listitem open="0" type="839" id="ENswIiSDxkrp" />
       <listitem open="0" type="839" id="ZkuHB4wzpm1g" />
       <listitem open="0" type="839" id="PSxbNzzZKrUa" />
       <listitem open="0" type="839" id="YwnVedIBNDTY" />
       <listitem open="0" type="839" id="FNV47VkWxi5J" />
       <listitem open="0" type="839" id="f4syuMYQGKvs" />
       <listitem open="0" type="839" id="xB4KMVqbqKgx" />
       <listitem open="0" type="839" id="pOUk4Z3icugU" />
       <listitem open="0" type="839" id="GCuVWnNTwPnJ" />
       <listitem open="0" type="839" id="scuiwYgjvATx" />
       <listitem open="0" type="839" id="hVfHPJjdWb82" />
       <listitem open="0" type="839" id="OUWJrHckrUSn" />
       <listitem open="0" type="839" id="16WwEytwTXBs" />
       <listitem open="0" type="839" id="qvVMUcNr4rAv" />
       <listitem open="0" type="839" id="6kdyE4jFAE9P" />
       <listitem open="0" type="839" id="C1JfYSVMLyhq" />
       <listitem open="0" type="839" id="Y4hcvpW1Z7zn" />
      </listitem>
      <listitem open="0" type="831" id="CzJblqJdLTot" >
       <listitem open="0" type="839" id="fVzHKbU4XM18" />
       <listitem open="0" type="839" id="0MONyMbAJsm4" />
       <listitem open="0" type="839" id="i3f2URv7wsPF" />
      </listitem>
      <listitem open="0" type="831" id="UrHzDI7BfWWb" >
       <listitem open="0" type="839" id="q8l7yV9fZoh3" />
       <listitem open="0" type="839" id="DaB7TYMvPbua" />
       <listitem open="0" type="839" id="u0jXWF8KLrRK" />
       <listitem open="0" type="839" id="NazwMexXE6ef" />
       <listitem open="0" type="839" id="cza1aTZSTIzx" />
       <listitem open="0" type="839" id="W5Frxg9KE8EY" />
       <listitem open="0" type="839" id="m93zGheseDsF" />
       <listitem open="0" type="839" id="ePf7gf2CiH1f" />
       <listitem open="0" type="839" id="vBx9H9f4Ji1X" />
       <listitem open="0" type="839" id="NdN2qFFSduZJ" />
       <listitem open="0" type="839" id="XbTGsUtnfpux" />
       <listitem open="0" type="839" id="yXzFD0mbbAbS" />
       <listitem open="0" type="839" id="Nou0gSHE1kSs" />
       <listitem open="0" type="839" id="FLds8Yn53kKH" />
       <listitem open="0" type="839" id="i7qKFPkaDcbt" />
       <listitem open="0" type="839" id="4s56bXyqrbgx" />
       <listitem open="0" type="839" id="7U29CNQvSEFf" />
       <listitem open="0" type="839" id="bzFobofefjiG" />
       <listitem open="0" type="839" id="Eg45Fk3LC5UP" />
       <listitem open="0" type="839" id="QsKs4XXfUlR5" />
      </listitem>
      <listitem open="0" type="831" id="NglIhqb15RoZ" >
       <listitem open="0" type="839" id="sV9DaCj5epeC" />
       <listitem open="0" type="839" id="lwszceLGPdxE" />
      </listitem>
      <listitem open="0" type="831" id="WUjvM0toPqra" >
       <listitem open="0" type="839" id="lKedvY0wphHo" />
       <listitem open="0" type="839" id="4Mf5jSLFu48G" />
       <listitem open="0" type="839" id="4z3RquzbCcC8" />
       <listitem open="0" type="839" id="8C2xtJlxdO0N" />
       <listitem open="0" type="839" id="rJajOj0Qi1qY" />
      </listitem>
      <listitem open="0" type="831" id="7tbaQ2KIJrwi" >
       <listitem open="0" type="839" id="MoCFsL9NrOis" />
       <listitem open="0" type="839" id="ATxBplLwexU3" />
       <listitem open="0" type="839" id="zpJGeFx049Fu" />
       <listitem open="0" type="839" id="UNHLj0DtRA5G" />
      </listitem>
      <listitem open="0" type="831" id="wQAYLeZIRtZ4" >
       <listitem open="0" type="839" id="8W4CfI48fMRM" />
       <listitem open="0" type="839" id="KfGlnJ1hh9E3" />
       <listitem open="0" type="839" id="nnLDguHnQJx4" />
       <listitem open="0" type="839" id="b2CEOdbiGpT2" />
       <listitem open="0" type="839" id="8SjpbvsMjEXN" />
       <listitem open="0" type="839" id="6mAV68XfAhuY" />
       <listitem open="0" type="839" id="ITEZIhZQ7GDg" />
       <listitem open="0" type="839" id="C60tIYGMIRrO" />
       <listitem open="0" type="839" id="XO4h5wDOPRvh" />
       <listitem open="0" type="839" id="6U5DiIruMrnc" />
       <listitem open="0" type="839" id="N4zgTo20D6fG" />
       <listitem open="0" type="839" id="2scRHV6LzBWi" />
       <listitem open="0" type="839" id="SNaoCMPaOOEr" />
      </listitem>
      <listitem open="0" type="831" id="5YjeZvZuk59w" >
       <listitem open="0" type="839" id="tAu0lg60l2Pn" />
       <listitem open="0" type="839" id="axTWFc5IAouh" />
       <listitem open="0" type="839" id="jUcTXjNOtHMd" />
       <listitem open="0" type="839" id="yQdjS3U0yvWB" />
       <listitem open="0" type="839" id="XbRiQMP9ozdJ" />
       <listitem open="0" type="839" id="i0faG1DCRott" />
       <listitem open="0" type="839" id="rNroINxpzPVN" />
       <listitem open="0" type="839" id="jvWVs7oZ6R9K" />
       <listitem open="0" type="839" id="QMWrAPi0mZm2" />
       <listitem open="0" type="839" id="ujpt6JEpCjK4" />
       <listitem open="0" type="839" id="o6duVkEv6ikF" />
       <listitem open="0" type="839" id="7SDrzzrughln" />
       <listitem open="0" type="839" id="y0aAhvCVzqQV" />
       <listitem open="0" type="839" id="acOfL9sQZ5IZ" />
       <listitem open="0" type="839" id="29RgoCTmA4wp" />
       <listitem open="0" type="839" id="x7LuxjNVJm8c" />
       <listitem open="0" type="839" id="v03U3L15SSmH" />
       <listitem open="0" type="839" id="dD1lFybC3u50" />
       <listitem open="0" type="839" id="dSTwEcZ7caae" />
       <listitem open="0" type="839" id="vZjN0TcbfeKu" />
       <listitem open="0" type="839" id="at5dnAdOc4Jp" />
       <listitem open="0" type="839" id="gquHQSvL2cg2" />
       <listitem open="0" type="839" id="6JdlxxdVri8c" />
       <listitem open="0" type="839" id="sj1TnKGSA8ja" />
       <listitem open="0" type="839" id="bctdEXdIqE3l" />
       <listitem open="0" type="839" id="9hGyNMbG5chr" />
       <listitem open="0" type="839" id="uvJ430cccTFq" />
       <listitem open="0" type="839" id="0q9r2AaCppAD" />
       <listitem open="0" type="839" id="BjRFJ86D1PF4" />
      </listitem>
     </listitem>
     <listitem open="0" type="829" id="jnVhObKc9H9D" />
     <listitem open="0" type="829" id="FcOMtXZg2Xm9" />
     <listitem open="0" type="829" id="ygrYuny1WCFh" />
     <listitem open="0" type="829" id="DY69knngReEJ" />
     <listitem open="0" type="829" id="HwgaEQRJEv6n" />
     <listitem open="0" type="829" id="RuMJhLZC6vss" />
     <listitem open="0" type="829" id="ojjOqZYGTuXA" />
     <listitem open="0" type="829" id="wymmISLCJBL6" />
     <listitem open="0" type="829" id="qOczg3ppL7rU" />
     <listitem open="0" type="829" id="Ng8BVC7LajJF" />
     <listitem open="0" type="829" id="MuR0yJicuobD" />
     <listitem open="0" type="829" id="irl7IWCM6XHl" />
     <listitem open="0" type="829" id="OKsh3VflMQtc" />
     <listitem open="0" type="829" id="EkW5TcpBorWd" />
     <listitem open="0" type="829" id="0GfVPKBd2ggW" />
     <listitem open="0" type="829" id="RYHoxAOrBLqk" />
     <listitem open="0" type="829" id="KkAnh5K8dZua" />
     <listitem open="0" type="830" id="Datatypes" >
      <listitem open="0" type="829" id="fSp5637J1uPW" />
      <listitem open="0" type="829" id="VF5oKdz9stpb" />
      <listitem open="0" type="829" id="CH8Z3fFOA3cZ" />
      <listitem open="0" type="829" id="psAonpwmcEJ5" />
      <listitem open="0" type="829" id="0SA32lL41vf8" />
      <listitem open="0" type="829" id="w0AySeShlrAc" />
      <listitem open="0" type="829" id="ayYaUmdlYiq6" />
      <listitem open="0" type="829" id="IYULWnMIKRRm" />
      <listitem open="0" type="829" id="KiaSDJOIAjc1" />
      <listitem open="0" type="829" id="TcCvKMunT0Wg" />
      <listitem open="0" type="829" id="TTjqjcRGpSDu" />
      <listitem open="0" type="829" id="6A6CeOhJBzQ6" />
      <listitem open="0" type="829" id="PHiNE2zl5wO6" />
      <listitem open="0" type="829" id="ZEle77Ya7HM7" />
      <listitem open="0" type="829" id="SNDqFTdIatYX" />
      <listitem open="0" type="829" id="POsZ5TbzqdUH" />
      <listitem open="0" type="829" id="spkscrJplo2Z" />
      <listitem open="0" type="829" id="E9cmojNRX4Mr" />
      <listitem open="0" type="829" id="YC7RYuSE9Stn" />
      <listitem open="0" type="829" id="LYsvyt7Pfwm6" />
      <listitem open="0" type="829" id="ctbqRd7AbF66" />
      <listitem open="0" type="829" id="CKFlXJq4UrkK" />
      <listitem open="0" type="829" id="klyMKdw6qkra" />
      <listitem open="0" type="829" id="9paxApwLfSaQ" />
      <listitem open="0" type="829" id="CZ28H5wQZrEd" />
      <listitem open="0" type="829" id="7F26fejoFbC4" />
      <listitem open="0" type="829" id="CJPsm1i1vUbB" />
      <listitem open="0" type="829" id="ltEgNrP4wJNK" />
      <listitem open="0" type="829" id="UOStU2tidcCj" />
      <listitem open="0" type="829" id="AwBSERm60RlC" />
      <listitem open="0" type="829" id="PPLkrfVtvBje" />
      <listitem open="0" type="829" id="mK62zHFFBvpP" />
      <listitem open="0" type="829" id="7Vb3818Ub7rC" />
      <listitem open="0" type="829" id="mO4yktDer0O7" />
      <listitem open="0" type="829" id="QO1zGta3pr5w" />
      <listitem open="0" type="829" id="hGKDA6KV0jVw" />
      <listitem open="0" type="829" id="dRH6r4OWIkcy" />
      <listitem open="0" type="829" id="DEF25bcCX9gg" />
      <listitem open="0" type="829" id="FVEkpA6EUyvX" />
      <listitem open="0" type="829" id="zUv0weCdSgIo" />
      <listitem open="0" type="829" id="7gMqvyHKOa3D" />
      <listitem open="0" type="829" id="nd72NgACHhCF" />
      <listitem open="0" type="829" id="IBAsTfCY8nbF" />
      <listitem open="0" type="829" id="7T5RMbmXEMrF" />
      <listitem open="0" type="829" id="AZ8KhVU8rU75" />
      <listitem open="0" type="829" id="FqTK0xDFYwn7" />
      <listitem open="0" type="829" id="stR3G54uXMyM" />
      <listitem open="0" type="829" id="5oIcTG9eSPeV" />
      <listitem open="0" type="829" id="XYAchdwu6Aew" />
      <listitem open="0" type="829" id="Ia6JlsvZ9yAj" />
      <listitem open="0" type="829" id="hHOzXWYh0pdd" />
      <listitem open="0" type="829" id="Sq0ldvmUxRAb" />
      <listitem open="0" type="829" id="E8rnR9U0bJxY" />
      <listitem open="0" type="829" id="Djq4E868vjAX" />
      <listitem open="0" type="829" id="OP2guF5w0f4t" />
      <listitem open="0" type="829" id="PaBf5DVgvqku" />
      <listitem open="0" type="829" id="50d88YYA5C8x" />
      <listitem open="0" type="829" id="xz7wrVSvEMxt" />
      <listitem open="0" type="829" id="m1fEmoDyikG7" />
      <listitem open="0" type="829" id="5v1Mt4Ug6ztc" />
      <listitem open="0" type="829" id="2QN9n4hnSfE3" />
      <listitem open="0" type="829" id="fmK9xSpAaESf" />
      <listitem open="0" type="829" id="Szod9Jha7CsN" />
      <listitem open="0" type="829" id="rgyu5O6wTXMI" />
      <listitem open="0" type="829" id="jYKYDzGVbE26" />
      <listitem open="0" type="829" id="CR2OlxHsHtFX" />
      <listitem open="0" type="829" id="tt3Q9VNPmVtu" />
      <listitem open="0" type="829" id="T2lo2MIlscJ3" />
      <listitem open="0" type="829" id="z93G2GnrlK90" />
      <listitem open="0" type="829" id="XDcd3ZuYadje" />
      <listitem open="0" type="829" id="wHw0lpsEzHiu" />
      <listitem open="0" type="829" id="VHD8leEHFvrT" />
      <listitem open="0" type="829" id="6RKvazYnW00Q" />
      <listitem open="0" type="829" id="x8GcFeNw74EU" />
      <listitem open="0" type="829" id="m8aKuJpCgEf2" />
      <listitem open="0" type="829" id="MEcasIR3QSeB" />
      <listitem open="0" type="829" id="oMiz0GbbwUdl" />
      <listitem open="0" type="829" id="KiIfnwaL1Qqj" />
      <listitem open="0" type="829" id="TKsgDB3rwGzW" />
      <listitem open="0" type="829" id="VQi0gFE8PQW6" />
      <listitem open="0" type="829" id="YmkNLCCTosyV" />
      <listitem open="0" type="829" id="75G7jzEHQyIY" />
      <listitem open="0" type="829" id="6Prcve70NJsG" />
      <listitem open="0" type="829" id="g2AlSN6Uj0Sp" />
      <listitem open="0" type="829" id="VfhJoi6FCcoe" />
      <listitem open="0" type="829" id="6bgFIb8avmQP" />
      <listitem open="0" type="829" id="gagrSVXhWyp2" />
      <listitem open="0" type="829" id="uxtJyoUvvY9y" />
      <listitem open="0" type="829" id="MlMHCMSzWsA1" />
      <listitem open="0" type="829" id="FEfNJDfJy0pc" />
      <listitem open="0" type="829" id="xfXjVTCDe51v" />
      <listitem open="0" type="829" id="CwXFoTcgQTzN" />
      <listitem open="1" type="829" id="8c3ctJdhRSz0" />
      <listitem open="1" type="829" id="Rs31k0HwkeRr" />
      <listitem open="0" type="829" id="bJJlEhCW8Ewj" />
      <listitem open="0" type="829" id="6TztvAo9Ffzc" />
      <listitem open="0" type="829" id="RUoyh1gFoL6W" />
      <listitem open="0" type="829" id="YlO0XzWsjQmM" />
      <listitem open="0" type="829" id="0uHvDCCUZ2Ya" />
      <listitem open="0" type="829" id="EdGiS5i5Fz0r" />
      <listitem open="0" type="829" id="j3HN7RojRZkd" />
      <listitem open="0" type="829" id="1mR5QhN6rk7l" />
      <listitem open="0" type="829" id="Fe3ZqpJbZKe8" />
      <listitem open="0" type="829" id="rgDL4yyHyekT" />
      <listitem open="0" type="829" id="neCQoOo8OLma" />
      <listitem open="0" type="829" id="EBSX0NkU8dWA" />
      <listitem open="0" type="829" id="BYldWgdbl9h8" />
      <listitem open="0" type="829" id="i2wKCWb5BakI" />
      <listitem open="0" type="829" id="2FdJxbK7JYEp" />
      <listitem open="0" type="829" id="n9VOC17QaolU" />
      <listitem open="0" type="829" id="aowHoM487F3E" />
      <listitem open="0" type="829" id="NSfmQxIJ7H4o" />
      <listitem open="0" type="829" id="bJaVxv3ryl7z" />
      <listitem open="0" type="829" id="lfMII6RmYpgO" />
      <listitem open="0" type="829" id="wQR0lBZLC0ti" />
      <listitem open="1" type="829" id="x9HhlgZtHcT8" />
      <listitem open="1" type="829" id="XtgMRlvtdzsN" />
      <listitem open="1" type="829" id="p9rIb5vfrY7b" />
      <listitem open="0" type="829" id="c8JyELv7Nrlc" />
      <listitem open="1" type="829" id="iJyJIoeFvvug" />
      <listitem open="1" type="829" id="u4pLWnJ1gxN5" />
      <listitem open="1" type="829" id="ES9IFQqn1Q3Z" />
      <listitem open="1" type="829" id="aTYr61x04nJa" />
      <listitem open="1" type="829" id="4Cj06egg7EVB" />
      <listitem open="1" type="829" id="accGaxLGGIaW" />
     </listitem>
    </listitem>
    <listitem open="1" type="802" id="Use Case View" />
    <listitem open="1" type="821" id="Component View" />
    <listitem open="1" type="827" id="Deployment View" />
    <listitem open="1" type="836" id="Entity Relationship Model" />
   </listitem>
  </listview>
  <codegeneration>
   <codegenerator language="C++" >
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="aTYr61x04nJa" id="aTYr61x04nJa" fileName="unsigned_int" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;unsigned_int.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        unsigned_int.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:16:19&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="accGaxLGGIaW" id="accGaxLGGIaW" fileName="unsigned_short" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;unsigned_short.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        unsigned_short.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:16:19&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="4Cj06egg7EVB" id="4Cj06egg7EVB" fileName="unsigned_long" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;unsigned_long.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        unsigned_long.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:16:19&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="ES9IFQqn1Q3Z" id="ES9IFQqn1Q3Z" fileName="string" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;string.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        string.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:16:19&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="MrbhhCI2Jxa7" id="MrbhhCI2Jxa7" fileName="AssociationWidget" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        AssociationWidget.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:05&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="EYzY6XNnKfgK" id="EYzY6XNnKfgK" fileName="QList" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QList.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:05&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="AwBSERm60RlC" id="AwBSERm60RlC" fileName="QList_AssociationWidget_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QList_AssociationWidget_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:05&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="jnVhObKc9H9D" id="jnVhObKc9H9D" fileName="AssociationWidgetList" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        AssociationWidgetList.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:05&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="oW069fRHbakp" id="oW069fRHbakp" fileName="QListIterator" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QListIterator.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:06&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="zUv0weCdSgIo" id="zUv0weCdSgIo" fileName="QListIterator_AssociationWidget_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QListIterator_AssociationWidget_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:06&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="FcOMtXZg2Xm9" id="FcOMtXZg2Xm9" fileName="AssociationWidgetListIt" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        AssociationWidgetListIt.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:06&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="CBRlk9bhdUfX" fileExt=".cpp" parent_class="9sBZWTLj4j5v" id="9sBZWTLj4j5v" fileName="CodeViewerState" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;codeviewerstate.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="FcZH7MOKVp3F" writeOutText="false" classfield_id="FcZH7MOKVp3F" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="FcZH7MOKVp3F" writeOutText="false" classfield_id="FcZH7MOKVp3F" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_2" accessType="0" parent_id="yexa7c7ESGnw" writeOutText="false" classfield_id="yexa7c7ESGnw" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_3" accessType="1" parent_id="yexa7c7ESGnw" writeOutText="false" classfield_id="yexa7c7ESGnw" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_4" accessType="0" parent_id="i8dmpif4IFJQ" writeOutText="false" classfield_id="i8dmpif4IFJQ" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_5" accessType="1" parent_id="i8dmpif4IFJQ" writeOutText="false" classfield_id="i8dmpif4IFJQ" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_6" accessType="0" parent_id="Zii4VlISOD2T" writeOutText="false" classfield_id="Zii4VlISOD2T" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_7" accessType="1" parent_id="Zii4VlISOD2T" writeOutText="false" classfield_id="Zii4VlISOD2T" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_8" accessType="0" parent_id="UVQlkh9HNpMt" writeOutText="false" classfield_id="UVQlkh9HNpMt" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_9" accessType="1" parent_id="UVQlkh9HNpMt" writeOutText="false" classfield_id="UVQlkh9HNpMt" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_10" accessType="0" parent_id="W1w2pmQHIo00" writeOutText="false" classfield_id="W1w2pmQHIo00" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_11" accessType="1" parent_id="W1w2pmQHIo00" writeOutText="false" classfield_id="W1w2pmQHIo00" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_12" accessType="0" parent_id="V9ItyekXG3T5" writeOutText="false" classfield_id="V9ItyekXG3T5" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_13" accessType="1" parent_id="V9ItyekXG3T5" writeOutText="false" classfield_id="V9ItyekXG3T5" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_14" accessType="0" parent_id="OrjqtahObdQO" writeOutText="false" classfield_id="OrjqtahObdQO" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_15" accessType="1" parent_id="OrjqtahObdQO" writeOutText="false" classfield_id="OrjqtahObdQO" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_16" accessType="0" parent_id="Qodgceg8lwzk" writeOutText="false" classfield_id="Qodgceg8lwzk" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_17" accessType="1" parent_id="Qodgceg8lwzk" writeOutText="false" classfield_id="Qodgceg8lwzk" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_18" accessType="0" parent_id="YhFokir6XbwR" writeOutText="false" classfield_id="YhFokir6XbwR" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_19" accessType="1" parent_id="YhFokir6XbwR" writeOutText="false" classfield_id="YhFokir6XbwR" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_20" accessType="0" parent_id="9bnkFD8d2lHe" writeOutText="false" classfield_id="9bnkFD8d2lHe" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_21" accessType="1" parent_id="9bnkFD8d2lHe" writeOutText="false" classfield_id="9bnkFD8d2lHe" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_22" accessType="0" parent_id="Nvk9shrOO6D6" writeOutText="false" classfield_id="Nvk9shrOO6D6" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_23" accessType="1" parent_id="Nvk9shrOO6D6" writeOutText="false" classfield_id="Nvk9shrOO6D6" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        CodeViewerState.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:06&amp;#010;The original location of this file is Settings&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="FcZH7MOKVp3F" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="FcZH7MOKVp3F" indentLevel="1" text="public int height;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="FcZH7MOKVp3F" writeOutText="false" classfield_id="FcZH7MOKVp3F" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="FcZH7MOKVp3F" writeOutText="false" classfield_id="FcZH7MOKVp3F" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="yexa7c7ESGnw" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="yexa7c7ESGnw" indentLevel="1" text="public int width;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_2" accessType="0" parent_id="yexa7c7ESGnw" writeOutText="false" classfield_id="yexa7c7ESGnw" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_3" accessType="1" parent_id="yexa7c7ESGnw" writeOutText="false" classfield_id="yexa7c7ESGnw" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="i8dmpif4IFJQ" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="i8dmpif4IFJQ" indentLevel="1" text="public bool showHiddenBlocks;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_4" accessType="0" parent_id="i8dmpif4IFJQ" writeOutText="false" classfield_id="i8dmpif4IFJQ" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_5" accessType="1" parent_id="i8dmpif4IFJQ" writeOutText="false" classfield_id="i8dmpif4IFJQ" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="Zii4VlISOD2T" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="Zii4VlISOD2T" indentLevel="1" text="public bool blocksAreHighlighted;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_6" accessType="0" parent_id="Zii4VlISOD2T" writeOutText="false" classfield_id="Zii4VlISOD2T" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_7" accessType="1" parent_id="Zii4VlISOD2T" writeOutText="false" classfield_id="Zii4VlISOD2T" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="UVQlkh9HNpMt" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="UVQlkh9HNpMt" indentLevel="1" text="public QFont font;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_8" accessType="0" parent_id="UVQlkh9HNpMt" writeOutText="false" classfield_id="UVQlkh9HNpMt" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_9" accessType="1" parent_id="UVQlkh9HNpMt" writeOutText="false" classfield_id="UVQlkh9HNpMt" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="W1w2pmQHIo00" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="W1w2pmQHIo00" indentLevel="1" text="public QColor paperColor;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_10" accessType="0" parent_id="W1w2pmQHIo00" writeOutText="false" classfield_id="W1w2pmQHIo00" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_11" accessType="1" parent_id="W1w2pmQHIo00" writeOutText="false" classfield_id="W1w2pmQHIo00" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="V9ItyekXG3T5" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="V9ItyekXG3T5" indentLevel="1" text="public QColor fontColor;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_12" accessType="0" parent_id="V9ItyekXG3T5" writeOutText="false" classfield_id="V9ItyekXG3T5" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_13" accessType="1" parent_id="V9ItyekXG3T5" writeOutText="false" classfield_id="V9ItyekXG3T5" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="OrjqtahObdQO" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="OrjqtahObdQO" indentLevel="1" text="public QColor selectedColor;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_14" accessType="0" parent_id="OrjqtahObdQO" writeOutText="false" classfield_id="OrjqtahObdQO" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_15" accessType="1" parent_id="OrjqtahObdQO" writeOutText="false" classfield_id="OrjqtahObdQO" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="Qodgceg8lwzk" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="Qodgceg8lwzk" indentLevel="1" text="public QColor editBlockColor;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_16" accessType="0" parent_id="Qodgceg8lwzk" writeOutText="false" classfield_id="Qodgceg8lwzk" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_17" accessType="1" parent_id="Qodgceg8lwzk" writeOutText="false" classfield_id="Qodgceg8lwzk" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="YhFokir6XbwR" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="YhFokir6XbwR" indentLevel="1" text="public QColor nonEditBlockColor;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_18" accessType="0" parent_id="YhFokir6XbwR" writeOutText="false" classfield_id="YhFokir6XbwR" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_19" accessType="1" parent_id="YhFokir6XbwR" writeOutText="false" classfield_id="YhFokir6XbwR" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="9bnkFD8d2lHe" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="9bnkFD8d2lHe" indentLevel="1" text="public QColor umlObjectColor;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_20" accessType="0" parent_id="9bnkFD8d2lHe" writeOutText="false" classfield_id="9bnkFD8d2lHe" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_21" accessType="1" parent_id="9bnkFD8d2lHe" writeOutText="false" classfield_id="9bnkFD8d2lHe" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="Nvk9shrOO6D6" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="Nvk9shrOO6D6" indentLevel="1" text="public QColor hiddenColor;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_22" accessType="0" parent_id="Nvk9shrOO6D6" writeOutText="false" classfield_id="Nvk9shrOO6D6" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_23" accessType="1" parent_id="Nvk9shrOO6D6" writeOutText="false" classfield_id="Nvk9shrOO6D6" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="p9hGOSA6YosN" id="p9hGOSA6YosN" fileName="QFont" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QFont.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:06&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="aeLwrLPeS4sq" id="aeLwrLPeS4sq" fileName="QColor" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QColor.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:06&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="m4CKd7jmiWUx" fileExt=".cpp" parent_class="haYjKnMhj4qZ" id="haYjKnMhj4qZ" fileName="Model_Type" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        Model_Type.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:06&amp;#010;The original location of this file is Uml&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="m4CKd7jmiWUx" fileExt=".cpp" parent_class="gXjSugHIlpJY" id="gXjSugHIlpJY" fileName="Object_Type" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        Object_Type.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:06&amp;#010;The original location of this file is Uml&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="m4CKd7jmiWUx" fileExt=".cpp" parent_class="Bh1MvAj7B0kh" id="Bh1MvAj7B0kh" fileName="Visibility" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;visibility.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="F6yR2YYiyHBa" writeOutText="false" classfield_id="F6yR2YYiyHBa" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="F6yR2YYiyHBa" writeOutText="false" classfield_id="F6yR2YYiyHBa" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        Visibility.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:07&amp;#010;The original location of this file is Uml&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="F6yR2YYiyHBa" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="F6yR2YYiyHBa" indentLevel="1" text="private Value _v;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="F6yR2YYiyHBa" writeOutText="false" classfield_id="F6yR2YYiyHBa" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="F6yR2YYiyHBa" writeOutText="false" classfield_id="F6yR2YYiyHBa" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Bh1MvAj7B0kh" fileExt=".cpp" parent_class="SF2oBjeknJKg" id="SF2oBjeknJKg" fileName="Value" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        Value.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:07&amp;#010;The original location of this file is Visibility&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="dUt1TMu4e6AS" id="dUt1TMu4e6AS" fileName="QString" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QString.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:07&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="j3HN7RojRZkd" id="j3HN7RojRZkd" fileName="const_QString_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        const_QString_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:07&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="m4CKd7jmiWUx" fileExt=".cpp" parent_class="5YjeZvZuk59w" id="5YjeZvZuk59w" fileName="Widget_Type" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        Widget_Type.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:08&amp;#010;The original location of this file is Uml&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="m4CKd7jmiWUx" fileExt=".cpp" parent_class="NphzIupJjyAl" id="NphzIupJjyAl" fileName="Diagram_Type" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        Diagram_Type.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:08&amp;#010;The original location of this file is Uml&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="m4CKd7jmiWUx" fileExt=".cpp" parent_class="1veKd5yRHVaC" id="1veKd5yRHVaC" fileName="Association_Type" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        Association_Type.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:08&amp;#010;The original location of this file is Uml&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="m4CKd7jmiWUx" fileExt=".cpp" parent_class="7tbaQ2KIJrwi" id="7tbaQ2KIJrwi" fileName="Signature_Type" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        Signature_Type.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:09&amp;#010;The original location of this file is Uml&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="m4CKd7jmiWUx" fileExt=".cpp" parent_class="wQAYLeZIRtZ4" id="wQAYLeZIRtZ4" fileName="Text_Role" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        Text_Role.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:09&amp;#010;The original location of this file is Uml&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="m4CKd7jmiWUx" fileExt=".cpp" parent_class="CGpNNUcNKEnZ" id="CGpNNUcNKEnZ" fileName="ListView_Type" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        ListView_Type.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:09&amp;#010;The original location of this file is Uml&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="m4CKd7jmiWUx" fileExt=".cpp" parent_class="tx7rZRQJKhgm" id="tx7rZRQJKhgm" fileName="Changeability_Type" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        Changeability_Type.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:10&amp;#010;The original location of this file is Uml&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="m4CKd7jmiWUx" fileExt=".cpp" parent_class="WUjvM0toPqra" id="WUjvM0toPqra" fileName="Sequence_Message_Type" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        Sequence_Message_Type.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:10&amp;#010;The original location of this file is Uml&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="m4CKd7jmiWUx" fileExt=".cpp" parent_class="tp75PHBXSDTJ" id="tp75PHBXSDTJ" fileName="DBIndex_Type" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        DBIndex_Type.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:10&amp;#010;The original location of this file is Uml&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="m4CKd7jmiWUx" fileExt=".cpp" parent_class="NglIhqb15RoZ" id="NglIhqb15RoZ" fileName="Role_Type" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        Role_Type.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:10&amp;#010;The original location of this file is Uml&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="m4CKd7jmiWUx" fileExt=".cpp" parent_class="CzJblqJdLTot" id="CzJblqJdLTot" fileName="Parameter_Direction" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        Parameter_Direction.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:10&amp;#010;The original location of this file is Uml&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="m4CKd7jmiWUx" fileExt=".cpp" parent_class="UrHzDI7BfWWb" id="UrHzDI7BfWWb" fileName="Programming_Language" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        Programming_Language.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:11&amp;#010;The original location of this file is Uml&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="m4CKd7jmiWUx" fileExt=".cpp" parent_class="Z6hEnPU23Y7J" id="Z6hEnPU23Y7J" fileName="IDType" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        IDType.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:11&amp;#010;The original location of this file is Uml&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="CBRlk9bhdUfX" fileExt=".cpp" parent_class="J8cTC4sawAT0" id="J8cTC4sawAT0" fileName="Page" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        Page.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:11&amp;#010;The original location of this file is Settings&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="CBRlk9bhdUfX" fileExt=".cpp" parent_class="95etzUAzwC6b" id="95etzUAzwC6b" fileName="GeneralState" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;generalstate.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="Vcbv0lcl7EpJ" writeOutText="false" classfield_id="Vcbv0lcl7EpJ" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="Vcbv0lcl7EpJ" writeOutText="false" classfield_id="Vcbv0lcl7EpJ" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_2" accessType="0" parent_id="vuNsFU1NYdEX" writeOutText="false" classfield_id="vuNsFU1NYdEX" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_3" accessType="1" parent_id="vuNsFU1NYdEX" writeOutText="false" classfield_id="vuNsFU1NYdEX" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_4" accessType="0" parent_id="7MU2Ybd1BCx9" writeOutText="false" classfield_id="7MU2Ybd1BCx9" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_5" accessType="1" parent_id="7MU2Ybd1BCx9" writeOutText="false" classfield_id="7MU2Ybd1BCx9" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_6" accessType="0" parent_id="xXs5jfOcXlUn" writeOutText="false" classfield_id="xXs5jfOcXlUn" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_7" accessType="1" parent_id="xXs5jfOcXlUn" writeOutText="false" classfield_id="xXs5jfOcXlUn" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_8" accessType="0" parent_id="ET8k7KFEhkED" writeOutText="false" classfield_id="ET8k7KFEhkED" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_9" accessType="1" parent_id="ET8k7KFEhkED" writeOutText="false" classfield_id="ET8k7KFEhkED" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_10" accessType="0" parent_id="JqFS2Ab0fR5O" writeOutText="false" classfield_id="JqFS2Ab0fR5O" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_11" accessType="1" parent_id="JqFS2Ab0fR5O" writeOutText="false" classfield_id="JqFS2Ab0fR5O" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_12" accessType="0" parent_id="7R0eBSPNvX72" writeOutText="false" classfield_id="7R0eBSPNvX72" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_13" accessType="1" parent_id="7R0eBSPNvX72" writeOutText="false" classfield_id="7R0eBSPNvX72" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_14" accessType="0" parent_id="sMFX4RkLHznK" writeOutText="false" classfield_id="sMFX4RkLHznK" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_15" accessType="1" parent_id="sMFX4RkLHznK" writeOutText="false" classfield_id="sMFX4RkLHznK" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_16" accessType="0" parent_id="7MImoLAvk8Zv" writeOutText="false" classfield_id="7MImoLAvk8Zv" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_17" accessType="1" parent_id="7MImoLAvk8Zv" writeOutText="false" classfield_id="7MImoLAvk8Zv" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_18" accessType="0" parent_id="YzIUUPUKkhrm" writeOutText="false" classfield_id="YzIUUPUKkhrm" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_19" accessType="1" parent_id="YzIUUPUKkhrm" writeOutText="false" classfield_id="YzIUUPUKkhrm" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_20" accessType="0" parent_id="7c8OZtgfGwR2" writeOutText="false" classfield_id="7c8OZtgfGwR2" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_21" accessType="1" parent_id="7c8OZtgfGwR2" writeOutText="false" classfield_id="7c8OZtgfGwR2" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_22" accessType="0" parent_id="Hax2iUvHREju" writeOutText="false" classfield_id="Hax2iUvHREju" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_23" accessType="1" parent_id="Hax2iUvHREju" writeOutText="false" classfield_id="Hax2iUvHREju" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_24" accessType="0" parent_id="bBELt460eEMD" writeOutText="false" classfield_id="bBELt460eEMD" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_25" accessType="1" parent_id="bBELt460eEMD" writeOutText="false" classfield_id="bBELt460eEMD" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        GeneralState.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:11&amp;#010;The original location of this file is Settings&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="Vcbv0lcl7EpJ" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="Vcbv0lcl7EpJ" indentLevel="1" text="public bool undo;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="Vcbv0lcl7EpJ" writeOutText="false" classfield_id="Vcbv0lcl7EpJ" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="Vcbv0lcl7EpJ" writeOutText="false" classfield_id="Vcbv0lcl7EpJ" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="vuNsFU1NYdEX" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="vuNsFU1NYdEX" indentLevel="1" text="public bool tabdiagrams;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_2" accessType="0" parent_id="vuNsFU1NYdEX" writeOutText="false" classfield_id="vuNsFU1NYdEX" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_3" accessType="1" parent_id="vuNsFU1NYdEX" writeOutText="false" classfield_id="vuNsFU1NYdEX" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="7MU2Ybd1BCx9" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="7MU2Ybd1BCx9" indentLevel="1" text="public bool newcodegen;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_4" accessType="0" parent_id="7MU2Ybd1BCx9" writeOutText="false" classfield_id="7MU2Ybd1BCx9" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_5" accessType="1" parent_id="7MU2Ybd1BCx9" writeOutText="false" classfield_id="7MU2Ybd1BCx9" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="xXs5jfOcXlUn" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="xXs5jfOcXlUn" indentLevel="1" text="public bool angularlines;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_6" accessType="0" parent_id="xXs5jfOcXlUn" writeOutText="false" classfield_id="xXs5jfOcXlUn" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_7" accessType="1" parent_id="xXs5jfOcXlUn" writeOutText="false" classfield_id="xXs5jfOcXlUn" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="ET8k7KFEhkED" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="ET8k7KFEhkED" indentLevel="1" text="public bool footerPrinting;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_8" accessType="0" parent_id="ET8k7KFEhkED" writeOutText="false" classfield_id="ET8k7KFEhkED" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_9" accessType="1" parent_id="ET8k7KFEhkED" writeOutText="false" classfield_id="ET8k7KFEhkED" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="JqFS2Ab0fR5O" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="JqFS2Ab0fR5O" indentLevel="1" text="public bool autosave;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_10" accessType="0" parent_id="JqFS2Ab0fR5O" writeOutText="false" classfield_id="JqFS2Ab0fR5O" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_11" accessType="1" parent_id="JqFS2Ab0fR5O" writeOutText="false" classfield_id="JqFS2Ab0fR5O" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="7R0eBSPNvX72" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="7R0eBSPNvX72" indentLevel="1" text="public int time;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_12" accessType="0" parent_id="7R0eBSPNvX72" writeOutText="false" classfield_id="7R0eBSPNvX72" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_13" accessType="1" parent_id="7R0eBSPNvX72" writeOutText="false" classfield_id="7R0eBSPNvX72" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="sMFX4RkLHznK" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="sMFX4RkLHznK" indentLevel="1" text="public int autosavetime;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_14" accessType="0" parent_id="sMFX4RkLHznK" writeOutText="false" classfield_id="sMFX4RkLHznK" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_15" accessType="1" parent_id="sMFX4RkLHznK" writeOutText="false" classfield_id="sMFX4RkLHznK" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="7MImoLAvk8Zv" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="7MImoLAvk8Zv" indentLevel="1" text="public QString autosavesuffix;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_16" accessType="0" parent_id="7MImoLAvk8Zv" writeOutText="false" classfield_id="7MImoLAvk8Zv" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_17" accessType="1" parent_id="7MImoLAvk8Zv" writeOutText="false" classfield_id="7MImoLAvk8Zv" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="YzIUUPUKkhrm" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="YzIUUPUKkhrm" indentLevel="1" text="public bool loadlast;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_18" accessType="0" parent_id="YzIUUPUKkhrm" writeOutText="false" classfield_id="YzIUUPUKkhrm" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_19" accessType="1" parent_id="YzIUUPUKkhrm" writeOutText="false" classfield_id="YzIUUPUKkhrm" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="7c8OZtgfGwR2" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="7c8OZtgfGwR2" indentLevel="1" text="public Uml::Diagram_Type diagram;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_20" accessType="0" parent_id="7c8OZtgfGwR2" writeOutText="false" classfield_id="7c8OZtgfGwR2" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_21" accessType="1" parent_id="7c8OZtgfGwR2" writeOutText="false" classfield_id="7c8OZtgfGwR2" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="Hax2iUvHREju" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="Hax2iUvHREju" indentLevel="1" text="public Uml::Programming_Language defaultLanguage;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_22" accessType="0" parent_id="Hax2iUvHREju" writeOutText="false" classfield_id="Hax2iUvHREju" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_23" accessType="1" parent_id="Hax2iUvHREju" writeOutText="false" classfield_id="Hax2iUvHREju" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="bBELt460eEMD" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="bBELt460eEMD" indentLevel="1" text="public QString lastFile;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_24" accessType="0" parent_id="bBELt460eEMD" writeOutText="false" classfield_id="bBELt460eEMD" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_25" accessType="1" parent_id="bBELt460eEMD" writeOutText="false" classfield_id="bBELt460eEMD" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="CBRlk9bhdUfX" fileExt=".cpp" parent_class="71sLxINFsIHa" id="71sLxINFsIHa" fileName="UIState" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;uistate.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="nCpCOW40iJJZ" writeOutText="false" classfield_id="nCpCOW40iJJZ" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="nCpCOW40iJJZ" writeOutText="false" classfield_id="nCpCOW40iJJZ" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_2" accessType="0" parent_id="NNXzbtChu32q" writeOutText="false" classfield_id="NNXzbtChu32q" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_3" accessType="1" parent_id="NNXzbtChu32q" writeOutText="false" classfield_id="NNXzbtChu32q" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_4" accessType="0" parent_id="JQ5BiKjTUXet" writeOutText="false" classfield_id="JQ5BiKjTUXet" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_5" accessType="1" parent_id="JQ5BiKjTUXet" writeOutText="false" classfield_id="JQ5BiKjTUXet" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_6" accessType="0" parent_id="hUmZVnPoDSzt" writeOutText="false" classfield_id="hUmZVnPoDSzt" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_7" accessType="1" parent_id="hUmZVnPoDSzt" writeOutText="false" classfield_id="hUmZVnPoDSzt" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_8" accessType="0" parent_id="miLFDx6Hfv0f" writeOutText="false" classfield_id="miLFDx6Hfv0f" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_9" accessType="1" parent_id="miLFDx6Hfv0f" writeOutText="false" classfield_id="miLFDx6Hfv0f" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UIState.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:12&amp;#010;The original location of this file is Settings&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="nCpCOW40iJJZ" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="nCpCOW40iJJZ" indentLevel="1" text="public bool useFillColor;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="nCpCOW40iJJZ" writeOutText="false" classfield_id="nCpCOW40iJJZ" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="nCpCOW40iJJZ" writeOutText="false" classfield_id="nCpCOW40iJJZ" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="NNXzbtChu32q" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="NNXzbtChu32q" indentLevel="1" text="public QColor fillColor;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_2" accessType="0" parent_id="NNXzbtChu32q" writeOutText="false" classfield_id="NNXzbtChu32q" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_3" accessType="1" parent_id="NNXzbtChu32q" writeOutText="false" classfield_id="NNXzbtChu32q" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="JQ5BiKjTUXet" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="JQ5BiKjTUXet" indentLevel="1" text="public QColor lineColor;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_4" accessType="0" parent_id="JQ5BiKjTUXet" writeOutText="false" classfield_id="JQ5BiKjTUXet" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_5" accessType="1" parent_id="JQ5BiKjTUXet" writeOutText="false" classfield_id="JQ5BiKjTUXet" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="hUmZVnPoDSzt" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="hUmZVnPoDSzt" indentLevel="1" text="public uint lineWidth;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_6" accessType="0" parent_id="hUmZVnPoDSzt" writeOutText="false" classfield_id="hUmZVnPoDSzt" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_7" accessType="1" parent_id="hUmZVnPoDSzt" writeOutText="false" classfield_id="hUmZVnPoDSzt" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="miLFDx6Hfv0f" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="miLFDx6Hfv0f" indentLevel="1" text="public QFont font;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_8" accessType="0" parent_id="miLFDx6Hfv0f" writeOutText="false" classfield_id="miLFDx6Hfv0f" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_9" accessType="1" parent_id="miLFDx6Hfv0f" writeOutText="false" classfield_id="miLFDx6Hfv0f" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="3irjz8IKWpJ5" id="3irjz8IKWpJ5" fileName="uint" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        uint.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:12&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="CBRlk9bhdUfX" fileExt=".cpp" parent_class="1HzV6JbllLJG" id="1HzV6JbllLJG" fileName="ClassState" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;classstate.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="8g4J71BtjU6x" writeOutText="false" classfield_id="8g4J71BtjU6x" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="8g4J71BtjU6x" writeOutText="false" classfield_id="8g4J71BtjU6x" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_2" accessType="0" parent_id="RCC67Cj9TjeY" writeOutText="false" classfield_id="RCC67Cj9TjeY" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_3" accessType="1" parent_id="RCC67Cj9TjeY" writeOutText="false" classfield_id="RCC67Cj9TjeY" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_4" accessType="0" parent_id="0DHlZYzfD3xK" writeOutText="false" classfield_id="0DHlZYzfD3xK" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_5" accessType="1" parent_id="0DHlZYzfD3xK" writeOutText="false" classfield_id="0DHlZYzfD3xK" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_6" accessType="0" parent_id="48BlcIg3Us7c" writeOutText="false" classfield_id="48BlcIg3Us7c" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_7" accessType="1" parent_id="48BlcIg3Us7c" writeOutText="false" classfield_id="48BlcIg3Us7c" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_8" accessType="0" parent_id="3rjUaL0YZGH6" writeOutText="false" classfield_id="3rjUaL0YZGH6" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_9" accessType="1" parent_id="3rjUaL0YZGH6" writeOutText="false" classfield_id="3rjUaL0YZGH6" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_10" accessType="0" parent_id="oGjzHgJLmV4O" writeOutText="false" classfield_id="oGjzHgJLmV4O" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_11" accessType="1" parent_id="oGjzHgJLmV4O" writeOutText="false" classfield_id="oGjzHgJLmV4O" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_12" accessType="0" parent_id="nlPHbXrcOY7w" writeOutText="false" classfield_id="nlPHbXrcOY7w" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_13" accessType="1" parent_id="nlPHbXrcOY7w" writeOutText="false" classfield_id="nlPHbXrcOY7w" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_14" accessType="0" parent_id="u5SRLjV8xE7E" writeOutText="false" classfield_id="u5SRLjV8xE7E" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_15" accessType="1" parent_id="u5SRLjV8xE7E" writeOutText="false" classfield_id="u5SRLjV8xE7E" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_16" accessType="0" parent_id="vRXhub4hMTww" writeOutText="false" classfield_id="vRXhub4hMTww" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_17" accessType="1" parent_id="vRXhub4hMTww" writeOutText="false" classfield_id="vRXhub4hMTww" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_18" accessType="0" parent_id="ymYKKdECjgb2" writeOutText="false" classfield_id="ymYKKdECjgb2" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_19" accessType="1" parent_id="ymYKKdECjgb2" writeOutText="false" classfield_id="ymYKKdECjgb2" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        ClassState.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:12&amp;#010;The original location of this file is Settings&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="8g4J71BtjU6x" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="8g4J71BtjU6x" indentLevel="1" text="public bool showVisibility;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="8g4J71BtjU6x" writeOutText="false" classfield_id="8g4J71BtjU6x" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="8g4J71BtjU6x" writeOutText="false" classfield_id="8g4J71BtjU6x" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="RCC67Cj9TjeY" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="RCC67Cj9TjeY" indentLevel="1" text="public bool showAtts;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_2" accessType="0" parent_id="RCC67Cj9TjeY" writeOutText="false" classfield_id="RCC67Cj9TjeY" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_3" accessType="1" parent_id="RCC67Cj9TjeY" writeOutText="false" classfield_id="RCC67Cj9TjeY" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="0DHlZYzfD3xK" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="0DHlZYzfD3xK" indentLevel="1" text="public bool showOps;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_4" accessType="0" parent_id="0DHlZYzfD3xK" writeOutText="false" classfield_id="0DHlZYzfD3xK" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_5" accessType="1" parent_id="0DHlZYzfD3xK" writeOutText="false" classfield_id="0DHlZYzfD3xK" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="48BlcIg3Us7c" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="48BlcIg3Us7c" indentLevel="1" text="public bool showStereoType;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_6" accessType="0" parent_id="48BlcIg3Us7c" writeOutText="false" classfield_id="48BlcIg3Us7c" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_7" accessType="1" parent_id="48BlcIg3Us7c" writeOutText="false" classfield_id="48BlcIg3Us7c" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="3rjUaL0YZGH6" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="3rjUaL0YZGH6" indentLevel="1" text="public bool showAttSig;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_8" accessType="0" parent_id="3rjUaL0YZGH6" writeOutText="false" classfield_id="3rjUaL0YZGH6" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_9" accessType="1" parent_id="3rjUaL0YZGH6" writeOutText="false" classfield_id="3rjUaL0YZGH6" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="oGjzHgJLmV4O" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="oGjzHgJLmV4O" indentLevel="1" text="public bool showOpSig;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_10" accessType="0" parent_id="oGjzHgJLmV4O" writeOutText="false" classfield_id="oGjzHgJLmV4O" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_11" accessType="1" parent_id="oGjzHgJLmV4O" writeOutText="false" classfield_id="oGjzHgJLmV4O" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="nlPHbXrcOY7w" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="nlPHbXrcOY7w" indentLevel="1" text="public bool showPackage;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_12" accessType="0" parent_id="nlPHbXrcOY7w" writeOutText="false" classfield_id="nlPHbXrcOY7w" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_13" accessType="1" parent_id="nlPHbXrcOY7w" writeOutText="false" classfield_id="nlPHbXrcOY7w" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="u5SRLjV8xE7E" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="u5SRLjV8xE7E" indentLevel="1" text="public bool showAttribAssocs;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_14" accessType="0" parent_id="u5SRLjV8xE7E" writeOutText="false" classfield_id="u5SRLjV8xE7E" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_15" accessType="1" parent_id="u5SRLjV8xE7E" writeOutText="false" classfield_id="u5SRLjV8xE7E" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="vRXhub4hMTww" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="vRXhub4hMTww" indentLevel="1" text="public Uml::Visibility defaultAttributeScope;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_16" accessType="0" parent_id="vRXhub4hMTww" writeOutText="false" classfield_id="vRXhub4hMTww" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_17" accessType="1" parent_id="vRXhub4hMTww" writeOutText="false" classfield_id="vRXhub4hMTww" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="ymYKKdECjgb2" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="ymYKKdECjgb2" indentLevel="1" text="public Uml::Visibility defaultOperationScope;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_18" accessType="0" parent_id="ymYKKdECjgb2" writeOutText="false" classfield_id="ymYKKdECjgb2" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_19" accessType="1" parent_id="ymYKKdECjgb2" writeOutText="false" classfield_id="ymYKKdECjgb2" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="CBRlk9bhdUfX" fileExt=".cpp" parent_class="N68ILGWEf1tX" id="N68ILGWEf1tX" fileName="CodeGenerationState" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;codegenerationstate.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="dvCxN8tLsQeB" writeOutText="false" classfield_id="dvCxN8tLsQeB" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="dvCxN8tLsQeB" writeOutText="false" classfield_id="dvCxN8tLsQeB" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_2" accessType="0" parent_id="aB4SbibcaxL7" writeOutText="false" classfield_id="aB4SbibcaxL7" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_3" accessType="1" parent_id="aB4SbibcaxL7" writeOutText="false" classfield_id="aB4SbibcaxL7" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_4" accessType="0" parent_id="u62xxFK5wsnf" writeOutText="false" classfield_id="u62xxFK5wsnf" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_5" accessType="1" parent_id="u62xxFK5wsnf" writeOutText="false" classfield_id="u62xxFK5wsnf" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_6" accessType="0" parent_id="I3zeUHO4SQV1" writeOutText="false" classfield_id="I3zeUHO4SQV1" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_7" accessType="1" parent_id="I3zeUHO4SQV1" writeOutText="false" classfield_id="I3zeUHO4SQV1" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_8" accessType="0" parent_id="86bh3wox0qty" writeOutText="false" classfield_id="86bh3wox0qty" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_9" accessType="1" parent_id="86bh3wox0qty" writeOutText="false" classfield_id="86bh3wox0qty" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_10" accessType="0" parent_id="3B1y1mbKpbyK" writeOutText="false" classfield_id="3B1y1mbKpbyK" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_11" accessType="1" parent_id="3B1y1mbKpbyK" writeOutText="false" classfield_id="3B1y1mbKpbyK" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_12" accessType="0" parent_id="lLtl9khDtg9u" writeOutText="false" classfield_id="lLtl9khDtg9u" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_13" accessType="1" parent_id="lLtl9khDtg9u" writeOutText="false" classfield_id="lLtl9khDtg9u" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_14" accessType="0" parent_id="TkCGL8aBTvRC" writeOutText="false" classfield_id="TkCGL8aBTvRC" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_15" accessType="1" parent_id="TkCGL8aBTvRC" writeOutText="false" classfield_id="TkCGL8aBTvRC" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_16" accessType="0" parent_id="ki1eXaaItR32" writeOutText="false" classfield_id="ki1eXaaItR32" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_17" accessType="1" parent_id="ki1eXaaItR32" writeOutText="false" classfield_id="ki1eXaaItR32" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_18" accessType="0" parent_id="HfaiY1uJiuvF" writeOutText="false" classfield_id="HfaiY1uJiuvF" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_19" accessType="1" parent_id="HfaiY1uJiuvF" writeOutText="false" classfield_id="HfaiY1uJiuvF" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_20" accessType="0" parent_id="v2T09aPQEz7m" writeOutText="false" classfield_id="v2T09aPQEz7m" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_21" accessType="1" parent_id="v2T09aPQEz7m" writeOutText="false" classfield_id="v2T09aPQEz7m" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_22" accessType="0" parent_id="x2MCbSpUSHTb" writeOutText="false" classfield_id="x2MCbSpUSHTb" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_23" accessType="1" parent_id="x2MCbSpUSHTb" writeOutText="false" classfield_id="x2MCbSpUSHTb" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_24" accessType="0" parent_id="ps13p8on8rU1" writeOutText="false" classfield_id="ps13p8on8rU1" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_25" accessType="1" parent_id="ps13p8on8rU1" writeOutText="false" classfield_id="ps13p8on8rU1" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_26" accessType="0" parent_id="Kj9m0cNpSNrH" writeOutText="false" classfield_id="Kj9m0cNpSNrH" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_27" accessType="1" parent_id="Kj9m0cNpSNrH" writeOutText="false" classfield_id="Kj9m0cNpSNrH" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_28" accessType="0" parent_id="iCVxQqfGerTG" writeOutText="false" classfield_id="iCVxQqfGerTG" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_29" accessType="1" parent_id="iCVxQqfGerTG" writeOutText="false" classfield_id="iCVxQqfGerTG" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_30" accessType="0" parent_id="MhbPtKRbCxhD" writeOutText="false" classfield_id="MhbPtKRbCxhD" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_31" accessType="1" parent_id="MhbPtKRbCxhD" writeOutText="false" classfield_id="MhbPtKRbCxhD" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_32" accessType="0" parent_id="OxiD2EAkOfhm" writeOutText="false" classfield_id="OxiD2EAkOfhm" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_33" accessType="1" parent_id="OxiD2EAkOfhm" writeOutText="false" classfield_id="OxiD2EAkOfhm" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_34" accessType="0" parent_id="TK27BUOWBxv4" writeOutText="false" classfield_id="TK27BUOWBxv4" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_35" accessType="1" parent_id="TK27BUOWBxv4" writeOutText="false" classfield_id="TK27BUOWBxv4" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        CodeGenerationState.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:12&amp;#010;The original location of this file is Settings&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="dvCxN8tLsQeB" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="dvCxN8tLsQeB" indentLevel="1" text="public bool autoGenEmptyConstructors;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="dvCxN8tLsQeB" writeOutText="false" classfield_id="dvCxN8tLsQeB" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="dvCxN8tLsQeB" writeOutText="false" classfield_id="dvCxN8tLsQeB" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="aB4SbibcaxL7" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="aB4SbibcaxL7" indentLevel="1" text="public CodeGenerationPolicy::CommentStyle commentStyle;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_2" accessType="0" parent_id="aB4SbibcaxL7" writeOutText="false" classfield_id="aB4SbibcaxL7" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_3" accessType="1" parent_id="aB4SbibcaxL7" writeOutText="false" classfield_id="aB4SbibcaxL7" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="u62xxFK5wsnf" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="u62xxFK5wsnf" indentLevel="1" text="public Uml::Visibility::Value defaultAssocFieldScope;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_4" accessType="0" parent_id="u62xxFK5wsnf" writeOutText="false" classfield_id="u62xxFK5wsnf" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_5" accessType="1" parent_id="u62xxFK5wsnf" writeOutText="false" classfield_id="u62xxFK5wsnf" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="I3zeUHO4SQV1" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="I3zeUHO4SQV1" indentLevel="1" text="public Uml::Visibility::Value defaultAttributeAccessorScope;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_6" accessType="0" parent_id="I3zeUHO4SQV1" writeOutText="false" classfield_id="I3zeUHO4SQV1" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_7" accessType="1" parent_id="I3zeUHO4SQV1" writeOutText="false" classfield_id="I3zeUHO4SQV1" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="86bh3wox0qty" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="86bh3wox0qty" indentLevel="1" text="public bool forceDoc;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_8" accessType="0" parent_id="86bh3wox0qty" writeOutText="false" classfield_id="86bh3wox0qty" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_9" accessType="1" parent_id="86bh3wox0qty" writeOutText="false" classfield_id="86bh3wox0qty" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="3B1y1mbKpbyK" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="3B1y1mbKpbyK" indentLevel="1" text="public bool forceSections;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_10" accessType="0" parent_id="3B1y1mbKpbyK" writeOutText="false" classfield_id="3B1y1mbKpbyK" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_11" accessType="1" parent_id="3B1y1mbKpbyK" writeOutText="false" classfield_id="3B1y1mbKpbyK" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="lLtl9khDtg9u" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="lLtl9khDtg9u" indentLevel="1" text="public QDir headingsDirectory;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_12" accessType="0" parent_id="lLtl9khDtg9u" writeOutText="false" classfield_id="lLtl9khDtg9u" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_13" accessType="1" parent_id="lLtl9khDtg9u" writeOutText="false" classfield_id="lLtl9khDtg9u" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="TkCGL8aBTvRC" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="TkCGL8aBTvRC" indentLevel="1" text="public bool includeHeadings;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_14" accessType="0" parent_id="TkCGL8aBTvRC" writeOutText="false" classfield_id="TkCGL8aBTvRC" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_15" accessType="1" parent_id="TkCGL8aBTvRC" writeOutText="false" classfield_id="TkCGL8aBTvRC" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="ki1eXaaItR32" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="ki1eXaaItR32" indentLevel="1" text="public int indentationAmount;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_16" accessType="0" parent_id="ki1eXaaItR32" writeOutText="false" classfield_id="ki1eXaaItR32" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_17" accessType="1" parent_id="ki1eXaaItR32" writeOutText="false" classfield_id="ki1eXaaItR32" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="HfaiY1uJiuvF" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="HfaiY1uJiuvF" indentLevel="1" text="public CodeGenerationPolicy::IndentationType indentationType;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_18" accessType="0" parent_id="HfaiY1uJiuvF" writeOutText="false" classfield_id="HfaiY1uJiuvF" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_19" accessType="1" parent_id="HfaiY1uJiuvF" writeOutText="false" classfield_id="HfaiY1uJiuvF" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="v2T09aPQEz7m" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="v2T09aPQEz7m" indentLevel="1" text="public CodeGenerationPolicy::NewLineType lineEndingType;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_20" accessType="0" parent_id="v2T09aPQEz7m" writeOutText="false" classfield_id="v2T09aPQEz7m" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_21" accessType="1" parent_id="v2T09aPQEz7m" writeOutText="false" classfield_id="v2T09aPQEz7m" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="x2MCbSpUSHTb" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="x2MCbSpUSHTb" indentLevel="1" text="public CodeGenerationPolicy::ModifyNamePolicy modnamePolicy;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_22" accessType="0" parent_id="x2MCbSpUSHTb" writeOutText="false" classfield_id="x2MCbSpUSHTb" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_23" accessType="1" parent_id="x2MCbSpUSHTb" writeOutText="false" classfield_id="x2MCbSpUSHTb" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="ps13p8on8rU1" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="ps13p8on8rU1" indentLevel="1" text="public QDir outputDirectory;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_24" accessType="0" parent_id="ps13p8on8rU1" writeOutText="false" classfield_id="ps13p8on8rU1" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_25" accessType="1" parent_id="ps13p8on8rU1" writeOutText="false" classfield_id="ps13p8on8rU1" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="Kj9m0cNpSNrH" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="Kj9m0cNpSNrH" indentLevel="1" text="public CodeGenerationPolicy::OverwritePolicy overwritePolicy;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_26" accessType="0" parent_id="Kj9m0cNpSNrH" writeOutText="false" classfield_id="Kj9m0cNpSNrH" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_27" accessType="1" parent_id="Kj9m0cNpSNrH" writeOutText="false" classfield_id="Kj9m0cNpSNrH" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="iCVxQqfGerTG" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="iCVxQqfGerTG" indentLevel="1" text="public CPPCodeGenerationState cppCodeGenerationState;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_28" accessType="0" parent_id="iCVxQqfGerTG" writeOutText="false" classfield_id="iCVxQqfGerTG" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_29" accessType="1" parent_id="iCVxQqfGerTG" writeOutText="false" classfield_id="iCVxQqfGerTG" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="MhbPtKRbCxhD" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="MhbPtKRbCxhD" indentLevel="1" text="public DCodeGenerationState dCodeGenerationState;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_30" accessType="0" parent_id="MhbPtKRbCxhD" writeOutText="false" classfield_id="MhbPtKRbCxhD" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_31" accessType="1" parent_id="MhbPtKRbCxhD" writeOutText="false" classfield_id="MhbPtKRbCxhD" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="OxiD2EAkOfhm" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="OxiD2EAkOfhm" indentLevel="1" text="public JavaCodeGenerationState javaCodeGenerationState;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_32" accessType="0" parent_id="OxiD2EAkOfhm" writeOutText="false" classfield_id="OxiD2EAkOfhm" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_33" accessType="1" parent_id="OxiD2EAkOfhm" writeOutText="false" classfield_id="OxiD2EAkOfhm" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="TK27BUOWBxv4" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="TK27BUOWBxv4" indentLevel="1" text="public RubyCodeGenerationState rubyCodeGenerationState;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_34" accessType="0" parent_id="TK27BUOWBxv4" writeOutText="false" classfield_id="TK27BUOWBxv4" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_35" accessType="1" parent_id="TK27BUOWBxv4" writeOutText="false" classfield_id="TK27BUOWBxv4" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="3sNkZxlu3tDM" id="3sNkZxlu3tDM" fileName="CodeGenerationPolicy" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        CodeGenerationPolicy.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:16&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="3sNkZxlu3tDM" fileExt=".cpp" parent_class="7hakjSHMNTJk" id="7hakjSHMNTJk" fileName="CommentStyle" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        CommentStyle.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:17&amp;#010;The original location of this file is CodeGenerationPolicy&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="sKMIlpHruqYx" id="sKMIlpHruqYx" fileName="QDir" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QDir.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:17&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="3sNkZxlu3tDM" fileExt=".cpp" parent_class="BjD4PMwq797Q" id="BjD4PMwq797Q" fileName="IndentationType" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        IndentationType.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:17&amp;#010;The original location of this file is CodeGenerationPolicy&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="3sNkZxlu3tDM" fileExt=".cpp" parent_class="UTXLuYN3FZ5d" id="UTXLuYN3FZ5d" fileName="NewLineType" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        NewLineType.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:17&amp;#010;The original location of this file is CodeGenerationPolicy&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="3sNkZxlu3tDM" fileExt=".cpp" parent_class="0z3gtxvNQQgL" id="0z3gtxvNQQgL" fileName="ModifyNamePolicy" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        ModifyNamePolicy.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:17&amp;#010;The original location of this file is CodeGenerationPolicy&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="3sNkZxlu3tDM" fileExt=".cpp" parent_class="oNNFo1Yj3uve" id="oNNFo1Yj3uve" fileName="OverwritePolicy" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        OverwritePolicy.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:17&amp;#010;The original location of this file is CodeGenerationPolicy&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="N68ILGWEf1tX" fileExt=".cpp" parent_class="Tf4ZWYZJuuWi" id="Tf4ZWYZJuuWi" fileName="CPPCodeGenerationState" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;cppcodegenerationstate.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="v4PzwIbF1k1z" writeOutText="false" classfield_id="v4PzwIbF1k1z" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="v4PzwIbF1k1z" writeOutText="false" classfield_id="v4PzwIbF1k1z" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_2" accessType="0" parent_id="KNpkkg1BJ4lp" writeOutText="false" classfield_id="KNpkkg1BJ4lp" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_3" accessType="1" parent_id="KNpkkg1BJ4lp" writeOutText="false" classfield_id="KNpkkg1BJ4lp" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_4" accessType="0" parent_id="aK6UCcA7gZ6b" writeOutText="false" classfield_id="aK6UCcA7gZ6b" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_5" accessType="1" parent_id="aK6UCcA7gZ6b" writeOutText="false" classfield_id="aK6UCcA7gZ6b" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_6" accessType="0" parent_id="siqrQprjCeRu" writeOutText="false" classfield_id="siqrQprjCeRu" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_7" accessType="1" parent_id="siqrQprjCeRu" writeOutText="false" classfield_id="siqrQprjCeRu" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_8" accessType="0" parent_id="IR6bVpO37VYJ" writeOutText="false" classfield_id="IR6bVpO37VYJ" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_9" accessType="1" parent_id="IR6bVpO37VYJ" writeOutText="false" classfield_id="IR6bVpO37VYJ" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_10" accessType="0" parent_id="7gQmGVL6BBvb" writeOutText="false" classfield_id="7gQmGVL6BBvb" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_11" accessType="1" parent_id="7gQmGVL6BBvb" writeOutText="false" classfield_id="7gQmGVL6BBvb" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_12" accessType="0" parent_id="ymI9Ok3eB7Fe" writeOutText="false" classfield_id="ymI9Ok3eB7Fe" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_13" accessType="1" parent_id="ymI9Ok3eB7Fe" writeOutText="false" classfield_id="ymI9Ok3eB7Fe" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_14" accessType="0" parent_id="wch37FMCwlwA" writeOutText="false" classfield_id="wch37FMCwlwA" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_15" accessType="1" parent_id="wch37FMCwlwA" writeOutText="false" classfield_id="wch37FMCwlwA" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_16" accessType="0" parent_id="GHERQ90PuJYG" writeOutText="false" classfield_id="GHERQ90PuJYG" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_17" accessType="1" parent_id="GHERQ90PuJYG" writeOutText="false" classfield_id="GHERQ90PuJYG" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_18" accessType="0" parent_id="3ZvCh8qdkXfr" writeOutText="false" classfield_id="3ZvCh8qdkXfr" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_19" accessType="1" parent_id="3ZvCh8qdkXfr" writeOutText="false" classfield_id="3ZvCh8qdkXfr" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_20" accessType="0" parent_id="l12fmyn0G1Rg" writeOutText="false" classfield_id="l12fmyn0G1Rg" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_21" accessType="1" parent_id="l12fmyn0G1Rg" writeOutText="false" classfield_id="l12fmyn0G1Rg" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_22" accessType="0" parent_id="8S30jbHkBCws" writeOutText="false" classfield_id="8S30jbHkBCws" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_23" accessType="1" parent_id="8S30jbHkBCws" writeOutText="false" classfield_id="8S30jbHkBCws" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        CPPCodeGenerationState.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:17&amp;#010;The original location of this file is CodeGenerationState&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="v4PzwIbF1k1z" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="v4PzwIbF1k1z" indentLevel="1" text="public bool autoGenAccessors;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="v4PzwIbF1k1z" writeOutText="false" classfield_id="v4PzwIbF1k1z" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="v4PzwIbF1k1z" writeOutText="false" classfield_id="v4PzwIbF1k1z" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="KNpkkg1BJ4lp" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="KNpkkg1BJ4lp" indentLevel="1" text="public bool inlineAccessors;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_2" accessType="0" parent_id="KNpkkg1BJ4lp" writeOutText="false" classfield_id="KNpkkg1BJ4lp" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_3" accessType="1" parent_id="KNpkkg1BJ4lp" writeOutText="false" classfield_id="KNpkkg1BJ4lp" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="aK6UCcA7gZ6b" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="aK6UCcA7gZ6b" indentLevel="1" text="public bool inlineOps;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_4" accessType="0" parent_id="aK6UCcA7gZ6b" writeOutText="false" classfield_id="aK6UCcA7gZ6b" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_5" accessType="1" parent_id="aK6UCcA7gZ6b" writeOutText="false" classfield_id="aK6UCcA7gZ6b" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="siqrQprjCeRu" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="siqrQprjCeRu" indentLevel="1" text="public bool packageIsNamespace;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_6" accessType="0" parent_id="siqrQprjCeRu" writeOutText="false" classfield_id="siqrQprjCeRu" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_7" accessType="1" parent_id="siqrQprjCeRu" writeOutText="false" classfield_id="siqrQprjCeRu" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="IR6bVpO37VYJ" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="IR6bVpO37VYJ" indentLevel="1" text="public bool publicAccessors;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_8" accessType="0" parent_id="IR6bVpO37VYJ" writeOutText="false" classfield_id="IR6bVpO37VYJ" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_9" accessType="1" parent_id="IR6bVpO37VYJ" writeOutText="false" classfield_id="IR6bVpO37VYJ" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="7gQmGVL6BBvb" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="7gQmGVL6BBvb" indentLevel="1" text="public QString stringClassName;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_10" accessType="0" parent_id="7gQmGVL6BBvb" writeOutText="false" classfield_id="7gQmGVL6BBvb" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_11" accessType="1" parent_id="7gQmGVL6BBvb" writeOutText="false" classfield_id="7gQmGVL6BBvb" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="ymI9Ok3eB7Fe" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="ymI9Ok3eB7Fe" indentLevel="1" text="public QString stringClassNameInclude;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_12" accessType="0" parent_id="ymI9Ok3eB7Fe" writeOutText="false" classfield_id="ymI9Ok3eB7Fe" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_13" accessType="1" parent_id="ymI9Ok3eB7Fe" writeOutText="false" classfield_id="ymI9Ok3eB7Fe" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="wch37FMCwlwA" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="wch37FMCwlwA" indentLevel="1" text="public bool stringIncludeIsGlobal;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_14" accessType="0" parent_id="wch37FMCwlwA" writeOutText="false" classfield_id="wch37FMCwlwA" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_15" accessType="1" parent_id="wch37FMCwlwA" writeOutText="false" classfield_id="wch37FMCwlwA" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="GHERQ90PuJYG" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="GHERQ90PuJYG" indentLevel="1" text="public QString vectorClassName;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_16" accessType="0" parent_id="GHERQ90PuJYG" writeOutText="false" classfield_id="GHERQ90PuJYG" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_17" accessType="1" parent_id="GHERQ90PuJYG" writeOutText="false" classfield_id="GHERQ90PuJYG" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="3ZvCh8qdkXfr" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="3ZvCh8qdkXfr" indentLevel="1" text="public QString vectorClassNameInclude;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_18" accessType="0" parent_id="3ZvCh8qdkXfr" writeOutText="false" classfield_id="3ZvCh8qdkXfr" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_19" accessType="1" parent_id="3ZvCh8qdkXfr" writeOutText="false" classfield_id="3ZvCh8qdkXfr" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="l12fmyn0G1Rg" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="l12fmyn0G1Rg" indentLevel="1" text="public bool vectorIncludeIsGlobal;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_20" accessType="0" parent_id="l12fmyn0G1Rg" writeOutText="false" classfield_id="l12fmyn0G1Rg" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_21" accessType="1" parent_id="l12fmyn0G1Rg" writeOutText="false" classfield_id="l12fmyn0G1Rg" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="8S30jbHkBCws" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="8S30jbHkBCws" indentLevel="1" text="public bool virtualDestructors;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_22" accessType="0" parent_id="8S30jbHkBCws" writeOutText="false" classfield_id="8S30jbHkBCws" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_23" accessType="1" parent_id="8S30jbHkBCws" writeOutText="false" classfield_id="8S30jbHkBCws" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="N68ILGWEf1tX" fileExt=".cpp" parent_class="ImT3H8s28uhs" id="ImT3H8s28uhs" fileName="DCodeGenerationState" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;dcodegenerationstate.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="rUt7TIlakpaT" writeOutText="false" classfield_id="rUt7TIlakpaT" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="rUt7TIlakpaT" writeOutText="false" classfield_id="rUt7TIlakpaT" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_2" accessType="0" parent_id="OrDZ17PKrrL9" writeOutText="false" classfield_id="OrDZ17PKrrL9" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_3" accessType="1" parent_id="OrDZ17PKrrL9" writeOutText="false" classfield_id="OrDZ17PKrrL9" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_4" accessType="0" parent_id="xD936pwxHn4l" writeOutText="false" classfield_id="xD936pwxHn4l" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_5" accessType="1" parent_id="xD936pwxHn4l" writeOutText="false" classfield_id="xD936pwxHn4l" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        DCodeGenerationState.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:18&amp;#010;The original location of this file is CodeGenerationState&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="rUt7TIlakpaT" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="rUt7TIlakpaT" indentLevel="1" text="public bool autoGenerateAttributeAccessors;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="rUt7TIlakpaT" writeOutText="false" classfield_id="rUt7TIlakpaT" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="rUt7TIlakpaT" writeOutText="false" classfield_id="rUt7TIlakpaT" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="OrDZ17PKrrL9" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="OrDZ17PKrrL9" indentLevel="1" text="public bool autoGenerateAssocAccessors;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_2" accessType="0" parent_id="OrDZ17PKrrL9" writeOutText="false" classfield_id="OrDZ17PKrrL9" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_3" accessType="1" parent_id="OrDZ17PKrrL9" writeOutText="false" classfield_id="OrDZ17PKrrL9" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="xD936pwxHn4l" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="xD936pwxHn4l" indentLevel="1" text="public bool buildANTDocument;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_4" accessType="0" parent_id="xD936pwxHn4l" writeOutText="false" classfield_id="xD936pwxHn4l" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_5" accessType="1" parent_id="xD936pwxHn4l" writeOutText="false" classfield_id="xD936pwxHn4l" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="N68ILGWEf1tX" fileExt=".cpp" parent_class="5nLoctFzjRYi" id="5nLoctFzjRYi" fileName="JavaCodeGenerationState" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;javacodegenerationstate.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="Yw2QlLXiZgmf" writeOutText="false" classfield_id="Yw2QlLXiZgmf" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="Yw2QlLXiZgmf" writeOutText="false" classfield_id="Yw2QlLXiZgmf" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_2" accessType="0" parent_id="VganTcWWPpK0" writeOutText="false" classfield_id="VganTcWWPpK0" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_3" accessType="1" parent_id="VganTcWWPpK0" writeOutText="false" classfield_id="VganTcWWPpK0" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_4" accessType="0" parent_id="iYzRzVAVPAvA" writeOutText="false" classfield_id="iYzRzVAVPAvA" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_5" accessType="1" parent_id="iYzRzVAVPAvA" writeOutText="false" classfield_id="iYzRzVAVPAvA" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        JavaCodeGenerationState.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:18&amp;#010;The original location of this file is CodeGenerationState&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="Yw2QlLXiZgmf" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="Yw2QlLXiZgmf" indentLevel="1" text="public bool autoGenerateAttributeAccessors;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="Yw2QlLXiZgmf" writeOutText="false" classfield_id="Yw2QlLXiZgmf" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="Yw2QlLXiZgmf" writeOutText="false" classfield_id="Yw2QlLXiZgmf" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="VganTcWWPpK0" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="VganTcWWPpK0" indentLevel="1" text="public bool autoGenerateAssocAccessors;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_2" accessType="0" parent_id="VganTcWWPpK0" writeOutText="false" classfield_id="VganTcWWPpK0" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_3" accessType="1" parent_id="VganTcWWPpK0" writeOutText="false" classfield_id="VganTcWWPpK0" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="iYzRzVAVPAvA" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="iYzRzVAVPAvA" indentLevel="1" text="public bool buildANTDocument;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_4" accessType="0" parent_id="iYzRzVAVPAvA" writeOutText="false" classfield_id="iYzRzVAVPAvA" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_5" accessType="1" parent_id="iYzRzVAVPAvA" writeOutText="false" classfield_id="iYzRzVAVPAvA" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="N68ILGWEf1tX" fileExt=".cpp" parent_class="UQr37bgaHGLi" id="UQr37bgaHGLi" fileName="RubyCodeGenerationState" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;rubycodegenerationstate.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="qpEFeXFL3Ck2" writeOutText="false" classfield_id="qpEFeXFL3Ck2" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="qpEFeXFL3Ck2" writeOutText="false" classfield_id="qpEFeXFL3Ck2" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_2" accessType="0" parent_id="isX71RGVr7Yw" writeOutText="false" classfield_id="isX71RGVr7Yw" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_3" accessType="1" parent_id="isX71RGVr7Yw" writeOutText="false" classfield_id="isX71RGVr7Yw" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        RubyCodeGenerationState.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:18&amp;#010;The original location of this file is CodeGenerationState&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="qpEFeXFL3Ck2" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="qpEFeXFL3Ck2" indentLevel="1" text="public bool autoGenerateAttributeAccessors;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="qpEFeXFL3Ck2" writeOutText="false" classfield_id="qpEFeXFL3Ck2" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="qpEFeXFL3Ck2" writeOutText="false" classfield_id="qpEFeXFL3Ck2" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="isX71RGVr7Yw" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="isX71RGVr7Yw" indentLevel="1" text="public bool autoGenerateAssocAccessors;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_2" accessType="0" parent_id="isX71RGVr7Yw" writeOutText="false" classfield_id="isX71RGVr7Yw" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_3" accessType="1" parent_id="isX71RGVr7Yw" writeOutText="false" classfield_id="isX71RGVr7Yw" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="CBRlk9bhdUfX" fileExt=".cpp" parent_class="HLeUIJfgEMrG" id="HLeUIJfgEMrG" fileName="OptionState" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;optionstate.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="Y1yvefh8ziF8" writeOutText="false" classfield_id="Y1yvefh8ziF8" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="Y1yvefh8ziF8" writeOutText="false" classfield_id="Y1yvefh8ziF8" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_2" accessType="0" parent_id="CbeNZYPqt1IB" writeOutText="false" classfield_id="CbeNZYPqt1IB" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_3" accessType="1" parent_id="CbeNZYPqt1IB" writeOutText="false" classfield_id="CbeNZYPqt1IB" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_4" accessType="0" parent_id="KwpYGgmogkjK" writeOutText="false" classfield_id="KwpYGgmogkjK" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_5" accessType="1" parent_id="KwpYGgmogkjK" writeOutText="false" classfield_id="KwpYGgmogkjK" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_6" accessType="0" parent_id="PRSM7gTJH7eo" writeOutText="false" classfield_id="PRSM7gTJH7eo" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_7" accessType="1" parent_id="PRSM7gTJH7eo" writeOutText="false" classfield_id="PRSM7gTJH7eo" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_8" accessType="0" parent_id="d1dW3tfNpSu5" writeOutText="false" classfield_id="d1dW3tfNpSu5" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_9" accessType="1" parent_id="d1dW3tfNpSu5" writeOutText="false" classfield_id="d1dW3tfNpSu5" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        OptionState.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:18&amp;#010;The original location of this file is Settings&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="Y1yvefh8ziF8" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="Y1yvefh8ziF8" indentLevel="1" text="public Settings::GeneralState generalState;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="Y1yvefh8ziF8" writeOutText="false" classfield_id="Y1yvefh8ziF8" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="Y1yvefh8ziF8" writeOutText="false" classfield_id="Y1yvefh8ziF8" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="CbeNZYPqt1IB" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="CbeNZYPqt1IB" indentLevel="1" text="public Settings::UIState uiState;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_2" accessType="0" parent_id="CbeNZYPqt1IB" writeOutText="false" classfield_id="CbeNZYPqt1IB" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_3" accessType="1" parent_id="CbeNZYPqt1IB" writeOutText="false" classfield_id="CbeNZYPqt1IB" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="KwpYGgmogkjK" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="KwpYGgmogkjK" indentLevel="1" text="public Settings::ClassState classState;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_4" accessType="0" parent_id="KwpYGgmogkjK" writeOutText="false" classfield_id="KwpYGgmogkjK" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_5" accessType="1" parent_id="KwpYGgmogkjK" writeOutText="false" classfield_id="KwpYGgmogkjK" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="PRSM7gTJH7eo" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="PRSM7gTJH7eo" indentLevel="1" text="public Settings::CodeViewerState codeViewerState;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_6" accessType="0" parent_id="PRSM7gTJH7eo" writeOutText="false" classfield_id="PRSM7gTJH7eo" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_7" accessType="1" parent_id="PRSM7gTJH7eo" writeOutText="false" classfield_id="PRSM7gTJH7eo" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="d1dW3tfNpSu5" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="d1dW3tfNpSu5" indentLevel="1" text="public Settings::CodeGenerationState codeGenerationState;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_8" accessType="0" parent_id="d1dW3tfNpSu5" writeOutText="false" classfield_id="d1dW3tfNpSu5" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_9" accessType="1" parent_id="d1dW3tfNpSu5" writeOutText="false" classfield_id="d1dW3tfNpSu5" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="9gsnRb7o0Y97" id="9gsnRb7o0Y97" fileName="UMLView" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLView.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:19&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="EcOTh0GL2tr5" id="EcOTh0GL2tr5" fileName="UMLObject" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;umlobject.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks>
        <codeoperation tag="operation_fixZTztXAoe1" parent_id="fixZTztXAoe1" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_zmg4JEsZdgiz" parent_id="zmg4JEsZdgiz" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Creates a UMLObject.&amp;#010;&amp;#010;@param   parent   The parent of the object." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_aUhbBgDASuCl" parent_id="aUhbBgDASuCl" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Creates a UMLObject with a given name and unique ID.&amp;#010;&amp;#010;@param   name   The name of the object.&amp;#010;@param   id     The unique ID of the object." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_qNl8vzvXPnhk" parent_id="qNl8vzvXPnhk" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Standard deconstructor." />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation tag="operation_arr3j3mp63Yo" parent_id="arr3j3mp63Yo" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Overloaded '==' operator" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_LaejIZp4Flsy" parent_id="LaejIZp4Flsy" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Copy the internal presentation of this object into the new&amp;#010;object." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_HXagLFOeq3N6" parent_id="HXagLFOeq3N6" writeOutText="false" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Make a clone of this object.&amp;#010;To be implemented by inheriting classes." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_FYkNpMO6twkE" parent_id="FYkNpMO6twkE" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns the type of the object.&amp;#010;&amp;#010;@return  Returns the type of the object." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_FJNhmMt2ubNk" parent_id="FJNhmMt2ubNk" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Set the type of the object.&amp;#010;&amp;#010;@param ot The Uml::Object_Type to set." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_6wYSA6jNO43A" parent_id="6wYSA6jNO43A" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns the ID of the object.&amp;#010;&amp;#010;@return  Returns the ID of the object." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_QIo6AewEaTei" parent_id="QIo6AewEaTei" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets the documentation for the object.&amp;#010;&amp;#010;@param d The documentation for the object." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_oEx65B4WRscZ" parent_id="oEx65B4WRscZ" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns the documentation for the object.&amp;#010;&amp;#010;@return  Returns the documentation for the object." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_zX11nAWbMTgR" parent_id="zX11nAWbMTgR" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns the visibility of the object.&amp;#010;&amp;#010;@return  Returns the visibility of the object." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_ruUblvmiSlhG" parent_id="ruUblvmiSlhG" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets the visibility of the object.&amp;#010;&amp;#010;@param s   The visibility of the object." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_63p5Sv4KoYtX" parent_id="63p5Sv4KoYtX" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Method used by setVisibility: its called by  cmdSetVisibility, Don't use it!" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_RABdiYOmbEr3" parent_id="RABdiYOmbEr3" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets the classes stereotype name.&amp;#010;Internally uses setUMLStereotype().&amp;#010;&amp;#010;@param _name     Sets the classes stereotype name." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_dxWkt2aKBjvt" parent_id="dxWkt2aKBjvt" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Method used by setStereotype: its called by  cmdSetStereotype, Don't use it!" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_UznJfZZIW52N" parent_id="UznJfZZIW52N" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets the class' UMLStereotype. Adjusts the reference counts&amp;#010;at the previously set stereotype and at the new stereotype.&amp;#010;If the previously set UMLStereotype's reference count drops&amp;#010;to zero then the UMLStereotype is removed at the UMLDoc and&amp;#010;it is then physically deleted.&amp;#010;&amp;#010;@param s Sets the classes UMLStereotype." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_usVPwWm05SFN" parent_id="usVPwWm05SFN" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets the classes Package.&amp;#010;DEPRECATED - use SetUMLPackage instead.&amp;#010;&amp;#010;@param _name   The classes Package name." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_wf8T0QgsICFC" parent_id="wf8T0QgsICFC" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets the UMLPackage in which this class is located.&amp;#010;&amp;#010;@param pPkg   Pointer to the class' UMLPackage." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_bBjsLz211DkT" parent_id="bBjsLz211DkT" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns the classes UMLStereotype object.&amp;#010;&amp;#010;@return   Returns the classes UMLStereotype object." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_0jCzuuQVjMkX" parent_id="0jCzuuQVjMkX" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns the classes stereotype name.&amp;#010;Returns an empty string if no stereotype object is set.&amp;#010;&amp;#010;@param includeAdornments Include surrounding angled brackets&amp;#010;                         &quot;«&quot; and &quot;»&quot;.&amp;#010;@return  Returns the classes stereotype name." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_9ebs1MNj91XB" parent_id="9ebs1MNj91XB" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Return the package(s) in which this UMLObject is contained&amp;#010;as a text.&amp;#010;&amp;#010;@param separator Separator string for joining together the&amp;#010;                 individual package prefixes (optional.)&amp;#010;                 If no separator is given then the separator&amp;#010;                 of the currently selected language is used.&amp;#010;@param includeRoot  Whether to prefix the root folder name.&amp;#010;                    Default: false.&amp;#010;@return  The UMLObject's enclosing package(s) as a text." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_igcetErbpJXf" parent_id="igcetErbpJXf" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Return a list of the packages in which this class is embedded.&amp;#010;The outermost package is first in the list.&amp;#010;&amp;#010;@param includeRoot  Whether to prefix the root folder name.&amp;#010;                    Default: false.&amp;#010;@return  UMLPackageList of the containing packages." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_sg3ixZNu90AJ" parent_id="sg3ixZNu90AJ" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns the UMLPackage that this class is located in.&amp;#010;&amp;#010;@return  Pointer to the UMLPackage of this class." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_OfqzKgRCKUuI" parent_id="OfqzKgRCKUuI" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Assigns a new Id to the object" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_YUliwNNL0BKK" parent_id="YUliwNNL0BKK" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns a copy of m_Name" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_tpTuh6FGY0yV" parent_id="tpTuh6FGY0yV" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Set the UMLObject's name" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_VqJ8QhyHWPCD" parent_id="VqJ8QhyHWPCD" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Method used by setName: its called by  cmdSetName, Don't use it!" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_UdRNlrQEhjK5" parent_id="UdRNlrQEhjK5" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns the fully qualified name, i.e. all package prefixes and then m_Name.&amp;#010;&amp;#010;@param separator  The separator string to use (optional.)&amp;#010;                  If not given then the separator is chosen according&amp;#010;                  to the currently selected active programming language&amp;#010;                  of import and code generation.&amp;#010;@param includeRoot  Whether to prefix the root folder name to the FQN.&amp;#010;                    See UMLDoc::getRootFolder(). Default: false.&amp;#010;@return  The fully qualified name of this UMLObject." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_fN5drHykz3H6" parent_id="fN5drHykz3H6" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns the abstract state of the object." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_wURBaj7F4Asv" parent_id="wURBaj7F4Asv" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets the paste state of the object." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_i50e1idxC26n" parent_id="i50e1idxC26n" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets the abstract state of the object." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_Cea3nOxWUw8V" parent_id="Cea3nOxWUw8V" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="This method is called if you wish to see the properties of a&amp;#010;UMLObject.  A dialog box will be displayed from which you&amp;#010;can change the object's properties.&amp;#010;&amp;#010;@param page    The page to show.&amp;#010;@param assoc   Whether to show association page.&amp;#010;@return        True if we modified the object." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_XO2CyMERP1aj" parent_id="XO2CyMERP1aj" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Resolve referenced objects (if any.)&amp;#010;Needs to be called after all UML objects are loaded from file.&amp;#010;This needs to be done after all model objects are loaded because&amp;#010;some of the xmi.id's might be forward references, i.e. they may&amp;#010;identify model objects which were not yet loaded at the point of&amp;#010;reference.&amp;#010;The default implementation attempts resolution of the m_SecondaryId.&amp;#010;&amp;#010;@return   True for success." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_j0hQ1WvWvwit" parent_id="j0hQ1WvWvwit" writeOutText="false" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="This method saves the XMI attributes of each specific model class.&amp;#010;It needs to be implemented by each child class.&amp;#010;For creating the QDomElement and saving the common XMI parts,&amp;#010;it can use the save() method." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_a0pVwVNCQgpJ" parent_id="a0pVwVNCQgpJ" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="This method loads the generic parts of the XMI common to most model&amp;#010;classes.  It is not usually reimplemented by child classes.&amp;#010;Instead, it invokes the load() method which implements the loading&amp;#010;of the specifics of each child class.&amp;#010;&amp;#010;@param element   The QDomElement from which to load." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_lgW9MMQuVYaI" parent_id="lgW9MMQuVYaI" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Analyzes the given QDomElement for a reference to a stereotype.&amp;#010;&amp;#010;@param element   QDomElement to analyze.&amp;#010;@return          True if a stereotype reference was found, else false." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_aIg6qGOpHpVk" parent_id="aIg6qGOpHpVk" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns true if this UMLObject has classifier scope,&amp;#010;otherwise false (the default)." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_alh11ZnapTgf" parent_id="alh11ZnapTgf" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets the value for m_bStatic." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_xlqwWpv4Yd5a" parent_id="xlqwWpv4Yd5a" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="This should be reimplemented by subclasses if they wish to&amp;#010;accept certain types of associations. Note that this only&amp;#010;tells if this UMLObject can accept the association&amp;#010;type. When creating an association another check is made to&amp;#010;see if the association is valid. For example a UMLClass&amp;#010;(UMLClassifier) can accept generalizations and should&amp;#010;return true. If while creating a generalization the&amp;#010;superclass is already subclassed from this, the association&amp;#010;is not valid and will not be created.  The default accepts&amp;#010;nothing (returns false)" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_hALFlPnvGvsa" parent_id="hALFlPnvGvsa" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Return secondary ID. Required by resolveRef()." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_eLtQD8fuGz71" parent_id="eLtQD8fuGz71" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Set the secondary ID.&amp;#010;Currently only required by petalTree2Uml(); all other setting of the&amp;#010;m_SecondaryID is internal to the UMLObject class hierarchy." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_K6FZiYANt4l6" parent_id="K6FZiYANt4l6" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Return secondary ID fallback.&amp;#010;Required by resolveRef() for imported model files." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_5aJJLJ1eNHD6" parent_id="5aJJLJ1eNHD6" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Set the secondary ID fallback.&amp;#010;Currently only used by petalTree2Uml()." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_rQjqh7emhx30" parent_id="rQjqh7emhx30" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Auxiliary to saveToXMI.&amp;#010;Create a QDomElement with the given tag, and save the XMI attributes&amp;#010;that are common to all child classes to the newly created element.&amp;#010;This method does not need to be overridden by child classes." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_pAZ0HPbYxlPH" parent_id="pAZ0HPbYxlPH" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Forces the emission of the modified signal.  Useful when&amp;#010;updating several attributes at a time: you can block the&amp;#010;signals, update all atts, and then force the signal." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_uFRSmPiS1ina" parent_id="uFRSmPiS1ina" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Emitted when the UMLObject has changed. Note that some objects emit&amp;#010;this signal when one of its children changes, for example, a UMLClass&amp;#010;emits a modified() signal when one of its operation changes while the Operation&amp;#010;itself emits the corresponding signal as well." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_j8Qs6qIuyquD" parent_id="j8Qs6qIuyquD" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Initializes key variables of the class." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_FVlAG9S9Mrb8" parent_id="FVlAG9S9Mrb8" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Calls UMLDoc::signalUMLObjectCreated() if m_BaseType affords&amp;#010;doing so." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_EHaFxLphREXW" parent_id="EHaFxLphREXW" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Auxiliary to loadFromXMI.&amp;#010;This method is usually overridden by child classes.&amp;#010;It is responsible for loading the specific XMI structure&amp;#010;of the child class." />
         </header>
        </codeoperation>
        <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="SUftgAPjxnkZ" writeOutText="false" classfield_id="SUftgAPjxnkZ" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of m_nId&amp;#010;The object's id.&amp;#010;@return the value of m_nId" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="SUftgAPjxnkZ" writeOutText="false" classfield_id="SUftgAPjxnkZ" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of m_nId&amp;#010;The object's id.&amp;#010;@param value the value of m_nId" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_2" accessType="0" parent_id="6yPuwQu3p6U3" writeOutText="false" classfield_id="6yPuwQu3p6U3" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of m_Doc&amp;#010;The object's documentation.&amp;#010;@return the value of m_Doc" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_3" accessType="1" parent_id="6yPuwQu3p6U3" writeOutText="false" classfield_id="6yPuwQu3p6U3" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of m_Doc&amp;#010;The object's documentation.&amp;#010;@param value the value of m_Doc" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_4" accessType="0" parent_id="r5XrCCpehSYL" writeOutText="false" classfield_id="r5XrCCpehSYL" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of m_pUMLPackage&amp;#010;The package the object belongs to if applicable.&amp;#010;@return the value of m_pUMLPackage" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_5" accessType="1" parent_id="r5XrCCpehSYL" writeOutText="false" classfield_id="r5XrCCpehSYL" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of m_pUMLPackage&amp;#010;The package the object belongs to if applicable.&amp;#010;@param value the value of m_pUMLPackage" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_6" accessType="0" parent_id="cv4Yjo7nlUhh" writeOutText="false" classfield_id="cv4Yjo7nlUhh" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of m_pStereotype&amp;#010;The stereotype of the object if applicable.&amp;#010;@return the value of m_pStereotype" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_7" accessType="1" parent_id="cv4Yjo7nlUhh" writeOutText="false" classfield_id="cv4Yjo7nlUhh" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of m_pStereotype&amp;#010;The stereotype of the object if applicable.&amp;#010;@param value the value of m_pStereotype" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_8" accessType="0" parent_id="tbjifDmWHHMT" writeOutText="false" classfield_id="tbjifDmWHHMT" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of m_Name&amp;#010;The objects name.&amp;#010;@return the value of m_Name" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_9" accessType="1" parent_id="tbjifDmWHHMT" writeOutText="false" classfield_id="tbjifDmWHHMT" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of m_Name&amp;#010;The objects name.&amp;#010;@param value the value of m_Name" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_10" accessType="0" parent_id="S989ceSCXXiG" writeOutText="false" classfield_id="S989ceSCXXiG" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of m_BaseType&amp;#010;The objects type.&amp;#010;@return the value of m_BaseType" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_11" accessType="1" parent_id="S989ceSCXXiG" writeOutText="false" classfield_id="S989ceSCXXiG" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of m_BaseType&amp;#010;The objects type.&amp;#010;@param value the value of m_BaseType" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_12" accessType="0" parent_id="Ln14IimBITtv" writeOutText="false" classfield_id="Ln14IimBITtv" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of m_Vis&amp;#010;The objects visibility.&amp;#010;@return the value of m_Vis" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_13" accessType="1" parent_id="Ln14IimBITtv" writeOutText="false" classfield_id="Ln14IimBITtv" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of m_Vis&amp;#010;The objects visibility.&amp;#010;@param value the value of m_Vis" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_14" accessType="0" parent_id="edSvtmPLvVSV" writeOutText="false" classfield_id="edSvtmPLvVSV" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of m_bAbstract&amp;#010;The state of whether the object is abstract or not.&amp;#010;@return the value of m_bAbstract" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_15" accessType="1" parent_id="edSvtmPLvVSV" writeOutText="false" classfield_id="edSvtmPLvVSV" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of m_bAbstract&amp;#010;The state of whether the object is abstract or not.&amp;#010;@param value the value of m_bAbstract" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_16" accessType="0" parent_id="9uigROvlCupU" writeOutText="false" classfield_id="9uigROvlCupU" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of m_bStatic&amp;#010;This attribute holds whether the UMLObject has instance scope&amp;#010;(false - the default) or classifier scope (true).&amp;#010;@return the value of m_bStatic" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_17" accessType="1" parent_id="9uigROvlCupU" writeOutText="false" classfield_id="9uigROvlCupU" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of m_bStatic&amp;#010;This attribute holds whether the UMLObject has instance scope&amp;#010;(false - the default) or classifier scope (true).&amp;#010;@param value the value of m_bStatic" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_18" accessType="0" parent_id="dZft0Wof8Ea1" writeOutText="false" classfield_id="dZft0Wof8Ea1" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of m_bInPaste&amp;#010;Caller sets this true when in paste operation.&amp;#010;@return the value of m_bInPaste" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_19" accessType="1" parent_id="dZft0Wof8Ea1" writeOutText="false" classfield_id="dZft0Wof8Ea1" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of m_bInPaste&amp;#010;Caller sets this true when in paste operation.&amp;#010;@param value the value of m_bInPaste" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_20" accessType="0" parent_id="yxMuQoPXg5C8" writeOutText="false" classfield_id="yxMuQoPXg5C8" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of m_bCreationWasSignalled&amp;#010;Auxiliary to maybeSignalObjectCreated().&amp;#010;@return the value of m_bCreationWasSignalled" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_21" accessType="1" parent_id="yxMuQoPXg5C8" writeOutText="false" classfield_id="yxMuQoPXg5C8" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of m_bCreationWasSignalled&amp;#010;Auxiliary to maybeSignalObjectCreated().&amp;#010;@param value the value of m_bCreationWasSignalled" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_22" accessType="0" parent_id="U5rezg8cElTE" writeOutText="false" classfield_id="U5rezg8cElTE" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of m_pSecondary&amp;#010;Pointer to an associated object.&amp;#010;Only a few of the classes inheriting from UMLObject use this.&amp;#010;However, it needs to be here because of inheritance graph&amp;#010;disjunctness.&amp;#010;@return the value of m_pSecondary" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_23" accessType="1" parent_id="U5rezg8cElTE" writeOutText="false" classfield_id="U5rezg8cElTE" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of m_pSecondary&amp;#010;Pointer to an associated object.&amp;#010;Only a few of the classes inheriting from UMLObject use this.&amp;#010;However, it needs to be here because of inheritance graph&amp;#010;disjunctness.&amp;#010;@param value the value of m_pSecondary" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_24" accessType="0" parent_id="HGtPSSORNkLo" writeOutText="false" classfield_id="HGtPSSORNkLo" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of m_SecondaryId&amp;#010;xmi.id of the secondary object for intermediate use during&amp;#010;loading.  The secondary ID is resolved to the m_pSecondary&amp;#010;in the course of resolveRef() at the end of loading.&amp;#010;@return the value of m_SecondaryId" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_25" accessType="1" parent_id="HGtPSSORNkLo" writeOutText="false" classfield_id="HGtPSSORNkLo" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of m_SecondaryId&amp;#010;xmi.id of the secondary object for intermediate use during&amp;#010;loading.  The secondary ID is resolved to the m_pSecondary&amp;#010;in the course of resolveRef() at the end of loading.&amp;#010;@param value the value of m_SecondaryId" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_26" accessType="0" parent_id="WiLDmVJEaAsa" writeOutText="false" classfield_id="WiLDmVJEaAsa" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of m_SecondaryFallback&amp;#010;Last-chance backup for when m_SecondaryId is not found.&amp;#010;Used by Rose import: MDL files specify both a &quot;quidu&quot;&amp;#010;(which corresponds to m_SecondaryId) and the human readable&amp;#010;fully qualified target name of a reference.&amp;#010;In case the quidu is not found, the human readable name is&amp;#010;used which we store in m_SecondaryFallback.&amp;#010;@return the value of m_SecondaryFallback" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_27" accessType="1" parent_id="WiLDmVJEaAsa" writeOutText="false" classfield_id="WiLDmVJEaAsa" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of m_SecondaryFallback&amp;#010;Last-chance backup for when m_SecondaryId is not found.&amp;#010;Used by Rose import: MDL files specify both a &quot;quidu&quot;&amp;#010;(which corresponds to m_SecondaryId) and the human readable&amp;#010;fully qualified target name of a reference.&amp;#010;In case the quidu is not found, the human readable name is&amp;#010;used which we store in m_SecondaryFallback.&amp;#010;@param value the value of m_SecondaryFallback" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLObject.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:40&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield role_id="0" listClassName="" field_type="6881395" parent_id="EmjEGhNonv09" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="EmjEGhNonv09" writeOutText="false" indentLevel="1" text="public RefactoringAssistant ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="" accessType="0" parent_id="EmjEGhNonv09" writeOutText="false" classfield_id="EmjEGhNonv09" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="1" parent_id="EmjEGhNonv09" writeOutText="false" classfield_id="EmjEGhNonv09" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="2" parent_id="EmjEGhNonv09" writeOutText="false" classfield_id="EmjEGhNonv09" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="3" parent_id="EmjEGhNonv09" writeOutText="false" classfield_id="EmjEGhNonv09" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="4" parent_id="EmjEGhNonv09" writeOutText="false" classfield_id="EmjEGhNonv09" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="141502208" parent_id="CA4eXi7Ywm3J" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="CA4eXi7Ywm3J" writeOutText="false" indentLevel="1" text="public QObject ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="CA4eXi7Ywm3J" writeOutText="false" classfield_id="CA4eXi7Ywm3J" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="CA4eXi7Ywm3J" writeOutText="false" classfield_id="CA4eXi7Ywm3J" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="CA4eXi7Ywm3J" writeOutText="false" classfield_id="CA4eXi7Ywm3J" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="CA4eXi7Ywm3J" writeOutText="false" classfield_id="CA4eXi7Ywm3J" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="CA4eXi7Ywm3J" writeOutText="false" classfield_id="CA4eXi7Ywm3J" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="SUftgAPjxnkZ" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="SUftgAPjxnkZ" indentLevel="1" text="protected Uml::IDType m_nId;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The object's id." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="SUftgAPjxnkZ" writeOutText="false" classfield_id="SUftgAPjxnkZ" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of m_nId&amp;#010;The object's id.&amp;#010;@return the value of m_nId" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="SUftgAPjxnkZ" writeOutText="false" classfield_id="SUftgAPjxnkZ" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of m_nId&amp;#010;The object's id.&amp;#010;@param value the value of m_nId" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="6yPuwQu3p6U3" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="6yPuwQu3p6U3" indentLevel="1" text="protected QString m_Doc;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The object's documentation." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_2" accessType="0" parent_id="6yPuwQu3p6U3" writeOutText="false" classfield_id="6yPuwQu3p6U3" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of m_Doc&amp;#010;The object's documentation.&amp;#010;@return the value of m_Doc" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_3" accessType="1" parent_id="6yPuwQu3p6U3" writeOutText="false" classfield_id="6yPuwQu3p6U3" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of m_Doc&amp;#010;The object's documentation.&amp;#010;@param value the value of m_Doc" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="r5XrCCpehSYL" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="r5XrCCpehSYL" indentLevel="1" text="protected UMLPackage* m_pUMLPackage;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The package the object belongs to if applicable." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_4" accessType="0" parent_id="r5XrCCpehSYL" writeOutText="false" classfield_id="r5XrCCpehSYL" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of m_pUMLPackage&amp;#010;The package the object belongs to if applicable.&amp;#010;@return the value of m_pUMLPackage" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_5" accessType="1" parent_id="r5XrCCpehSYL" writeOutText="false" classfield_id="r5XrCCpehSYL" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of m_pUMLPackage&amp;#010;The package the object belongs to if applicable.&amp;#010;@param value the value of m_pUMLPackage" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="cv4Yjo7nlUhh" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="cv4Yjo7nlUhh" indentLevel="1" text="protected UMLStereotype* m_pStereotype;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The stereotype of the object if applicable." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_6" accessType="0" parent_id="cv4Yjo7nlUhh" writeOutText="false" classfield_id="cv4Yjo7nlUhh" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of m_pStereotype&amp;#010;The stereotype of the object if applicable.&amp;#010;@return the value of m_pStereotype" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_7" accessType="1" parent_id="cv4Yjo7nlUhh" writeOutText="false" classfield_id="cv4Yjo7nlUhh" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of m_pStereotype&amp;#010;The stereotype of the object if applicable.&amp;#010;@param value the value of m_pStereotype" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="tbjifDmWHHMT" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="tbjifDmWHHMT" indentLevel="1" text="protected QString m_Name;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The objects name." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_8" accessType="0" parent_id="tbjifDmWHHMT" writeOutText="false" classfield_id="tbjifDmWHHMT" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of m_Name&amp;#010;The objects name.&amp;#010;@return the value of m_Name" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_9" accessType="1" parent_id="tbjifDmWHHMT" writeOutText="false" classfield_id="tbjifDmWHHMT" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of m_Name&amp;#010;The objects name.&amp;#010;@param value the value of m_Name" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="S989ceSCXXiG" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="S989ceSCXXiG" indentLevel="1" text="protected Uml::Object_Type m_BaseType;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The objects type." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_10" accessType="0" parent_id="S989ceSCXXiG" writeOutText="false" classfield_id="S989ceSCXXiG" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of m_BaseType&amp;#010;The objects type.&amp;#010;@return the value of m_BaseType" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_11" accessType="1" parent_id="S989ceSCXXiG" writeOutText="false" classfield_id="S989ceSCXXiG" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of m_BaseType&amp;#010;The objects type.&amp;#010;@param value the value of m_BaseType" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="Ln14IimBITtv" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="Ln14IimBITtv" indentLevel="1" text="protected Uml::Visibility m_Vis;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The objects visibility." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_12" accessType="0" parent_id="Ln14IimBITtv" writeOutText="false" classfield_id="Ln14IimBITtv" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of m_Vis&amp;#010;The objects visibility.&amp;#010;@return the value of m_Vis" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_13" accessType="1" parent_id="Ln14IimBITtv" writeOutText="false" classfield_id="Ln14IimBITtv" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of m_Vis&amp;#010;The objects visibility.&amp;#010;@param value the value of m_Vis" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="edSvtmPLvVSV" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="edSvtmPLvVSV" indentLevel="1" text="protected bool m_bAbstract;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The state of whether the object is abstract or not." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_14" accessType="0" parent_id="edSvtmPLvVSV" writeOutText="false" classfield_id="edSvtmPLvVSV" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of m_bAbstract&amp;#010;The state of whether the object is abstract or not.&amp;#010;@return the value of m_bAbstract" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_15" accessType="1" parent_id="edSvtmPLvVSV" writeOutText="false" classfield_id="edSvtmPLvVSV" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of m_bAbstract&amp;#010;The state of whether the object is abstract or not.&amp;#010;@param value the value of m_bAbstract" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="9uigROvlCupU" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="9uigROvlCupU" indentLevel="1" text="protected bool m_bStatic;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="This attribute holds whether the UMLObject has instance scope&amp;#010;(false - the default) or classifier scope (true)." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_16" accessType="0" parent_id="9uigROvlCupU" writeOutText="false" classfield_id="9uigROvlCupU" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of m_bStatic&amp;#010;This attribute holds whether the UMLObject has instance scope&amp;#010;(false - the default) or classifier scope (true).&amp;#010;@return the value of m_bStatic" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_17" accessType="1" parent_id="9uigROvlCupU" writeOutText="false" classfield_id="9uigROvlCupU" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of m_bStatic&amp;#010;This attribute holds whether the UMLObject has instance scope&amp;#010;(false - the default) or classifier scope (true).&amp;#010;@param value the value of m_bStatic" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="dZft0Wof8Ea1" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="dZft0Wof8Ea1" indentLevel="1" text="protected bool m_bInPaste;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Caller sets this true when in paste operation." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_18" accessType="0" parent_id="dZft0Wof8Ea1" writeOutText="false" classfield_id="dZft0Wof8Ea1" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of m_bInPaste&amp;#010;Caller sets this true when in paste operation.&amp;#010;@return the value of m_bInPaste" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_19" accessType="1" parent_id="dZft0Wof8Ea1" writeOutText="false" classfield_id="dZft0Wof8Ea1" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of m_bInPaste&amp;#010;Caller sets this true when in paste operation.&amp;#010;@param value the value of m_bInPaste" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="yxMuQoPXg5C8" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="yxMuQoPXg5C8" indentLevel="1" text="protected bool m_bCreationWasSignalled;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Auxiliary to maybeSignalObjectCreated()." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_20" accessType="0" parent_id="yxMuQoPXg5C8" writeOutText="false" classfield_id="yxMuQoPXg5C8" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of m_bCreationWasSignalled&amp;#010;Auxiliary to maybeSignalObjectCreated().&amp;#010;@return the value of m_bCreationWasSignalled" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_21" accessType="1" parent_id="yxMuQoPXg5C8" writeOutText="false" classfield_id="yxMuQoPXg5C8" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of m_bCreationWasSignalled&amp;#010;Auxiliary to maybeSignalObjectCreated().&amp;#010;@param value the value of m_bCreationWasSignalled" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="U5rezg8cElTE" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="U5rezg8cElTE" indentLevel="1" text="protected UMLObject* m_pSecondary;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Pointer to an associated object.&amp;#010;Only a few of the classes inheriting from UMLObject use this.&amp;#010;However, it needs to be here because of inheritance graph&amp;#010;disjunctness." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_22" accessType="0" parent_id="U5rezg8cElTE" writeOutText="false" classfield_id="U5rezg8cElTE" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of m_pSecondary&amp;#010;Pointer to an associated object.&amp;#010;Only a few of the classes inheriting from UMLObject use this.&amp;#010;However, it needs to be here because of inheritance graph&amp;#010;disjunctness.&amp;#010;@return the value of m_pSecondary" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_23" accessType="1" parent_id="U5rezg8cElTE" writeOutText="false" classfield_id="U5rezg8cElTE" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of m_pSecondary&amp;#010;Pointer to an associated object.&amp;#010;Only a few of the classes inheriting from UMLObject use this.&amp;#010;However, it needs to be here because of inheritance graph&amp;#010;disjunctness.&amp;#010;@param value the value of m_pSecondary" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="HGtPSSORNkLo" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="HGtPSSORNkLo" indentLevel="1" text="protected QString m_SecondaryId;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="xmi.id of the secondary object for intermediate use during&amp;#010;loading.  The secondary ID is resolved to the m_pSecondary&amp;#010;in the course of resolveRef() at the end of loading." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_24" accessType="0" parent_id="HGtPSSORNkLo" writeOutText="false" classfield_id="HGtPSSORNkLo" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of m_SecondaryId&amp;#010;xmi.id of the secondary object for intermediate use during&amp;#010;loading.  The secondary ID is resolved to the m_pSecondary&amp;#010;in the course of resolveRef() at the end of loading.&amp;#010;@return the value of m_SecondaryId" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_25" accessType="1" parent_id="HGtPSSORNkLo" writeOutText="false" classfield_id="HGtPSSORNkLo" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of m_SecondaryId&amp;#010;xmi.id of the secondary object for intermediate use during&amp;#010;loading.  The secondary ID is resolved to the m_pSecondary&amp;#010;in the course of resolveRef() at the end of loading.&amp;#010;@param value the value of m_SecondaryId" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="WiLDmVJEaAsa" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="WiLDmVJEaAsa" indentLevel="1" text="protected QString m_SecondaryFallback;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Last-chance backup for when m_SecondaryId is not found.&amp;#010;Used by Rose import: MDL files specify both a &quot;quidu&quot;&amp;#010;(which corresponds to m_SecondaryId) and the human readable&amp;#010;fully qualified target name of a reference.&amp;#010;In case the quidu is not found, the human readable name is&amp;#010;used which we store in m_SecondaryFallback." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_26" accessType="0" parent_id="WiLDmVJEaAsa" writeOutText="false" classfield_id="WiLDmVJEaAsa" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of m_SecondaryFallback&amp;#010;Last-chance backup for when m_SecondaryId is not found.&amp;#010;Used by Rose import: MDL files specify both a &quot;quidu&quot;&amp;#010;(which corresponds to m_SecondaryId) and the human readable&amp;#010;fully qualified target name of a reference.&amp;#010;In case the quidu is not found, the human readable name is&amp;#010;used which we store in m_SecondaryFallback.&amp;#010;@return the value of m_SecondaryFallback" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_27" accessType="1" parent_id="WiLDmVJEaAsa" writeOutText="false" classfield_id="WiLDmVJEaAsa" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of m_SecondaryFallback&amp;#010;Last-chance backup for when m_SecondaryId is not found.&amp;#010;Used by Rose import: MDL files specify both a &quot;quidu&quot;&amp;#010;(which corresponds to m_SecondaryId) and the human readable&amp;#010;fully qualified target name of a reference.&amp;#010;In case the quidu is not found, the human readable name is&amp;#010;used which we store in m_SecondaryFallback.&amp;#010;@param value the value of m_SecondaryFallback" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="2097266" parent_id="o0A2leF0s6OK" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="o0A2leF0s6OK" writeOutText="false" indentLevel="1" text="public UMLClassifierListItem ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="" accessType="0" parent_id="o0A2leF0s6OK" writeOutText="false" classfield_id="o0A2leF0s6OK" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="1" parent_id="o0A2leF0s6OK" writeOutText="false" classfield_id="o0A2leF0s6OK" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="2" parent_id="o0A2leF0s6OK" writeOutText="false" classfield_id="o0A2leF0s6OK" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="3" parent_id="o0A2leF0s6OK" writeOutText="false" classfield_id="o0A2leF0s6OK" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="4" parent_id="o0A2leF0s6OK" writeOutText="false" classfield_id="o0A2leF0s6OK" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="2097266" parent_id="uXRI8STL1XSj" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="uXRI8STL1XSj" writeOutText="false" indentLevel="1" text="public UMLCanvasObject ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="" accessType="0" parent_id="uXRI8STL1XSj" writeOutText="false" classfield_id="uXRI8STL1XSj" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="1" parent_id="uXRI8STL1XSj" writeOutText="false" classfield_id="uXRI8STL1XSj" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="2" parent_id="uXRI8STL1XSj" writeOutText="false" classfield_id="uXRI8STL1XSj" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="3" parent_id="uXRI8STL1XSj" writeOutText="false" classfield_id="uXRI8STL1XSj" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="4" parent_id="uXRI8STL1XSj" writeOutText="false" classfield_id="uXRI8STL1XSj" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="mXQazKd6zVtQ" id="mXQazKd6zVtQ" fileName="WidgetBase" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;widgetbase.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks>
        <codeoperation tag="operation_XDJpEv7Y9Sts" parent_id="XDJpEv7Y9Sts" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_2maBCR3q0hhS" parent_id="2maBCR3q0hhS" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation tag="operation_CC7g8wggViBq" parent_id="CC7g8wggViBq" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Write property of m_Type." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_6D86unW40dl8" parent_id="6D86unW40dl8" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Read property of m_Type." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_rhwwO6EUJMZB" parent_id="rhwwO6EUJMZB" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns the @ref UMLObject set to represent.&amp;#010;&amp;#010;@return the UMLObject to represent." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_fj4x3d8AjOGQ" parent_id="fj4x3d8AjOGQ" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_Kwi1JyPgO4Qn" parent_id="Kwi1JyPgO4Qn" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets the @ref UMLObject to represent.&amp;#010;&amp;#010;@param o The object to represent." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_3Qpc7dAPXsPq" parent_id="3Qpc7dAPXsPq" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Used by some child classes to get documentation.&amp;#010;&amp;#010;@return  The documentation from the UMLObject (if m_pObject is set.)" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_CmIzz3x0RmcW" parent_id="CmIzz3x0RmcW" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Used by some child classes to set documentation.&amp;#010;&amp;#010;@param doc       The documentation to be set in the UMLObject&amp;#010;         (if m_pObject is set.)" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_7eliigFtQVqO" parent_id="7eliigFtQVqO" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets the line colour&amp;#010;&amp;#010;@param colour the new line colour" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_BkdZFTxlCKjh" parent_id="BkdZFTxlCKjh" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets the line width&amp;#010;&amp;#010;@param width the new line width" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_duKhPpSYZ56m" parent_id="duKhPpSYZ56m" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_I2T6DcbpXtUu" parent_id="I2T6DcbpXtUu" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_nfYGeDOwDr0P" parent_id="nfYGeDOwDr0P" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_tMAUtOOg4uxg" parent_id="tMAUtOOg4uxg" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_bVjEp7rjTzBM" parent_id="bVjEp7rjTzBM" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_HX2RQd2z8mDy" parent_id="HX2RQd2z8mDy" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_atIpb7CqeEI2" parent_id="atIpb7CqeEI2" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Write property of m_nId." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_PpakRMV1Fnop" parent_id="PpakRMV1Fnop" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Read property of m_nId." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_lyAvXK7v9fda" parent_id="lyAvXK7v9fda" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_CAYrilws3Cca" parent_id="CAYrilws3Cca" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_VEeYOE7sglov" parent_id="VEeYOE7sglov" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Initialize members." />
         </header>
        </codeoperation>
        <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="mPsSBgOFn3dL" writeOutText="false" classfield_id="mPsSBgOFn3dL" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of m_Type&amp;#010;Type of widget.&amp;#010;@return the value of m_Type" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="mPsSBgOFn3dL" writeOutText="false" classfield_id="mPsSBgOFn3dL" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of m_Type&amp;#010;Type of widget.&amp;#010;@param value the value of m_Type" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_2" accessType="0" parent_id="hzbB8vwBT8Mi" writeOutText="false" classfield_id="hzbB8vwBT8Mi" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_3" accessType="1" parent_id="hzbB8vwBT8Mi" writeOutText="false" classfield_id="hzbB8vwBT8Mi" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_4" accessType="0" parent_id="bHUFpmIcC84L" writeOutText="false" classfield_id="bHUFpmIcC84L" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_5" accessType="1" parent_id="bHUFpmIcC84L" writeOutText="false" classfield_id="bHUFpmIcC84L" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_6" accessType="0" parent_id="pQaaSBt9BSIH" writeOutText="false" classfield_id="pQaaSBt9BSIH" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_7" accessType="1" parent_id="pQaaSBt9BSIH" writeOutText="false" classfield_id="pQaaSBt9BSIH" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_8" accessType="0" parent_id="OFSpNnXw4zAt" writeOutText="false" classfield_id="OFSpNnXw4zAt" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of m_nId&amp;#010;This ID is only used when the widget does not have a&amp;#010;corresponding UMLObject (i.e. the m_pObject pointer is NULL.)&amp;#010;For UMLObjects, the ID from the UMLObject is used.&amp;#010;@return the value of m_nId" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_9" accessType="1" parent_id="OFSpNnXw4zAt" writeOutText="false" classfield_id="OFSpNnXw4zAt" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of m_nId&amp;#010;This ID is only used when the widget does not have a&amp;#010;corresponding UMLObject (i.e. the m_pObject pointer is NULL.)&amp;#010;For UMLObjects, the ID from the UMLObject is used.&amp;#010;@param value the value of m_nId" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_10" accessType="0" parent_id="lQVvYYELymtQ" writeOutText="false" classfield_id="lQVvYYELymtQ" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of m_LineColour&amp;#010;Color of the lines of the widget. Is saved to XMI.&amp;#010;@return the value of m_LineColour" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_11" accessType="1" parent_id="lQVvYYELymtQ" writeOutText="false" classfield_id="lQVvYYELymtQ" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of m_LineColour&amp;#010;Color of the lines of the widget. Is saved to XMI.&amp;#010;@param value the value of m_LineColour" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_12" accessType="0" parent_id="wlX7DqOZ3qMO" writeOutText="false" classfield_id="wlX7DqOZ3qMO" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of m_LineWidth&amp;#010;Width of the lines of the widget. Is saved to XMI.&amp;#010;@return the value of m_LineWidth" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_13" accessType="1" parent_id="wlX7DqOZ3qMO" writeOutText="false" classfield_id="wlX7DqOZ3qMO" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of m_LineWidth&amp;#010;Width of the lines of the widget. Is saved to XMI.&amp;#010;@param value the value of m_LineWidth" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_14" accessType="0" parent_id="dtIfsSZcs4VP" writeOutText="false" classfield_id="dtIfsSZcs4VP" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of m_bUsesDiagramLineColour&amp;#010;true by default, false if the colours have&amp;#010;been explicitly set for this widget.&amp;#010;These are saved to XMI.&amp;#010;@return the value of m_bUsesDiagramLineColour" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_15" accessType="1" parent_id="dtIfsSZcs4VP" writeOutText="false" classfield_id="dtIfsSZcs4VP" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of m_bUsesDiagramLineColour&amp;#010;true by default, false if the colours have&amp;#010;been explicitly set for this widget.&amp;#010;These are saved to XMI.&amp;#010;@param value the value of m_bUsesDiagramLineColour" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_16" accessType="0" parent_id="ciiZSazOLVTW" writeOutText="false" classfield_id="ciiZSazOLVTW" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_17" accessType="1" parent_id="ciiZSazOLVTW" writeOutText="false" classfield_id="ciiZSazOLVTW" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        WidgetBase.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:23&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield role_id="1" listClassName="" field_type="94" parent_id="YQyYJnd4K3cI" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="YQyYJnd4K3cI" writeOutText="false" indentLevel="1" text="public QObject ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="YQyYJnd4K3cI" writeOutText="false" classfield_id="YQyYJnd4K3cI" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="YQyYJnd4K3cI" writeOutText="false" classfield_id="YQyYJnd4K3cI" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="YQyYJnd4K3cI" writeOutText="false" classfield_id="YQyYJnd4K3cI" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="YQyYJnd4K3cI" writeOutText="false" classfield_id="YQyYJnd4K3cI" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="YQyYJnd4K3cI" writeOutText="false" classfield_id="YQyYJnd4K3cI" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="mPsSBgOFn3dL" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="mPsSBgOFn3dL" indentLevel="1" text="protected Uml::Widget_Type m_Type;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Type of widget." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="mPsSBgOFn3dL" writeOutText="false" classfield_id="mPsSBgOFn3dL" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of m_Type&amp;#010;Type of widget.&amp;#010;@return the value of m_Type" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="mPsSBgOFn3dL" writeOutText="false" classfield_id="mPsSBgOFn3dL" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of m_Type&amp;#010;Type of widget.&amp;#010;@param value the value of m_Type" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="hzbB8vwBT8Mi" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="hzbB8vwBT8Mi" indentLevel="1" text="protected UMLView* m_pView;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_2" accessType="0" parent_id="hzbB8vwBT8Mi" writeOutText="false" classfield_id="hzbB8vwBT8Mi" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_3" accessType="1" parent_id="hzbB8vwBT8Mi" writeOutText="false" classfield_id="hzbB8vwBT8Mi" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="bHUFpmIcC84L" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="bHUFpmIcC84L" indentLevel="1" text="protected UMLObject* m_pObject;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_4" accessType="0" parent_id="bHUFpmIcC84L" writeOutText="false" classfield_id="bHUFpmIcC84L" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_5" accessType="1" parent_id="bHUFpmIcC84L" writeOutText="false" classfield_id="bHUFpmIcC84L" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="pQaaSBt9BSIH" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="pQaaSBt9BSIH" indentLevel="1" text="protected QString m_Doc;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_6" accessType="0" parent_id="pQaaSBt9BSIH" writeOutText="false" classfield_id="pQaaSBt9BSIH" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_7" accessType="1" parent_id="pQaaSBt9BSIH" writeOutText="false" classfield_id="pQaaSBt9BSIH" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="OFSpNnXw4zAt" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="OFSpNnXw4zAt" indentLevel="1" text="protected Uml::IDType m_nId;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="This ID is only used when the widget does not have a&amp;#010;corresponding UMLObject (i.e. the m_pObject pointer is NULL.)&amp;#010;For UMLObjects, the ID from the UMLObject is used." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_8" accessType="0" parent_id="OFSpNnXw4zAt" writeOutText="false" classfield_id="OFSpNnXw4zAt" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of m_nId&amp;#010;This ID is only used when the widget does not have a&amp;#010;corresponding UMLObject (i.e. the m_pObject pointer is NULL.)&amp;#010;For UMLObjects, the ID from the UMLObject is used.&amp;#010;@return the value of m_nId" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_9" accessType="1" parent_id="OFSpNnXw4zAt" writeOutText="false" classfield_id="OFSpNnXw4zAt" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of m_nId&amp;#010;This ID is only used when the widget does not have a&amp;#010;corresponding UMLObject (i.e. the m_pObject pointer is NULL.)&amp;#010;For UMLObjects, the ID from the UMLObject is used.&amp;#010;@param value the value of m_nId" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="lQVvYYELymtQ" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="lQVvYYELymtQ" indentLevel="1" text="protected QColor m_LineColour;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Color of the lines of the widget. Is saved to XMI." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_10" accessType="0" parent_id="lQVvYYELymtQ" writeOutText="false" classfield_id="lQVvYYELymtQ" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of m_LineColour&amp;#010;Color of the lines of the widget. Is saved to XMI.&amp;#010;@return the value of m_LineColour" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_11" accessType="1" parent_id="lQVvYYELymtQ" writeOutText="false" classfield_id="lQVvYYELymtQ" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of m_LineColour&amp;#010;Color of the lines of the widget. Is saved to XMI.&amp;#010;@param value the value of m_LineColour" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="wlX7DqOZ3qMO" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="wlX7DqOZ3qMO" indentLevel="1" text="protected uint m_LineWidth;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Width of the lines of the widget. Is saved to XMI." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_12" accessType="0" parent_id="wlX7DqOZ3qMO" writeOutText="false" classfield_id="wlX7DqOZ3qMO" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of m_LineWidth&amp;#010;Width of the lines of the widget. Is saved to XMI.&amp;#010;@return the value of m_LineWidth" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_13" accessType="1" parent_id="wlX7DqOZ3qMO" writeOutText="false" classfield_id="wlX7DqOZ3qMO" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of m_LineWidth&amp;#010;Width of the lines of the widget. Is saved to XMI.&amp;#010;@param value the value of m_LineWidth" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="dtIfsSZcs4VP" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="dtIfsSZcs4VP" indentLevel="1" text="protected bool m_bUsesDiagramLineColour;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="true by default, false if the colours have&amp;#010;been explicitly set for this widget.&amp;#010;These are saved to XMI." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_14" accessType="0" parent_id="dtIfsSZcs4VP" writeOutText="false" classfield_id="dtIfsSZcs4VP" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of m_bUsesDiagramLineColour&amp;#010;true by default, false if the colours have&amp;#010;been explicitly set for this widget.&amp;#010;These are saved to XMI.&amp;#010;@return the value of m_bUsesDiagramLineColour" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_15" accessType="1" parent_id="dtIfsSZcs4VP" writeOutText="false" classfield_id="dtIfsSZcs4VP" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of m_bUsesDiagramLineColour&amp;#010;true by default, false if the colours have&amp;#010;been explicitly set for this widget.&amp;#010;These are saved to XMI.&amp;#010;@param value the value of m_bUsesDiagramLineColour" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="ciiZSazOLVTW" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="ciiZSazOLVTW" indentLevel="1" text="protected bool m_bUsesDiagramLineWidth;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_16" accessType="0" parent_id="ciiZSazOLVTW" writeOutText="false" classfield_id="ciiZSazOLVTW" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_17" accessType="1" parent_id="ciiZSazOLVTW" writeOutText="false" classfield_id="ciiZSazOLVTW" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="2097266" parent_id="hJTk1XEbNcXg" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="hJTk1XEbNcXg" writeOutText="false" indentLevel="1" text="public UMLWidget ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="" accessType="0" parent_id="hJTk1XEbNcXg" writeOutText="false" classfield_id="hJTk1XEbNcXg" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="1" parent_id="hJTk1XEbNcXg" writeOutText="false" classfield_id="hJTk1XEbNcXg" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="2" parent_id="hJTk1XEbNcXg" writeOutText="false" classfield_id="hJTk1XEbNcXg" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="3" parent_id="hJTk1XEbNcXg" writeOutText="false" classfield_id="hJTk1XEbNcXg" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="4" parent_id="hJTk1XEbNcXg" writeOutText="false" classfield_id="hJTk1XEbNcXg" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="5zC3XL9jxXAd" id="5zC3XL9jxXAd" fileName="QObject" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;qobject.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QObject.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:25&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield role_id="0" listClassName="" field_type="6488165" parent_id="YQyYJnd4K3cI" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="YQyYJnd4K3cI" writeOutText="false" indentLevel="1" text="public WidgetBase ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="" accessType="0" parent_id="YQyYJnd4K3cI" writeOutText="false" classfield_id="YQyYJnd4K3cI" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="1" parent_id="YQyYJnd4K3cI" writeOutText="false" classfield_id="YQyYJnd4K3cI" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="2" parent_id="YQyYJnd4K3cI" writeOutText="false" classfield_id="YQyYJnd4K3cI" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="3" parent_id="YQyYJnd4K3cI" writeOutText="false" classfield_id="YQyYJnd4K3cI" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="4" parent_id="YQyYJnd4K3cI" writeOutText="false" classfield_id="YQyYJnd4K3cI" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="6488165" parent_id="CA4eXi7Ywm3J" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="CA4eXi7Ywm3J" writeOutText="false" indentLevel="1" text="public UMLObject ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="" accessType="0" parent_id="CA4eXi7Ywm3J" writeOutText="false" classfield_id="CA4eXi7Ywm3J" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="1" parent_id="CA4eXi7Ywm3J" writeOutText="false" classfield_id="CA4eXi7Ywm3J" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="2" parent_id="CA4eXi7Ywm3J" writeOutText="false" classfield_id="CA4eXi7Ywm3J" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="3" parent_id="CA4eXi7Ywm3J" writeOutText="false" classfield_id="CA4eXi7Ywm3J" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="4" parent_id="CA4eXi7Ywm3J" writeOutText="false" classfield_id="CA4eXi7Ywm3J" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="gagrSVXhWyp2" id="gagrSVXhWyp2" fileName="UMLView_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLView_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:19&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="75G7jzEHQyIY" id="75G7jzEHQyIY" fileName="UMLObject_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLObject_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:20&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="NSfmQxIJ7H4o" id="NSfmQxIJ7H4o" fileName="const_UMLView_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        const_UMLView_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:20&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="YlO0XzWsjQmM" id="YlO0XzWsjQmM" fileName="const_QColor_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        const_QColor_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:21&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="18ZEvL3pLhMY" id="18ZEvL3pLhMY" fileName="QDomDocument" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QDomDocument.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:21&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="ctbqRd7AbF66" id="ctbqRd7AbF66" fileName="QDomDocument_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QDomDocument_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:21&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="67URooyOfZF7" id="67URooyOfZF7" fileName="QDomElement" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QDomElement.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:21&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="CKFlXJq4UrkK" id="CKFlXJq4UrkK" fileName="QDomElement_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QDomElement_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:21&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="Jr6MgSkHK0xA" id="Jr6MgSkHK0xA" fileName="UMLWidgetController" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLWidgetController.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:22&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="TUkJYGg9wPgO" id="TUkJYGg9wPgO" fileName="UMLDoc" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLDoc.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:22&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="zdlI8EoP4sli" id="zdlI8EoP4sli" fileName="ListPopupMenu" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        ListPopupMenu.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:22&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="JTzdUulvMWEt" id="JTzdUulvMWEt" fileName="IDChangeLog" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        IDChangeLog.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:22&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="kv2gIi2FLnXS" id="kv2gIi2FLnXS" fileName="QPainter" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QPainter.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:22&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="0Jr4CbkT2j4U" id="0Jr4CbkT2j4U" fileName="QMoveEvent" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QMoveEvent.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:23&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="cpPyLcr5Vrjn" id="cpPyLcr5Vrjn" fileName="QFontMetrics" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QFontMetrics.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:23&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="Xm2rXXJVq8Z0" id="Xm2rXXJVq8Z0" fileName="UMLWidget" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;umlwidget.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks>
        <codeoperation tag="operation_o3GhKGZP85aK" parent_id="o3GhKGZP85aK" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Creates a UMLWidget object.&amp;#010;&amp;#010;@param view The view to be displayed on.&amp;#010;@param o The UMLObject to represent.&amp;#010;@param widgetController The UMLWidgetController of this UMLWidget" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_7U23SiJhuy3E" parent_id="7U23SiJhuy3E" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Creates a UMLWidget object.&amp;#010;&amp;#010;@param view The view to be displayed on.&amp;#010;@param id The id of the widget.&amp;#010; The default value (id_None) will prompt generation of a new ID.&amp;#010;@param widgetController The UMLWidgetController of this UMLWidget" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_w3iG3s0QJtfw" parent_id="w3iG3s0QJtfw" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Standard deconstructor" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_VxcaHN9HPLCP" parent_id="VxcaHN9HPLCP" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Copy constructor" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation tag="operation_o9SBVcb4wBZr" parent_id="o9SBVcb4wBZr" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Assignment operator" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_hvWeEQVY9roJ" parent_id="hvWeEQVY9roJ" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Overload '==' operator" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_vnc2cQMoecWi" parent_id="vnc2cQMoecWi" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Calls the method with the same name in UMLWidgetController.&amp;#010;@see UMLWidgetController#mouseReleaseEvent&amp;#010;&amp;#010;@param me The QMouseEvent event." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_ld9yur77ay9m" parent_id="ld9yur77ay9m" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Calls the method with the same name in UMLWidgetController.&amp;#010;@see UMLWidgetController#mouseDoubleClickEvent&amp;#010;&amp;#010;@param me The QMouseEvent event." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_dDldq7YcjhYb" parent_id="dDldq7YcjhYb" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Set the status of using fill color.&amp;#010;&amp;#010;@param fc the status of using fill color." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_m5zKqluTwf4l" parent_id="m5zKqluTwf4l" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_UorWXSSKWRcM" parent_id="UorWXSSKWRcM" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Overrides the method from WidgetBase." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_7Mcg3XsVJh1q" parent_id="7Mcg3XsVJh1q" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Overrides the method from WidgetBase." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_cuG36ZnBvNry" parent_id="cuG36ZnBvNry" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Overrides the method from WidgetBase." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_o7l1spMUjaVn" parent_id="o7l1spMUjaVn" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets the background fill colour&amp;#010;&amp;#010;@param colour the new fill colour" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_vgNokUWYbHYT" parent_id="vgNokUWYbHYT" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets the background fill colour&amp;#010;&amp;#010;@param colour the new fill colour" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_Kfsn7Xe2Bzov" parent_id="Kfsn7Xe2Bzov" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="get fill color attribute." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_pyxXUasmGiYL" parent_id="pyxXUasmGiYL" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_kChcc6xS4tzX" parent_id="kChcc6xS4tzX" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Calls the method with the same name in UMLWidgetController.&amp;#010;@see UMLWidgetController#mouseMoveEvent&amp;#010;&amp;#010;@param me The QMouseEvent event." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_ZTm3ET5wfmZG" parent_id="ZTm3ET5wfmZG" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_WZgWyqhWHTXT" parent_id="WZgWyqhWHTXT" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets the state of whether the widget is selected.&amp;#010;&amp;#010;@param _select The state of whether the widget is selected." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_5WfVBCThj7Dg" parent_id="5WfVBCThj7Dg" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_zYnS0rH4LuZW" parent_id="zYnS0rH4LuZW" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_LrncsWDs4yI3" parent_id="LrncsWDs4yI3" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets the view the widget is on.&amp;#010;&amp;#010;@param v The view the widget is on." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_DoiTSw1nmmNe" parent_id="DoiTSw1nmmNe" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Activate the object after serializing it from a QDataStream&amp;#010;&amp;#010;@param ChangeLog&amp;#010;@return  true for success" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_cCIxbhhdkyFa" parent_id="cCIxbhhdkyFa" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns 0 if the given point is not in the boundaries of the widget,&amp;#010;else returns a number which is proportional to the size of the widget.&amp;#010;&amp;#010;@param p Point to be checked.&amp;#010;&amp;#010;@return 0 if the given point is not in the boundaries of the widget;&amp;#010;        (width()+height())/2 if the point is within the boundaries." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_BbjQajFHPhd1" parent_id="BbjQajFHPhd1" writeOutText="false" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Draws the UMLWidget on the given paint device&amp;#010;&amp;#010;@param p The painter for the drawing device&amp;#010;@param offsetX x position to start the drawing.&amp;#010;@param offsetY y position to start the drawing.&amp;#010;" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_KpAuoN5VqSaz" parent_id="KpAuoN5VqSaz" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Set the pen." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_GrgvBCGU2OMo" parent_id="GrgvBCGU2OMo" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets the font the widget is to use.&amp;#010;&amp;#010;@param font Font to be set." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_hJk1QPmfHRaQ" parent_id="hJk1QPmfHRaQ" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text=" Returns the font the widget is to use." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_d5u87OapfKo5" parent_id="d5u87OapfKo5" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_XgFBSni3saC0" parent_id="XgFBSni3saC0" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets the x-coordinate.&amp;#010;Currently, the only class that reimplements this method is&amp;#010;ObjectWidget.&amp;#010;&amp;#010;@param x The x-coordinate to be set." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_e5kiLyzqfEz5" parent_id="e5kiLyzqfEz5" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets the y-coordinate.&amp;#010;Currently, the only class that reimplements this method is&amp;#010;ObjectWidget.&amp;#010;&amp;#010;@param y The y-coordinate to be set." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_EPnLkTSMYC4t" parent_id="EPnLkTSMYC4t" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets the z-coordinate.&amp;#010;&amp;#010;@param z The z-coordinate to be set." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_GtlEUVHgs32c" parent_id="GtlEUVHgs32c" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_GVRaUTCiMvxp" parent_id="GVRaUTCiMvxp" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_qePqE12TUS3w" parent_id="qePqE12TUS3w" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_5jj3ZVeO73CK" parent_id="5jj3ZVeO73CK" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_gudSSRSVBCXi" parent_id="gudSSRSVBCXi" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_eFheLUk1MMTo" parent_id="eFheLUk1MMTo" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets the size.&amp;#010;If m_pView->getSnapComponentSizeToGrid() is true, then&amp;#010;set the next larger size that snaps to the grid." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_bMkxiBmV34S7" parent_id="bMkxiBmV34S7" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Set m_bIgnoreSnapToGrid." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_ZTDxZogAAO6q" parent_id="ZTDxZogAAO6q" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Return the value of m_bIgnoreSnapToGrid." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_nVGbtGmShxPG" parent_id="nVGbtGmShxPG" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Move the widget by an X and Y offset relative to&amp;#010;the current position." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_iwGPrddbh2W8" parent_id="iwGPrddbh2W8" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Removes an already created association from the list of&amp;#010;associations that include this UMLWidget" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_tFeaF8glNmXh" parent_id="tFeaF8glNmXh" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Adds an already created association to the list of&amp;#010;associations that include this UMLWidget" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_EuLQ9uR095aP" parent_id="EuLQ9uR095aP" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_dT8kXg9jxFGy" parent_id="dT8kXg9jxFGy" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_uqQsXRx8u3sP" parent_id="uqQsXRx8u3sP" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_ykZMW08OpWGM" parent_id="ykZMW08OpWGM" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_jHeZGoxCXWY1" parent_id="jHeZGoxCXWY1" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_QBzjXcHErvo5" parent_id="QBzjXcHErvo5" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_Heg5ic79n7qL" parent_id="Heg5ic79n7qL" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_b841k5Z1hF7Q" parent_id="b841k5Z1hF7Q" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_o69vw2FY8HXt" parent_id="o69vw2FY8HXt" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_KgSm9yCx5Jqz" parent_id="KgSm9yCx5Jqz" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns the status of whether to show Stereotype.&amp;#010;&amp;#010;@return  True if stereotype is shown." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_D5VN2ErKuJ41" parent_id="D5VN2ErKuJ41" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Set the status of whether to show Stereotype.&amp;#010;&amp;#010;@param _status             True if stereotype shall be shown." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_qglxuQK6WoRW" parent_id="qglxuQK6WoRW" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Show a properties dialog for a UMLWidget." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_2GruavvoCp7l" parent_id="2GruavvoCp7l" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns true if the Activate method has been called for this instance&amp;#010;&amp;#010;@return The activate status." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_gHbA53g5JXzr" parent_id="gHbA53g5JXzr" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets the name in the corresponding UMLObject.&amp;#010;Sets the local m_Text if m_pObject is NULL.&amp;#010;&amp;#010;@param strName The name to be set." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_u8LXNI31ae9d" parent_id="u8LXNI31ae9d" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Gets the name from the corresponding UMLObject.&amp;#010;Returns the local m_Text if m_pObject is NULL.&amp;#010;&amp;#010;@return The currently set name." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_AiVGg9abFv6a" parent_id="AiVGg9abFv6a" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Starts the popup menu.&amp;#010;" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_BYtQR01f9bPv" parent_id="BYtQR01f9bPv" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Adjusts associations with the given co-ordinates&amp;#010;&amp;#010;@param x The x-coordinate.&amp;#010;@param y The y-coordinate." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_87aHizD0kYoa" parent_id="87aHizD0kYoa" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Adjusts all unselected associations with the given co-ordinates&amp;#010;&amp;#010;@param x The x-coordinate.&amp;#010;@param y The y-coordinate." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_Qtf9PUjcxtgj" parent_id="Qtf9PUjcxtgj" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Set the m_bActivated flag of a widget but does not perform the Activate method&amp;#010;&amp;#010;@param Active Status of activation is to be set." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_BlfACLpdETmd" parent_id="BlfACLpdETmd" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Used to cleanup any other widget it may need to delete.&amp;#010;Used by child classes.  This should be called before deleting a widget of a diagram." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_xTFsKucHyNkU" parent_id="xTFsKucHyNkU" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns whether the widget type has an associated UMLObject" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_2Ze0uOSxevsB" parent_id="2Ze0uOSxevsB" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Update the size of this widget." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_E0tKikZoRT5Y" parent_id="E0tKikZoRT5Y" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="@note For performance Reasons, only FontMetrics for already used&amp;#010; font types are updated. Not yet used font types will not get a font metric&amp;#010; and will get the same font metric as if painter was zero.&amp;#010; This behaviour is acceptable, because diagrams will always be showed on Display&amp;#010; first before a special painter like a printer device is used." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_yZEN1Jv6JWFP" parent_id="yZEN1Jv6JWFP" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Calls the method with the same name in UMLWidgetController.&amp;#010;@see UMLWidgetController#mousePressEvent&amp;#010;&amp;#010;@param me The QMouseEvent event." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_jzPRDPt9w5Ux" parent_id="jzPRDPt9w5Ux" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Overrides the standard operation.&amp;#010;&amp;#010;@param me The move event." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_y8HuDlsa8uG2" parent_id="y8HuDlsa8uG2" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_TFHb7VeEqbLp" parent_id="TFHb7VeEqbLp" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_S2lGd43FL51z" parent_id="S2lGd43FL51z" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns the UMLWdigetController for this widget." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_sT1IQSpqUY56" parent_id="sT1IQSpqUY56" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Apply possible constraints to the given candidate width and height.&amp;#010;The default implementation calls calculateSize() and&amp;#010;assigns the returned values if they are greater than the&amp;#010;input values.&amp;#010;&amp;#010;@param width  input value, may be modified by the constraint&amp;#010;@param height input value, may be modified by the constraint" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_dJN086d7n0v9" parent_id="dJN086d7n0v9" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Draws that the widget is selected.&amp;#010;&amp;#010;@param p Device on which is the selection is to be drawn.&amp;#010;@param offsetX The x-coordinate for drawing.&amp;#010;@param offsetY The y-coordinate for drawing." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_ddbqLtu1ARkl" parent_id="ddbqLtu1ARkl" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Overrides default method.&amp;#010;&amp;#010;@param p Device on which the shape has to be drawn." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_jHl00VDd7mRS" parent_id="jHl00VDd7mRS" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Compute the minimum possible width and height.&amp;#010;The default implementation returns width=20, height=20.&amp;#010;&amp;#010;@return QSize(mininum_width, minimum_height)" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_pZ1k4fplBWP5" parent_id="pZ1k4fplBWP5" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Template Method, override this to set the default&amp;#010; font metric." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_AYmMBoJzLKjP" parent_id="AYmMBoJzLKjP" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_HvoaGWzD27M3" parent_id="HvoaGWzD27M3" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns the font metric used by this object for Text which uses bold/italic font" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_OOASOldZ52Pp" parent_id="OOASOldZ52Pp" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_1GP4GouHujCU" parent_id="1GP4GouHujCU" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_82YMblQG1fLX" parent_id="82YMblQG1fLX" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Initializes key attributes of the class." />
         </header>
        </codeoperation>
        <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="XH0hZY7fykf7" writeOutText="false" classfield_id="XH0hZY7fykf7" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="XH0hZY7fykf7" writeOutText="false" classfield_id="XH0hZY7fykf7" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_2" accessType="0" parent_id="c7MhbhRihy4I" writeOutText="false" classfield_id="c7MhbhRihy4I" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_3" accessType="1" parent_id="c7MhbhRihy4I" writeOutText="false" classfield_id="c7MhbhRihy4I" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_4" accessType="0" parent_id="jSZk5uFc9FJi" writeOutText="false" classfield_id="jSZk5uFc9FJi" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_5" accessType="1" parent_id="jSZk5uFc9FJi" writeOutText="false" classfield_id="jSZk5uFc9FJi" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_6" accessType="0" parent_id="mOLk8ysi5CNf" writeOutText="false" classfield_id="mOLk8ysi5CNf" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_7" accessType="1" parent_id="mOLk8ysi5CNf" writeOutText="false" classfield_id="mOLk8ysi5CNf" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_8" accessType="0" parent_id="tpNanPqUrPCu" writeOutText="false" classfield_id="tpNanPqUrPCu" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_9" accessType="1" parent_id="tpNanPqUrPCu" writeOutText="false" classfield_id="tpNanPqUrPCu" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_10" accessType="0" parent_id="HRWPen5Q9RBH" writeOutText="false" classfield_id="HRWPen5Q9RBH" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_11" accessType="1" parent_id="HRWPen5Q9RBH" writeOutText="false" classfield_id="HRWPen5Q9RBH" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_12" accessType="0" parent_id="P1yTDL64ATcv" writeOutText="false" classfield_id="P1yTDL64ATcv" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_13" accessType="1" parent_id="P1yTDL64ATcv" writeOutText="false" classfield_id="P1yTDL64ATcv" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_14" accessType="0" parent_id="qSNhqZZ705Ud" writeOutText="false" classfield_id="qSNhqZZ705Ud" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_15" accessType="1" parent_id="qSNhqZZ705Ud" writeOutText="false" classfield_id="qSNhqZZ705Ud" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_16" accessType="0" parent_id="qa1zzCGMBEnO" writeOutText="false" classfield_id="qa1zzCGMBEnO" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_17" accessType="1" parent_id="qa1zzCGMBEnO" writeOutText="false" classfield_id="qa1zzCGMBEnO" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_18" accessType="0" parent_id="atSiK4cAXzrN" writeOutText="false" classfield_id="atSiK4cAXzrN" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_19" accessType="1" parent_id="atSiK4cAXzrN" writeOutText="false" classfield_id="atSiK4cAXzrN" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_20" accessType="0" parent_id="XOSXTv8JVAGS" writeOutText="false" classfield_id="XOSXTv8JVAGS" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_21" accessType="1" parent_id="XOSXTv8JVAGS" writeOutText="false" classfield_id="XOSXTv8JVAGS" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_22" accessType="0" parent_id="KXmWjauHTLyo" writeOutText="false" classfield_id="KXmWjauHTLyo" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_23" accessType="1" parent_id="KXmWjauHTLyo" writeOutText="false" classfield_id="KXmWjauHTLyo" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_24" accessType="0" parent_id="NYysXoF2Cgae" writeOutText="false" classfield_id="NYysXoF2Cgae" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_25" accessType="1" parent_id="NYysXoF2Cgae" writeOutText="false" classfield_id="NYysXoF2Cgae" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_26" accessType="0" parent_id="bgv4qCUBhGfO" writeOutText="false" classfield_id="bgv4qCUBhGfO" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_27" accessType="1" parent_id="bgv4qCUBhGfO" writeOutText="false" classfield_id="bgv4qCUBhGfO" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_28" accessType="0" parent_id="qZgIsc6GA28f" writeOutText="false" classfield_id="qZgIsc6GA28f" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_29" accessType="1" parent_id="qZgIsc6GA28f" writeOutText="false" classfield_id="qZgIsc6GA28f" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_30" accessType="0" parent_id="g7uLNZkC6OUz" writeOutText="false" classfield_id="g7uLNZkC6OUz" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_31" accessType="1" parent_id="g7uLNZkC6OUz" writeOutText="false" classfield_id="g7uLNZkC6OUz" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_32" accessType="0" parent_id="0YDAYLnLfVKf" writeOutText="false" classfield_id="0YDAYLnLfVKf" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_33" accessType="1" parent_id="0YDAYLnLfVKf" writeOutText="false" classfield_id="0YDAYLnLfVKf" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_34" accessType="0" parent_id="s7UyVyvVU8d2" writeOutText="false" classfield_id="s7UyVyvVU8d2" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_35" accessType="1" parent_id="s7UyVyvVU8d2" writeOutText="false" classfield_id="s7UyVyvVU8d2" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_36" accessType="0" parent_id="SRN7ufneY1Kw" writeOutText="false" classfield_id="SRN7ufneY1Kw" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_37" accessType="1" parent_id="SRN7ufneY1Kw" writeOutText="false" classfield_id="SRN7ufneY1Kw" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_38" accessType="0" parent_id="rjyn0L5qTZmw" writeOutText="false" classfield_id="rjyn0L5qTZmw" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_39" accessType="1" parent_id="rjyn0L5qTZmw" writeOutText="false" classfield_id="rjyn0L5qTZmw" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_40" accessType="0" parent_id="ViQzo30GSNON" writeOutText="false" classfield_id="ViQzo30GSNON" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_41" accessType="1" parent_id="ViQzo30GSNON" writeOutText="false" classfield_id="ViQzo30GSNON" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_42" accessType="0" parent_id="191ZAJT10Rn0" writeOutText="false" classfield_id="191ZAJT10Rn0" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_43" accessType="1" parent_id="191ZAJT10Rn0" writeOutText="false" classfield_id="191ZAJT10Rn0" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeoperation tag="operation_lsqCQc8vIYt7" parent_id="lsqCQc8vIYt7" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="This slot is entered when an event has occurred on the views display,&amp;#010;most likely a mouse event.  Before it sends out that mouse event all&amp;#010;children should make sure that they don't have a menu active or there&amp;#010;could be more than one popup menu displayed." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_atN2EjNFsOn3" parent_id="atN2EjNFsOn3" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="When a widget changes this slot captures that signal." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_fG2fgnfReTb4" parent_id="fG2fgnfReTb4" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Captures any popup menu signals for menus it created.&amp;#010;&amp;#010;@param action The action which has to be executed." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_iuUNhJHGTNh1" parent_id="iuUNhJHGTNh1" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Captures when another widget moves if it is link to it that signal.&amp;#010;&amp;#010;@param id The id of object behind the widget." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_6bjZT8F90kUi" parent_id="6bjZT8F90kUi" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Captures a color change signal.&amp;#010;&amp;#010;@param viewID The id of the object behind the widget." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_qs3UCg6GGnph" parent_id="qs3UCg6GGnph" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Captures a linewidth change signal.&amp;#010;&amp;#010;@param viewID The id of the object behind the widget." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_BlYtUH8I79kJ" parent_id="BlYtUH8I79kJ" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="  Captures a sigClearAllSelected signal sent by @ref UMLView" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_qrY6eNlaQbUD" parent_id="qrY6eNlaQbUD" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Tells the widget to snap to grid.&amp;#010;Will use the grid settings of the @ref UMLView it belongs to." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_t6zyeH7n1deT" parent_id="t6zyeH7n1deT" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Emit when the widget moves its' position.&amp;#010;&amp;#010;@param id The id of the object behind the widget." />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLWidget.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:23&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield role_id="1" listClassName="" field_type="298" parent_id="hJTk1XEbNcXg" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="hJTk1XEbNcXg" writeOutText="false" indentLevel="1" text="public WidgetBase ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="hJTk1XEbNcXg" writeOutText="false" classfield_id="hJTk1XEbNcXg" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="hJTk1XEbNcXg" writeOutText="false" classfield_id="hJTk1XEbNcXg" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="hJTk1XEbNcXg" writeOutText="false" classfield_id="hJTk1XEbNcXg" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="hJTk1XEbNcXg" writeOutText="false" classfield_id="hJTk1XEbNcXg" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="hJTk1XEbNcXg" writeOutText="false" classfield_id="hJTk1XEbNcXg" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="94" parent_id="6fUJ932AvJ2s" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="6fUJ932AvJ2s" writeOutText="false" indentLevel="1" text="public Q3CanvasRectangle ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="6fUJ932AvJ2s" writeOutText="false" classfield_id="6fUJ932AvJ2s" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="6fUJ932AvJ2s" writeOutText="false" classfield_id="6fUJ932AvJ2s" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="6fUJ932AvJ2s" writeOutText="false" classfield_id="6fUJ932AvJ2s" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="6fUJ932AvJ2s" writeOutText="false" classfield_id="6fUJ932AvJ2s" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="6fUJ932AvJ2s" writeOutText="false" classfield_id="6fUJ932AvJ2s" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="XH0hZY7fykf7" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="XH0hZY7fykf7" indentLevel="1" text="protected bool m_bUseFillColour;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="XH0hZY7fykf7" writeOutText="false" classfield_id="XH0hZY7fykf7" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="XH0hZY7fykf7" writeOutText="false" classfield_id="XH0hZY7fykf7" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="c7MhbhRihy4I" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="c7MhbhRihy4I" indentLevel="1" text="protected bool m_bUsesDiagramFillColour;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_2" accessType="0" parent_id="c7MhbhRihy4I" writeOutText="false" classfield_id="c7MhbhRihy4I" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_3" accessType="1" parent_id="c7MhbhRihy4I" writeOutText="false" classfield_id="c7MhbhRihy4I" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="jSZk5uFc9FJi" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="jSZk5uFc9FJi" indentLevel="1" text="protected bool m_bUsesDiagramUseFillColour;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_4" accessType="0" parent_id="jSZk5uFc9FJi" writeOutText="false" classfield_id="jSZk5uFc9FJi" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_5" accessType="1" parent_id="jSZk5uFc9FJi" writeOutText="false" classfield_id="jSZk5uFc9FJi" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="mOLk8ysi5CNf" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="mOLk8ysi5CNf" indentLevel="1" text="protected QColor m_FillColour;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_6" accessType="0" parent_id="mOLk8ysi5CNf" writeOutText="false" classfield_id="mOLk8ysi5CNf" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_7" accessType="1" parent_id="mOLk8ysi5CNf" writeOutText="false" classfield_id="mOLk8ysi5CNf" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="tpNanPqUrPCu" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="tpNanPqUrPCu" indentLevel="1" text="protected AssociationWidgetList m_Assocs;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_8" accessType="0" parent_id="tpNanPqUrPCu" writeOutText="false" classfield_id="tpNanPqUrPCu" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_9" accessType="1" parent_id="tpNanPqUrPCu" writeOutText="false" classfield_id="tpNanPqUrPCu" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="HRWPen5Q9RBH" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="HRWPen5Q9RBH" indentLevel="1" text="protected QString m_Text;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_10" accessType="0" parent_id="HRWPen5Q9RBH" writeOutText="false" classfield_id="HRWPen5Q9RBH" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_11" accessType="1" parent_id="HRWPen5Q9RBH" writeOutText="false" classfield_id="HRWPen5Q9RBH" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="P1yTDL64ATcv" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="P1yTDL64ATcv" indentLevel="1" text="protected QFont m_Font;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_12" accessType="0" parent_id="P1yTDL64ATcv" writeOutText="false" classfield_id="P1yTDL64ATcv" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_13" accessType="1" parent_id="P1yTDL64ATcv" writeOutText="false" classfield_id="P1yTDL64ATcv" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="qSNhqZZ705Ud" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="qSNhqZZ705Ud" indentLevel="1" text="protected bool m_bIsInstance;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_14" accessType="0" parent_id="qSNhqZZ705Ud" writeOutText="false" classfield_id="qSNhqZZ705Ud" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_15" accessType="1" parent_id="qSNhqZZ705Ud" writeOutText="false" classfield_id="qSNhqZZ705Ud" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="qa1zzCGMBEnO" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="qa1zzCGMBEnO" indentLevel="1" text="protected QString m_instanceName;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_16" accessType="0" parent_id="qa1zzCGMBEnO" writeOutText="false" classfield_id="qa1zzCGMBEnO" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_17" accessType="1" parent_id="qa1zzCGMBEnO" writeOutText="false" classfield_id="qa1zzCGMBEnO" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="atSiK4cAXzrN" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="atSiK4cAXzrN" indentLevel="1" text="protected bool m_bShowStereotype;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_18" accessType="0" parent_id="atSiK4cAXzrN" writeOutText="false" classfield_id="atSiK4cAXzrN" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_19" accessType="1" parent_id="atSiK4cAXzrN" writeOutText="false" classfield_id="atSiK4cAXzrN" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="XOSXTv8JVAGS" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="XOSXTv8JVAGS" indentLevel="1" text="protected bool m_bSelected;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_20" accessType="0" parent_id="XOSXTv8JVAGS" writeOutText="false" classfield_id="XOSXTv8JVAGS" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_21" accessType="1" parent_id="XOSXTv8JVAGS" writeOutText="false" classfield_id="XOSXTv8JVAGS" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="KXmWjauHTLyo" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="KXmWjauHTLyo" indentLevel="1" text="protected bool m_bStartMove;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_22" accessType="0" parent_id="KXmWjauHTLyo" writeOutText="false" classfield_id="KXmWjauHTLyo" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_23" accessType="1" parent_id="KXmWjauHTLyo" writeOutText="false" classfield_id="KXmWjauHTLyo" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="NYysXoF2Cgae" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="NYysXoF2Cgae" indentLevel="1" text="protected int m_nPosX;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_24" accessType="0" parent_id="NYysXoF2Cgae" writeOutText="false" classfield_id="NYysXoF2Cgae" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_25" accessType="1" parent_id="NYysXoF2Cgae" writeOutText="false" classfield_id="NYysXoF2Cgae" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="bgv4qCUBhGfO" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="bgv4qCUBhGfO" indentLevel="1" text="protected int m_origZ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_26" accessType="0" parent_id="bgv4qCUBhGfO" writeOutText="false" classfield_id="bgv4qCUBhGfO" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_27" accessType="1" parent_id="bgv4qCUBhGfO" writeOutText="false" classfield_id="bgv4qCUBhGfO" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="qZgIsc6GA28f" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="qZgIsc6GA28f" indentLevel="1" text="protected ListPopupMenu* m_pMenu;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_28" accessType="0" parent_id="qZgIsc6GA28f" writeOutText="false" classfield_id="qZgIsc6GA28f" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_29" accessType="1" parent_id="qZgIsc6GA28f" writeOutText="false" classfield_id="qZgIsc6GA28f" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="g7uLNZkC6OUz" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="g7uLNZkC6OUz" indentLevel="1" text="protected UMLDoc* m_pDoc;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_30" accessType="0" parent_id="g7uLNZkC6OUz" writeOutText="false" classfield_id="g7uLNZkC6OUz" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_31" accessType="1" parent_id="g7uLNZkC6OUz" writeOutText="false" classfield_id="g7uLNZkC6OUz" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="0YDAYLnLfVKf" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="0YDAYLnLfVKf" indentLevel="1" text="protected bool m_bResizable;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_32" accessType="0" parent_id="0YDAYLnLfVKf" writeOutText="false" classfield_id="0YDAYLnLfVKf" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_33" accessType="1" parent_id="0YDAYLnLfVKf" writeOutText="false" classfield_id="0YDAYLnLfVKf" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="s7UyVyvVU8d2" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="s7UyVyvVU8d2" indentLevel="1" text="protected QFontMetrics* m_pFontMetrics;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_34" accessType="0" parent_id="s7UyVyvVU8d2" writeOutText="false" classfield_id="s7UyVyvVU8d2" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_35" accessType="1" parent_id="s7UyVyvVU8d2" writeOutText="false" classfield_id="s7UyVyvVU8d2" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="SRN7ufneY1Kw" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="SRN7ufneY1Kw" indentLevel="1" text="protected bool m_bActivated;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_36" accessType="0" parent_id="SRN7ufneY1Kw" writeOutText="false" classfield_id="SRN7ufneY1Kw" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_37" accessType="1" parent_id="SRN7ufneY1Kw" writeOutText="false" classfield_id="SRN7ufneY1Kw" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="rjyn0L5qTZmw" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="rjyn0L5qTZmw" indentLevel="1" text="protected bool m_bIgnoreSnapToGrid;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_38" accessType="0" parent_id="rjyn0L5qTZmw" writeOutText="false" classfield_id="rjyn0L5qTZmw" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_39" accessType="1" parent_id="rjyn0L5qTZmw" writeOutText="false" classfield_id="rjyn0L5qTZmw" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="ViQzo30GSNON" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="ViQzo30GSNON" indentLevel="1" text="protected bool m_bIgnoreSnapComponentSizeToGrid;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_40" accessType="0" parent_id="ViQzo30GSNON" writeOutText="false" classfield_id="ViQzo30GSNON" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_41" accessType="1" parent_id="ViQzo30GSNON" writeOutText="false" classfield_id="ViQzo30GSNON" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="191ZAJT10Rn0" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="191ZAJT10Rn0" indentLevel="1" text="protected UMLWidgetController* m_widgetController;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_42" accessType="0" parent_id="191ZAJT10Rn0" writeOutText="false" classfield_id="191ZAJT10Rn0" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_43" accessType="1" parent_id="191ZAJT10Rn0" writeOutText="false" classfield_id="191ZAJT10Rn0" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="rcdCEBsSYc9k" id="rcdCEBsSYc9k" fileName="Q3CanvasRectangle" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;q3canvasrectangle.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        Q3CanvasRectangle.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:23&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield role_id="0" listClassName="" field_type="2097266" parent_id="6fUJ932AvJ2s" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="6fUJ932AvJ2s" writeOutText="false" indentLevel="1" text="public UMLWidget ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="" accessType="0" parent_id="6fUJ932AvJ2s" writeOutText="false" classfield_id="6fUJ932AvJ2s" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="1" parent_id="6fUJ932AvJ2s" writeOutText="false" classfield_id="6fUJ932AvJ2s" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="2" parent_id="6fUJ932AvJ2s" writeOutText="false" classfield_id="6fUJ932AvJ2s" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="3" parent_id="6fUJ932AvJ2s" writeOutText="false" classfield_id="6fUJ932AvJ2s" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="4" parent_id="6fUJ932AvJ2s" writeOutText="false" classfield_id="6fUJ932AvJ2s" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="FEfNJDfJy0pc" id="FEfNJDfJy0pc" fileName="UMLWidgetController_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLWidgetController_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:23&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="bJaVxv3ryl7z" id="bJaVxv3ryl7z" fileName="const_UMLWidget_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        const_UMLWidget_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:24&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="MlMHCMSzWsA1" id="MlMHCMSzWsA1" fileName="UMLWidget_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLWidget_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:24&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="3DFEv8HDDIiB" id="3DFEv8HDDIiB" fileName="QMouseEvent" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QMouseEvent.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:24&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="Djq4E868vjAX" id="Djq4E868vjAX" fileName="QMouseEvent_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QMouseEvent_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:24&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="IYULWnMIKRRm" id="IYULWnMIKRRm" fileName="IDChangeLog_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        IDChangeLog_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:25&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="YZbub5iXYIGl" id="YZbub5iXYIGl" fileName="QPoint" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QPoint.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:25&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="EdGiS5i5Fz0r" id="EdGiS5i5Fz0r" fileName="const_QPoint_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        const_QPoint_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:25&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="PaBf5DVgvqku" id="PaBf5DVgvqku" fileName="QPainter_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QPainter_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:25&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="VF5oKdz9stpb" id="VF5oKdz9stpb" fileName="AssociationWidget_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        AssociationWidget_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:26&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="CH8Z3fFOA3cZ" id="CH8Z3fFOA3cZ" fileName="AssociationWidgetList_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        AssociationWidgetList_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:26&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="E9cmojNRX4Mr" id="E9cmojNRX4Mr" fileName="ListPopupMenu_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        ListPopupMenu_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:27&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="50d88YYA5C8x" id="50d88YYA5C8x" fileName="QPainter_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QPainter_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:27&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="OP2guF5w0f4t" id="OP2guF5w0f4t" fileName="QMoveEvent_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QMoveEvent_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:28&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="c8JyELv7Nrlc" id="c8JyELv7Nrlc" fileName="int_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        int_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:28&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="fLSokCZ5xXd4" id="fLSokCZ5xXd4" fileName="QSize" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QSize.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:28&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Xm2rXXJVq8Z0" fileExt=".cpp" parent_class="eoUlavDDEd1y" id="eoUlavDDEd1y" fileName="FontType" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        FontType.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:29&amp;#010;The original location of this file is UMLWidget&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="CJPsm1i1vUbB" id="CJPsm1i1vUbB" fileName="QFontMetrics_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QFontMetrics_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:29&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="7F26fejoFbC4" id="7F26fejoFbC4" fileName="QFont_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QFont_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:29&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="oMiz0GbbwUdl" id="oMiz0GbbwUdl" fileName="UMLDoc_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLDoc_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:30&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="ltEgNrP4wJNK" id="ltEgNrP4wJNK" fileName="QFontMetrics_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QFontMetrics_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:30&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="6hxMGqTohpou" id="6hxMGqTohpou" fileName="QAction" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QAction.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:30&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="YC7RYuSE9Stn" id="YC7RYuSE9Stn" fileName="QAction_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QAction_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:30&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="BXYb60nz4mvi" id="BXYb60nz4mvi" fileName="AlignToolBar" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        AlignToolBar.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:32&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="23T1g7UXrEXj" id="23T1g7UXrEXj" fileName="CodeDocument" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        CodeDocument.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:32&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="jmP4cB2lgYKm" id="jmP4cB2lgYKm" fileName="CodeGenerator" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        CodeGenerator.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:32&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="Y7mcsfIsijtN" id="Y7mcsfIsijtN" fileName="CodeGenPolicyExt" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        CodeGenPolicyExt.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:32&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="qNugaPNJBnNl" id="qNugaPNJBnNl" fileName="DocWindow" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        DocWindow.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:32&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="wOWdwrNVw75o" id="wOWdwrNVw75o" fileName="UMLClassifier" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;umlclassifier.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod role_id="0" tag="hblock_tag_0" accessType="0" parent_id="hHQtcEd7mnhT" writeOutText="false" classfield_id="hHQtcEd7mnhT" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_1" accessType="1" parent_id="hHQtcEd7mnhT" writeOutText="false" classfield_id="hHQtcEd7mnhT" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_2" accessType="2" parent_id="hHQtcEd7mnhT" writeOutText="false" classfield_id="hHQtcEd7mnhT" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_3" accessType="3" parent_id="hHQtcEd7mnhT" writeOutText="false" classfield_id="hHQtcEd7mnhT" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_4" accessType="4" parent_id="hHQtcEd7mnhT" writeOutText="false" classfield_id="hHQtcEd7mnhT" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLClassifier.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:54&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield role_id="1" listClassName="" field_type="0" parent_id="hHQtcEd7mnhT" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="hHQtcEd7mnhT" writeOutText="false" indentLevel="1" text="public UMLPackage ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="hblock_tag_0" accessType="0" parent_id="hHQtcEd7mnhT" writeOutText="false" classfield_id="hHQtcEd7mnhT" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_1" accessType="1" parent_id="hHQtcEd7mnhT" writeOutText="false" classfield_id="hHQtcEd7mnhT" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_2" accessType="2" parent_id="hHQtcEd7mnhT" writeOutText="false" classfield_id="hHQtcEd7mnhT" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_3" accessType="3" parent_id="hHQtcEd7mnhT" writeOutText="false" classfield_id="hHQtcEd7mnhT" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_4" accessType="4" parent_id="hHQtcEd7mnhT" writeOutText="false" classfield_id="hHQtcEd7mnhT" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="nMgV5ZqwviaV" id="nMgV5ZqwviaV" fileName="UMLListView" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLListView.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:33&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="7xmHi72fVXGS" id="7xmHi72fVXGS" fileName="WorkToolBar" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        WorkToolBar.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:33&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="MdvIly5WKjzQ" id="MdvIly5WKjzQ" fileName="SettingsDlg" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        SettingsDlg.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:33&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="HqKCYsfepPvW" id="HqKCYsfepPvW" fileName="UMLViewImageExporterAll" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLViewImageExporterAll.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:33&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="Wv90SPQm0L5j" id="Wv90SPQm0L5j" fileName="RefactoringAssistant" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;refactoringassistant.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks>
        <codeoperation tag="operation_W13Ujpb5cFSp" parent_id="W13Ujpb5cFSp" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_zTFOPCU8hfRQ" parent_id="zTFOPCU8hfRQ" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation tag="operation_JZq5C6WNxHJ3" parent_id="JZq5C6WNxHJ3" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_tUqa7HzOopR1" parent_id="tUqa7HzOopR1" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_tvOqDgs3fBkH" parent_id="tvOqDgs3fBkH" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_3EsOvp9mHxLP" parent_id="3EsOvp9mHxLP" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_DKl17D008NrJ" parent_id="DKl17D008NrJ" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_3hNgs7xvJnJC" parent_id="3hNgs7xvJnJC" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_dQyuMJHXb3Yi" parent_id="dQyuMJHXb3Yi" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_EZhKwYexD1d3" parent_id="EZhKwYexD1d3" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_6bwNMDZzeVuy" parent_id="6bwNMDZzeVuy" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_hMyJrqHezk1A" parent_id="hMyJrqHezk1A" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_et3be4lQAKk2" parent_id="et3be4lQAKk2" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_yl4YZgxBZ0mD" parent_id="yl4YZgxBZ0mD" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_M4bOnU8lDAHk" parent_id="M4bOnU8lDAHk" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_SnXIIGtcKU05" parent_id="SnXIIGtcKU05" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_ceVhqN4H710J" parent_id="ceVhqN4H710J" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_Zg5OPA9wmEGf" parent_id="Zg5OPA9wmEGf" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_ziJjwXOE0UIB" parent_id="ziJjwXOE0UIB" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_Q5RNu0irizac" parent_id="Q5RNu0irizac" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_59xl6YNcSB4t" parent_id="59xl6YNcSB4t" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_oCqkmJVsIo9d" parent_id="oCqkmJVsIo9d" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_DsXGnuAXf6sz" parent_id="DsXGnuAXf6sz" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_yDmDngYwT8sb" parent_id="yDmDngYwT8sb" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="wDZQJR1FBwnQ" writeOutText="false" classfield_id="wDZQJR1FBwnQ" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="wDZQJR1FBwnQ" writeOutText="false" classfield_id="wDZQJR1FBwnQ" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_2" accessType="0" parent_id="RlyfhYfR3Dnb" writeOutText="false" classfield_id="RlyfhYfR3Dnb" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_3" accessType="1" parent_id="RlyfhYfR3Dnb" writeOutText="false" classfield_id="RlyfhYfR3Dnb" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_4" accessType="0" parent_id="nJ5dckFWvmuF" writeOutText="false" classfield_id="nJ5dckFWvmuF" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_5" accessType="1" parent_id="nJ5dckFWvmuF" writeOutText="false" classfield_id="nJ5dckFWvmuF" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_6" accessType="0" parent_id="VJGrXKIuvU1n" writeOutText="false" classfield_id="VJGrXKIuvU1n" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_7" accessType="1" parent_id="VJGrXKIuvU1n" writeOutText="false" classfield_id="VJGrXKIuvU1n" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeoperation tag="operation_ScY0kSgsiim3" parent_id="ScY0kSgsiim3" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_c3TYVSJy5swn" parent_id="c3TYVSJy5swn" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        RefactoringAssistant.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 22:17:58&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield role_id="1" listClassName="" field_type="23" parent_id="H7HBUneS0ho7" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="H7HBUneS0ho7" writeOutText="false" indentLevel="1" text="public QTreeWidget ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="H7HBUneS0ho7" writeOutText="false" classfield_id="H7HBUneS0ho7" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="H7HBUneS0ho7" writeOutText="false" classfield_id="H7HBUneS0ho7" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="H7HBUneS0ho7" writeOutText="false" classfield_id="H7HBUneS0ho7" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="H7HBUneS0ho7" writeOutText="false" classfield_id="H7HBUneS0ho7" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="H7HBUneS0ho7" writeOutText="false" classfield_id="H7HBUneS0ho7" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="wDZQJR1FBwnQ" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="wDZQJR1FBwnQ" indentLevel="1" text="protected UMLClassifier* m_umlObject;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="wDZQJR1FBwnQ" writeOutText="false" classfield_id="wDZQJR1FBwnQ" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="wDZQJR1FBwnQ" writeOutText="false" classfield_id="wDZQJR1FBwnQ" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="RlyfhYfR3Dnb" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="RlyfhYfR3Dnb" indentLevel="1" text="protected UMLDoc* m_doc;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_2" accessType="0" parent_id="RlyfhYfR3Dnb" writeOutText="false" classfield_id="RlyfhYfR3Dnb" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_3" accessType="1" parent_id="RlyfhYfR3Dnb" writeOutText="false" classfield_id="RlyfhYfR3Dnb" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="nJ5dckFWvmuF" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="nJ5dckFWvmuF" indentLevel="1" text="protected QMenu* m_menu;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_4" accessType="0" parent_id="nJ5dckFWvmuF" writeOutText="false" classfield_id="nJ5dckFWvmuF" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_5" accessType="1" parent_id="nJ5dckFWvmuF" writeOutText="false" classfield_id="nJ5dckFWvmuF" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="121" parent_id="hNGcAApJ4Igv" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="hNGcAApJ4Igv" writeOutText="false" indentLevel="1" text="public  ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="hNGcAApJ4Igv" writeOutText="false" classfield_id="hNGcAApJ4Igv" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="hNGcAApJ4Igv" writeOutText="false" classfield_id="hNGcAApJ4Igv" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="hNGcAApJ4Igv" writeOutText="false" classfield_id="hNGcAApJ4Igv" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="hNGcAApJ4Igv" writeOutText="false" classfield_id="hNGcAApJ4Igv" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="hNGcAApJ4Igv" writeOutText="false" classfield_id="hNGcAApJ4Igv" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="7209074" parent_id="LhwQzaJU0Uy9" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="LhwQzaJU0Uy9" writeOutText="false" indentLevel="1" text="public QTreeWidgetItem ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="LhwQzaJU0Uy9" writeOutText="false" classfield_id="LhwQzaJU0Uy9" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="LhwQzaJU0Uy9" writeOutText="false" classfield_id="LhwQzaJU0Uy9" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="LhwQzaJU0Uy9" writeOutText="false" classfield_id="LhwQzaJU0Uy9" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="LhwQzaJU0Uy9" writeOutText="false" classfield_id="LhwQzaJU0Uy9" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="LhwQzaJU0Uy9" writeOutText="false" classfield_id="LhwQzaJU0Uy9" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="2097266" parent_id="EmjEGhNonv09" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="EmjEGhNonv09" writeOutText="false" indentLevel="1" text="public UMLObject ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="EmjEGhNonv09" writeOutText="false" classfield_id="EmjEGhNonv09" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="EmjEGhNonv09" writeOutText="false" classfield_id="EmjEGhNonv09" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="EmjEGhNonv09" writeOutText="false" classfield_id="EmjEGhNonv09" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="EmjEGhNonv09" writeOutText="false" classfield_id="EmjEGhNonv09" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="EmjEGhNonv09" writeOutText="false" classfield_id="EmjEGhNonv09" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="6488175" parent_id="lupZpngyME4T" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="lupZpngyME4T" writeOutText="false" indentLevel="1" text="public  ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="lupZpngyME4T" writeOutText="false" classfield_id="lupZpngyME4T" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="lupZpngyME4T" writeOutText="false" classfield_id="lupZpngyME4T" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="lupZpngyME4T" writeOutText="false" classfield_id="lupZpngyME4T" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="lupZpngyME4T" writeOutText="false" classfield_id="lupZpngyME4T" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="lupZpngyME4T" writeOutText="false" classfield_id="lupZpngyME4T" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="VJGrXKIuvU1n" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="VJGrXKIuvU1n" indentLevel="1" text="protected QMap&lt; QTreeWidgetItem *, UMLObject * > m_umlObjectMap;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_6" accessType="0" parent_id="VJGrXKIuvU1n" writeOutText="false" classfield_id="VJGrXKIuvU1n" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_7" accessType="1" parent_id="VJGrXKIuvU1n" writeOutText="false" classfield_id="VJGrXKIuvU1n" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="H8FcrF283KIZ" id="H8FcrF283KIZ" fileName="KPlayerPopupSliderAction" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        KPlayerPopupSliderAction.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:34&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="CxBzM6Vr0crS" id="CxBzM6Vr0crS" fileName="XhtmlGenerator" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        XhtmlGenerator.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:34&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="1HF0aIhrQxTF" id="1HF0aIhrQxTF" fileName="KActionMenu" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        KActionMenu.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:34&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="ATOBlgixcuxw" id="ATOBlgixcuxw" fileName="KRecentFilesAction" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        KRecentFilesAction.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:34&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="yQny3cR2re0R" id="yQny3cR2re0R" fileName="KToggleAction" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        KToggleAction.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:34&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="uiHIdkXlCtwx" id="uiHIdkXlCtwx" fileName="KTabWidget" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        KTabWidget.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:35&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="YctAWo4VEqTF" id="YctAWo4VEqTF" fileName="KMenu" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        KMenu.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:35&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="SsGKUGjOy0eZ" id="SsGKUGjOy0eZ" fileName="KMenuBar" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        KMenuBar.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:35&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="jCKv3EqbrhjL" id="jCKv3EqbrhjL" fileName="KUndoStack" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        KUndoStack.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:35&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="VoqieIx68BOd" id="VoqieIx68BOd" fileName="QStackedWidget" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QStackedWidget.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:35&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="S8zO8eyroGkr" id="S8zO8eyroGkr" fileName="QToolButton" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QToolButton.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:35&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="TZRKGAfkyUSc" id="TZRKGAfkyUSc" fileName="QCustomEvent" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QCustomEvent.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:36&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="kNhsZ3Tz9TNI" id="kNhsZ3Tz9TNI" fileName="QDockWidget" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QDockWidget.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:36&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="5J7tYqi1P9Jd" id="5J7tYqi1P9Jd" fileName="QVBoxLayout" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QVBoxLayout.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:36&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="KwNIOnt8BY1i" id="KwNIOnt8BY1i" fileName="QKeyEvent" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QKeyEvent.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:36&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="bUhlv210K6rs" id="bUhlv210K6rs" fileName="QMenu" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QMenu.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:36&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="watJjAv16IKT" id="watJjAv16IKT" fileName="QMimeData" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QMimeData.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:37&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="4BbFjaxI3c1y" id="4BbFjaxI3c1y" fileName="QUndoCommand" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QUndoCommand.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:37&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="e2xy7oq1OhJ6" id="e2xy7oq1OhJ6" fileName="QUndoView" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QUndoView.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:37&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="pE7uURNYaylH" id="pE7uURNYaylH" fileName="UMLApp" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;umlapp.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks>
        <codeoperation tag="operation_GGAT8HBSlQKB" parent_id="GGAT8HBSlQKB" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_U2lD46RvxSL6" parent_id="U2lD46RvxSL6" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Standard deconstructor." />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation tag="operation_yhUiCLazNvUm" parent_id="yhUiCLazNvUm" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Get the last created instance of this class." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_Ypfti9fFNItO" parent_id="Ypfti9fFNItO" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Opens a file specified by commandline option." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_iErSnakE4YAl" parent_id="iErSnakE4YAl" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Calls the UMLDoc method to create a new Document." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_XpyL85pdrZRr" parent_id="XpyL85pdrZRr" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns a pointer to the current document connected to the&amp;#010;KMainWindow instance.&amp;#010;Used by the View class to access the document object's methods." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_gZ3l8DUd0Tz9" parent_id="gZ3l8DUd0Tz9" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns a pointer to the list view.&amp;#010;&amp;#010;@return  The listview being used." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_t91uay36knT6" parent_id="t91uay36knT6" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns the toolbar being used.&amp;#010;&amp;#010;@return  The toolbar being used." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_N9G7whBuKibo" parent_id="N9G7whBuKibo" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets whether the program has been modified.&amp;#010;This will change how the program saves/exits.&amp;#010;&amp;#010;@param _m        true - modified." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_22GdRMnoV2wP" parent_id="22GdRMnoV2wP" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Set whether to allow printing.&amp;#010;It will enable/disable the menu/toolbar options.&amp;#010;&amp;#010;@param enable    Set whether to allow printing." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_sUAY3mY4pofG" parent_id="sUAY3mY4pofG" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Set whether to allow printing.&amp;#010;It will enable/disable the menu/toolbar options.&amp;#010;&amp;#010;@param enable    Set whether to allow printing." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_B2msrXOi1WG3" parent_id="B2msrXOi1WG3" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Set whether to allow printing.&amp;#010;It will enable/disable the menu/toolbar options.&amp;#010;&amp;#010;@param enable    Set whether to allow printing." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_QJnSbzHkz3cq" parent_id="QJnSbzHkz3cq" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_zlfymFnLELvg" parent_id="zlfymFnLELvg" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns the undo state.&amp;#010;&amp;#010;@return  True if Undo is enabled." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_XS5sUXkUGPQ3" parent_id="XS5sUXkUGPQ3" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns the redo state.&amp;#010;&amp;#010;@return  True if Redo is enabled." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_9wbbSnfxFjpi" parent_id="9wbbSnfxFjpi" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns the paste state.&amp;#010;&amp;#010;@return  True if Paste is enabled." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_Bsuwl7tu4UWU" parent_id="Bsuwl7tu4UWU" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns the state on Cut/Copy.&amp;#010;&amp;#010;@return  True if Cut/Copy is enabled." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_t8Ef2dyBUq7F" parent_id="t8Ef2dyBUq7F" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Gets the appropriate CodeGenerator.&amp;#010;&amp;#010;@return  Pointer to the CodeGenerator." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_JCcn0j2wjAuB" parent_id="JCcn0j2wjAuB" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Determines if SimpleCodeGenerator is active.&amp;#010;&amp;#010;@return  true if SimpleCodeGenerator is active." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_CSbb7o2QyeDz" parent_id="CSbb7o2QyeDz" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Set the current generator for this app.&amp;#010;If giveWarning is true, then a popup box warning that the&amp;#010;code generation library is out-of-date will show if you&amp;#010;attempt to set the generator to NULL.&amp;#010;&amp;#010;@param gen           Pointer to the CodeGenerator to set.&amp;#010;@param giveWarning   True to enable out-of-date warning." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_pZRmDdlYpeaD" parent_id="pZRmDdlYpeaD" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Creates a new code generator for the given active language.&amp;#010;&amp;#010;@return  Pointer to the CodeGenerator created." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_rgikfDjSmBEx" parent_id="rgikfDjSmBEx" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Auxiliary function for UMLDoc::loadExtensionsFromXMI():&amp;#010;Return the code generator of the given language if it already&amp;#010;exists; if it does not yet exist then create it and return&amp;#010;the newly created generator. It is the caller's responsibility&amp;#010;to load XMI into the newly created generator." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_rBReMgb6d5hF" parent_id="rBReMgb6d5hF" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Call the refactoring assistant on a classifier.&amp;#010;&amp;#010;@param classifier  Pointer to the classifier to refactor." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_6gBijqxqIFjq" parent_id="6gBijqxqIFjq" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Call the code viewing assistant on a given UMLClassifier.&amp;#010;&amp;#010;@param classifier  Pointer to the classifier to view." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_qybaOgfVLpB4" parent_id="qybaOgfVLpB4" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets the state of the view properties menu item.&amp;#010;&amp;#010;@param bState  Boolean, true to enable the view properties item." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_zN0YbxgPtIzI" parent_id="zN0YbxgPtIzI" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns the widget used as the parent for UMLViews.&amp;#010;@return  The main view widget." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_mltc87g5Ugb5" parent_id="mltc87g5Ugb5" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Puts this view to the top of the viewStack, i.e. makes it&amp;#010;visible to the user.&amp;#010;&amp;#010;@param view   Pointer to the UMLView to push." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_QAdRMen6PfjX" parent_id="QAdRMen6PfjX" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Get the current view.&amp;#010;This may return a null pointer (when no view was previously&amp;#010;specified.)&amp;#010;" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_EuXJRJprTSIn" parent_id="EuXJRJprTSIn" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_g0SeaAeKBHWw" parent_id="g0SeaAeKBHWw" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_5AHLFJJwIlas" parent_id="5AHLFJJwIlas" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Carries out the cut/copy command with different action performed&amp;#010;depending on if from view or list view.&amp;#010;Cut/Copy are the same.  It is up to the caller to delete/cut the selection..&amp;#010;&amp;#010;If the operation is successful, the signal sigCutSuccessful() is emitted.&amp;#010;&amp;#010;Callers should connect to this signal to know what to do next." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_VfWnQ4dKFnQi" parent_id="VfWnQ4dKFnQi" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Return the tab widget." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_TbJiOhOo4bcK" parent_id="TbJiOhOo4bcK" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns the current text in the status bar.&amp;#010;&amp;#010;@return The text in the status bar." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_aUR6vO4MzL4M" parent_id="aUR6vO4MzL4M" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns the default code generation policy." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_cAbZVfvU64X6" parent_id="cAbZVfvU64X6" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets the CodeGenPolicyExt object." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_vMIzQp5DfE1Q" parent_id="vMIzQp5DfE1Q" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns the CodeGenPolicyExt object." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_wKiHaB5UWNTw" parent_id="wKiHaB5UWNTw" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Removes all entries from the UndoStack and RedoStack and disables the&amp;#010;undo and redo actions." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_AXApl9Fm5PQE" parent_id="AXApl9Fm5PQE" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Undo last command" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_s7RSr7HnPz40" parent_id="s7RSr7HnPz40" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Redo last 'undoed' command" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_99UfUvZeShRD" parent_id="99UfUvZeShRD" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Execute a command and pushit in the stack." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_PyMqdo1SSzNW" parent_id="PyMqdo1SSzNW" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Begin a U/R command macro" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_EblT57BT3WHh" parent_id="EblT57BT3WHh" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="End an U/R command macro" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_KI9kGUGbugMt" parent_id="KI9kGUGbugMt" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_28XwptnHFD9k" parent_id="28XwptnHFD9k" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_9Uxq4pm4xJyk" parent_id="9Uxq4pm4xJyk" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Event handler to receive custom events.&amp;#010;It handles events such as exporting all views from command line (in&amp;#010;that case, it executes the exportAllViews method in the event)." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_TyRcYSLjzLrG" parent_id="TyRcYSLjzLrG" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Helper method for handling cursor key release events (refactoring)." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_sAYFUPWxLxZs" parent_id="sAYFUPWxLxZs" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Save general Options like all bar positions and status&amp;#010;as well as the geometry and the recent file list to&amp;#010;the configuration file." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_NsbMBQcaCGam" parent_id="NsbMBQcaCGam" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Read general Options again and initialize all variables&amp;#010;like the recent file list." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_691vOp4HzcWT" parent_id="691vOp4HzcWT" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Initializes the KActions and the status bar of the application &amp;#010;and calls setupGUI()." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_z2OIxvAKnlew" parent_id="z2OIxvAKnlew" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets up the statusbar for the main window by&amp;#010;initialzing a statuslabel." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_CEWMS48YE7Uc" parent_id="CEWMS48YE7Uc" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Creates the centerwidget of the KMainWindow instance and&amp;#010;sets it as the view." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_wWtt6NM5NkLK" parent_id="wWtt6NM5NkLK" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="queryClose is called by KMainWindow on each closeEvent of a&amp;#010;window. Counter to the default implementation (which only&amp;#010;returns true), this calls saveModified() on the document object&amp;#010;to ask if the document shall be saved if Modified; on cancel&amp;#010;the closeEvent is rejected.&amp;#010;@see KMainWindow#queryClose&amp;#010;@see KMainWindow#closeEvent&amp;#010;&amp;#010;@return  True if window may be closed." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_wsRAzvkuPcnV" parent_id="wsRAzvkuPcnV" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="queryExit is called by KMainWindow when the last&amp;#010;window of the application is going to be closed during&amp;#010;the closeEvent().  In contrast to the default&amp;#010;implementation that just returns true, this calls&amp;#010;saveOptions() to save the settings of the last&amp;#010;window's properties.&amp;#010;@see KMainWindow#queryExit&amp;#010;@see KMainWindow#closeEvent&amp;#010;&amp;#010;@return  True if window may be closed." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_WF2z5mt1eK9b" parent_id="WF2z5mt1eK9b" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Saves the window properties for each open window&amp;#010;during session end to the session config file,&amp;#010;including saving the currently opened file by a&amp;#010;temporary filename provided by KApplication.&amp;#010;@see KMainWindow#saveProperties" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_CCmZmamF2U3j" parent_id="CCmZmamF2U3j" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Reads the session config file and restores the&amp;#010;application's state including the last opened files and&amp;#010;documents by reading the temporary files saved by&amp;#010;saveProperties()&amp;#010;@see KMainWindow#readProperties" />
         </header>
        </codeoperation>
        <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="EpREJUyNvvEq" writeOutText="false" classfield_id="EpREJUyNvvEq" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="EpREJUyNvvEq" writeOutText="false" classfield_id="EpREJUyNvvEq" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeoperation tag="operation_62xJgwtOL1wg" parent_id="62xJgwtOL1wg" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Updates the Menu for language selection and sets the&amp;#010;active language. If no active language is found or if it is&amp;#010;not one of the registered languages it tries to fall back&amp;#010;to Cpp" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_suboqqcusaDY" parent_id="suboqqcusaDY" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Reads the activeLanguage from the KConfig and calls updateLangSelectMenu()" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_W4ur5oWMce75" parent_id="W4ur5oWMce75" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Runs the code generation wizard." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_o4lmSi2Lae7O" parent_id="o4lmSi2Lae7O" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Clears the document in the actual view to reuse it as the new&amp;#010;document." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_UhGKHRrmVjbb" parent_id="UhGKHRrmVjbb" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Open a file and load it into the document." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_Y5x8j3BW7xIa" parent_id="Y5x8j3BW7xIa" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Opens a file from the recent files menu." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_GahlJIMpOIv5" parent_id="GahlJIMpOIv5" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Save a document." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_L7bQ4tyhErsA" parent_id="L7bQ4tyhErsA" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Save a document by a new filename." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_LZzhrsnAzOa3" parent_id="LZzhrsnAzOa3" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Asks for saving if the file is modified, then closes the current&amp;#010;file and window." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_GZiSOZcCx9dC" parent_id="GZiSOZcCx9dC" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Print the current file." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_RzfJ2sTLRQ3I" parent_id="RzfJ2sTLRQ3I" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Closes all open windows by calling close() on each&amp;#010;memberList item until the list is empty, then quits the&amp;#010;application.  If queryClose() returns false because the&amp;#010;user canceled the saveModified() dialog, the closing&amp;#010;aborts." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_IqSGC0HSX0sw" parent_id="IqSGC0HSX0sw" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Exports the current model to docbook in a subdir of the&amp;#010;current model directory named from the model name.&amp;#010;@todo Let the user chose the destination directory and&amp;#010;name, using network transparency." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_XV6Uchf4gINg" parent_id="XV6Uchf4gINg" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Exports the current model to XHTML in a subdir of the&amp;#010;current model directory named from the model name.&amp;#010;@todo Let the user chose the destination directory and&amp;#010;name, using network transparency." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_Ao1ZC4rTsHj3" parent_id="Ao1ZC4rTsHj3" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Put the marked text/object into the clipboard and remove&amp;#010;it from the document." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_GyTnwMhTpnwR" parent_id="GyTnwMhTpnwR" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Put the marked text/object into the clipboard." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_SbV8rrm0doZq" parent_id="SbV8rrm0doZq" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Paste the clipboard into the document." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_sPHjg0muwFit" parent_id="sPHjg0muwFit" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Changes the statusbar contents for the standard label&amp;#010;permanently, used to indicate current actions.&amp;#010;@param text   The text that is displayed in the statusbar" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_CWhqKEeBdvuI" parent_id="CWhqKEeBdvuI" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Create this view." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_teCptuiTI3tT" parent_id="teCptuiTI3tT" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Create this view." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_Lj4B5oqFJV5b" parent_id="Lj4B5oqFJV5b" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Create this view." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_jhkNcefVGrJ8" parent_id="jhkNcefVGrJ8" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Create this view." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_k1b24UTOCXXF" parent_id="k1b24UTOCXXF" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Create this view." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_KNUbsYCZFxws" parent_id="KNUbsYCZFxws" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Create this view." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_ZZLoPew9gX9i" parent_id="ZZLoPew9gX9i" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Create this view." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_za6B5dQPytyo" parent_id="za6B5dQPytyo" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Create this view." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_R9Og6KYdssRH" parent_id="R9Og6KYdssRH" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Create this view." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_WNOCsXvs7z1C" parent_id="WNOCsXvs7z1C" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Left Alignment" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_bQaZJWOkfmOl" parent_id="bQaZJWOkfmOl" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Right Alignment" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_4vNwnmDJAbU0" parent_id="4vNwnmDJAbU0" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Top Alignment" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_6NsBMuMxKuXb" parent_id="6NsBMuMxKuXb" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Bottom Alignment" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_QtJ6fhpjaCeN" parent_id="QtJ6fhpjaCeN" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Vertical Middle Alignment" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_zrf7R97VUyhq" parent_id="zrf7R97VUyhq" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Horizontal Middle Alignment" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_s3mAxHjNA2Tn" parent_id="s3mAxHjNA2Tn" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Vertical Distribute Alignment" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_hHUIT8fQyKXP" parent_id="hHUIT8fQyKXP" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Horizontal Distribute Alignment" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_RduvbZkRaWbX" parent_id="RduvbZkRaWbX" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Notification of changed clipboard data." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_lItvKKg1bAJ3" parent_id="lItvKKg1bAJ3" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Slot for enabling cut and copy to clipboard." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_JxTFHzehcWcD" parent_id="JxTFHzehcWcD" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Shows the global preferences dialog." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_6KcgqBCbT3Un" parent_id="6KcgqBCbT3Un" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Commits the changes from the global preferences dialog." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_NAoxL60c3RrI" parent_id="NAoxL60c3RrI" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Register new views (aka diagram) with the GUI so they show up&amp;#010;in the menu." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_QTz2xaD3upij" parent_id="QTz2xaD3upij" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Generate code for all classes." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_0sITvnEGv1BE" parent_id="0sITvnEGv1BE" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Set the language for which code will be generated.&amp;#010;&amp;#010;@param pl    The name of the language to set" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_wF5q3nX3dqVW" parent_id="wF5q3nX3dqVW" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Get the language for import and code generation." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_FMiLikPeyVS1" parent_id="FMiLikPeyVS1" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Return true if the active language is case sensitive." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_4gl8GenTyVmg" parent_id="4gl8GenTyVmg" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Return the target language depedent scope separator." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_h8wuFrpHWYPk" parent_id="h8wuFrpHWYPk" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Return the default code generation language as configured by KConfig.&amp;#010;If the activeLanguage is not found in the KConfig then use Uml::pl_Cpp&amp;#010;as the default." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_rBeaMN53T1xh" parent_id="rBeaMN53T1xh" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Menu selection for clear current view." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_rlyLJM5WWIgA" parent_id="rlyLJM5WWIgA" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Menu selection for current view snap to grid property." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_FW0Pe29UBn4Y" parent_id="FW0Pe29UBn4Y" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Menu selection for current view show grid property." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_B8Ze7VJwGGHX" parent_id="B8Ze7VJwGGHX" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Menu selection for exporting current view as an image." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_aM26ciFsCFFq" parent_id="aM26ciFsCFFq" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Menu selection for exporting all views as images." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_GOIRCNxNTVza" parent_id="GOIRCNxNTVza" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Menu selection for current view properties." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_yHXEXoj79lBl" parent_id="yHXEXoj79lBl" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Import classes menu selection." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_RQbdeqSuFkJP" parent_id="RQbdeqSuFkJP" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Import project menu selection." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_5FkYkh9iyguV" parent_id="5FkYkh9iyguV" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class wizard menu selection." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_SbcbLoLmCuOq" parent_id="SbcbLoLmCuOq" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Calls the active code generator to add its default datatypes." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_lqiyY2NeH7Az" parent_id="lqiyY2NeH7Az" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="The displayed diagram has changed." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_oJfnxXGO8rxT" parent_id="oJfnxXGO8rxT" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="The snap to grid value has been changed." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_MFcdKna64Dr0" parent_id="MFcdKna64Dr0" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="The show grid value has been changed." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_81hYMXXim7K4" parent_id="81hYMXXim7K4" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Select all widgets on the current diagram." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_uuAx62xq8Lf5" parent_id="uuAx62xq8Lf5" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Deletes the selected widget." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_eyfEU0zd2e9O" parent_id="eyfEU0zd2e9O" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Deletes the current diagram.&amp;#010;@param tab   Widget's tab to close" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_8aDGttLYrymL" parent_id="8aDGttLYrymL" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Set the zoom factor of the current diagram.&amp;#010;&amp;#010;@param zoom  Zoom factor in percentage." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_nRF4ZqTfRfvK" parent_id="nRF4ZqTfRfvK" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Set the zoom factor of the current diagram.&amp;#010;&amp;#010;@param action  Action which is called." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_hPHRolycADgh" parent_id="hPHRolycADgh" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Connected to by the KPlayerSliderAction zoomAction, a value of between 300&amp;#010;and 2200 is scaled to zoom to between 9% and 525%.&amp;#010;The min and max values of the slider are hard coded in KPlayerSliderAction for now." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_EIlZtqJYGay2" parent_id="EIlZtqJYGay2" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Set zoom to 100%." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_JwcT7HA8PWb8" parent_id="JwcT7HA8PWb8" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Prepares the zoom menu for display." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_lKPEv1rAHdh9" parent_id="lKPEv1rAHdh9" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Reverts the document back to the state it was prior to the&amp;#010;last action performed by the user." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_R0hfZfisbIKi" parent_id="R0hfZfisbIKi" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Reverts the document back to the state it was prior to the&amp;#010;last undo." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_ZSpwzO4iiTxd" parent_id="ZSpwzO4iiTxd" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Searches for a menu with the given name.&amp;#010;&amp;#010;@param name  The name of the menu to search for (name, not text)" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_DU9e3ZdFiS29" parent_id="DU9e3ZdFiS29" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Called when the tab has changed.&amp;#010;@param tab   The changed tab widget" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_CuO8g0StUZVV" parent_id="CuO8g0StUZVV" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Make the tab on the left of the current one the active one." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_76kpYny7H5I7" parent_id="76kpYny7H5I7" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Make the tab on the right of the current one the active one." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_83bA1TfBN1H1" parent_id="83bA1TfBN1H1" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Move the current tab left." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_1isUFNzMSiB0" parent_id="1isUFNzMSiB0" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Move the current tab right." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_T76kDOpJPRTQ" parent_id="T76kDOpJPRTQ" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_a5pBBSzf49YN" parent_id="a5pBBSzf49YN" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="This slot deletes the current XHTML documentation generator as soon as&amp;#010;this one signals that it has finished.&amp;#010;@param status true if successful else false" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_zeNWOCCzI18T" parent_id="zeNWOCCzI18T" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Slots for connection to the QActions of the m_langSelect menu." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_R56TCdog3xdQ" parent_id="R56TCdog3xdQ" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_ZCAZleIjIdFf" parent_id="ZCAZleIjIdFf" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_nPe5OmXppbI1" parent_id="nPe5OmXppbI1" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_E7fG2IebVo9E" parent_id="E7fG2IebVo9E" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_QRxj2COpb0tx" parent_id="QRxj2COpb0tx" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_kOmZz3YC8EQA" parent_id="kOmZz3YC8EQA" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_U4jxqsCFH7wJ" parent_id="U4jxqsCFH7wJ" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_II7rI0p0ObZL" parent_id="II7rI0p0ObZL" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_c5XkHvsmzcho" parent_id="c5XkHvsmzcho" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_Sr3kzz1HH88X" parent_id="Sr3kzz1HH88X" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_8vXUV4q77NqP" parent_id="8vXUV4q77NqP" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_HiBGIq2li3Th" parent_id="HiBGIq2li3Th" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_0UwHb2mhyJCT" parent_id="0UwHb2mhyJCT" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_L2aTNOse71tN" parent_id="L2aTNOse71tN" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_pv6XzZEx2AFb" parent_id="pv6XzZEx2AFb" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_BzI9HUccUA3s" parent_id="BzI9HUccUA3s" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_ZtWesPziJ6FG" parent_id="ZtWesPziJ6FG" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_dSDdaQElQVuf" parent_id="dSDdaQElQVuf" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeaccessormethod tag="hblock_tag_2" accessType="0" parent_id="zUFUfJKCCqo5" writeOutText="false" classfield_id="zUFUfJKCCqo5" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_3" accessType="1" parent_id="zUFUfJKCCqo5" writeOutText="false" classfield_id="zUFUfJKCCqo5" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_4" accessType="0" parent_id="EllVr0lTSw43" writeOutText="false" classfield_id="EllVr0lTSw43" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_5" accessType="1" parent_id="EllVr0lTSw43" writeOutText="false" classfield_id="EllVr0lTSw43" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_6" accessType="0" parent_id="LJolmjOjDdBq" writeOutText="false" classfield_id="LJolmjOjDdBq" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_7" accessType="1" parent_id="LJolmjOjDdBq" writeOutText="false" classfield_id="LJolmjOjDdBq" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeoperation tag="operation_wV07KmAWYv1N" parent_id="wV07KmAWYv1N" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Helper method to create the zoom actions." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_IXZSiKObQ4fA" parent_id="IXZSiKObQ4fA" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Helper method to reset the status bar message." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_vZrFScu6Y4HO" parent_id="vZrFScu6Y4HO" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Helper method to setup the programming language action." />
         </header>
        </codeoperation>
        <codeaccessormethod tag="hblock_tag_8" accessType="0" parent_id="tPQceJ4Db5Bw" writeOutText="false" classfield_id="tPQceJ4Db5Bw" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_9" accessType="1" parent_id="tPQceJ4Db5Bw" writeOutText="false" classfield_id="tPQceJ4Db5Bw" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_10" accessType="0" parent_id="jJ9xGbbpvLvH" writeOutText="false" classfield_id="jJ9xGbbpvLvH" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_11" accessType="1" parent_id="jJ9xGbbpvLvH" writeOutText="false" classfield_id="jJ9xGbbpvLvH" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_12" accessType="0" parent_id="IPs41a2sxRVa" writeOutText="false" classfield_id="IPs41a2sxRVa" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_13" accessType="1" parent_id="IPs41a2sxRVa" writeOutText="false" classfield_id="IPs41a2sxRVa" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeoperation tag="operation_kZlLdwGMDPJT" parent_id="kZlLdwGMDPJT" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text=" Returns whether we can decode the given mimesource" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_smKRpr1PQSvQ" parent_id="smKRpr1PQSvQ" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Reads from the config file the options state.&amp;#010;Not in @ref readOptions as it needs to be read earlier than some&amp;#010;of the other options, before some items are created." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_Q18utC0fWTeD" parent_id="Q18utC0fWTeD" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Initialize Qt's global clipboard support for the application." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_C3wrlWfdJy48" parent_id="C3wrlWfdJy48" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Initialize code generators at startup.&amp;#010;Why is this important? Because IF we don't do this, then changes&amp;#010;to the UML may not be synced with the saved code generation params&amp;#010;for those languages which arent currently active." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_p4XDWRbvSjpJ" parent_id="p4XDWRbvSjpJ" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="import the source files that are in fileList" />
         </header>
        </codeoperation>
        <codeaccessormethod tag="hblock_tag_14" accessType="0" parent_id="mUTsRNSspwjz" writeOutText="false" classfield_id="mUTsRNSspwjz" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_15" accessType="1" parent_id="mUTsRNSspwjz" writeOutText="false" classfield_id="mUTsRNSspwjz" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_16" accessType="0" parent_id="Et3K0WfiaP3B" writeOutText="false" classfield_id="Et3K0WfiaP3B" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_17" accessType="1" parent_id="Et3K0WfiaP3B" writeOutText="false" classfield_id="Et3K0WfiaP3B" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_18" accessType="0" parent_id="RlpNRpCDJf3l" writeOutText="false" classfield_id="RlpNRpCDJf3l" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_19" accessType="1" parent_id="RlpNRpCDJf3l" writeOutText="false" classfield_id="RlpNRpCDJf3l" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_20" accessType="0" parent_id="0UboOIncBpvC" writeOutText="false" classfield_id="0UboOIncBpvC" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_21" accessType="1" parent_id="0UboOIncBpvC" writeOutText="false" classfield_id="0UboOIncBpvC" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_22" accessType="0" parent_id="mwI3aJoYlNM9" writeOutText="false" classfield_id="mwI3aJoYlNM9" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_23" accessType="1" parent_id="mwI3aJoYlNM9" writeOutText="false" classfield_id="mwI3aJoYlNM9" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_24" accessType="0" parent_id="f8mrvf1GDrBB" writeOutText="false" classfield_id="f8mrvf1GDrBB" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_25" accessType="1" parent_id="f8mrvf1GDrBB" writeOutText="false" classfield_id="f8mrvf1GDrBB" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_26" accessType="0" parent_id="lGZODLSzGk0q" writeOutText="false" classfield_id="lGZODLSzGk0q" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_27" accessType="1" parent_id="lGZODLSzGk0q" writeOutText="false" classfield_id="lGZODLSzGk0q" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_28" accessType="0" parent_id="2nOnAjvqpffk" writeOutText="false" classfield_id="2nOnAjvqpffk" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_29" accessType="1" parent_id="2nOnAjvqpffk" writeOutText="false" classfield_id="2nOnAjvqpffk" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_30" accessType="0" parent_id="Ke0XV9hGQGeb" writeOutText="false" classfield_id="Ke0XV9hGQGeb" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_31" accessType="1" parent_id="Ke0XV9hGQGeb" writeOutText="false" classfield_id="Ke0XV9hGQGeb" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_32" accessType="0" parent_id="Z7YppYfrL2dW" writeOutText="false" classfield_id="Z7YppYfrL2dW" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_33" accessType="1" parent_id="Z7YppYfrL2dW" writeOutText="false" classfield_id="Z7YppYfrL2dW" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_34" accessType="0" parent_id="NjNlxzMX6uMu" writeOutText="false" classfield_id="NjNlxzMX6uMu" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_35" accessType="1" parent_id="NjNlxzMX6uMu" writeOutText="false" classfield_id="NjNlxzMX6uMu" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_36" accessType="0" parent_id="ZXYAlZH6GcsE" writeOutText="false" classfield_id="ZXYAlZH6GcsE" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_37" accessType="1" parent_id="ZXYAlZH6GcsE" writeOutText="false" classfield_id="ZXYAlZH6GcsE" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_38" accessType="0" parent_id="cfsUH9Ypg4zP" writeOutText="false" classfield_id="cfsUH9Ypg4zP" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_39" accessType="1" parent_id="cfsUH9Ypg4zP" writeOutText="false" classfield_id="cfsUH9Ypg4zP" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_40" accessType="0" parent_id="dEWsoO6Oap0f" writeOutText="false" classfield_id="dEWsoO6Oap0f" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_41" accessType="1" parent_id="dEWsoO6Oap0f" writeOutText="false" classfield_id="dEWsoO6Oap0f" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_42" accessType="0" parent_id="wYF2na9PF0uU" writeOutText="false" classfield_id="wYF2na9PF0uU" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_43" accessType="1" parent_id="wYF2na9PF0uU" writeOutText="false" classfield_id="wYF2na9PF0uU" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_44" accessType="0" parent_id="9QJoSHD4TjwI" writeOutText="false" classfield_id="9QJoSHD4TjwI" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_45" accessType="1" parent_id="9QJoSHD4TjwI" writeOutText="false" classfield_id="9QJoSHD4TjwI" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_46" accessType="0" parent_id="50eepeJjAXlv" writeOutText="false" classfield_id="50eepeJjAXlv" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_47" accessType="1" parent_id="50eepeJjAXlv" writeOutText="false" classfield_id="50eepeJjAXlv" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_48" accessType="0" parent_id="7tLKrDm0d4o3" writeOutText="false" classfield_id="7tLKrDm0d4o3" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_49" accessType="1" parent_id="7tLKrDm0d4o3" writeOutText="false" classfield_id="7tLKrDm0d4o3" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_50" accessType="0" parent_id="L07oj14n1iPq" writeOutText="false" classfield_id="L07oj14n1iPq" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_51" accessType="1" parent_id="L07oj14n1iPq" writeOutText="false" classfield_id="L07oj14n1iPq" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_52" accessType="0" parent_id="uN2VRoYmoeYW" writeOutText="false" classfield_id="uN2VRoYmoeYW" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_53" accessType="1" parent_id="uN2VRoYmoeYW" writeOutText="false" classfield_id="uN2VRoYmoeYW" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_54" accessType="0" parent_id="fbJhHgXcM52a" writeOutText="false" classfield_id="fbJhHgXcM52a" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_55" accessType="1" parent_id="fbJhHgXcM52a" writeOutText="false" classfield_id="fbJhHgXcM52a" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_56" accessType="0" parent_id="P11EfXiK8z1Q" writeOutText="false" classfield_id="P11EfXiK8z1Q" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_57" accessType="1" parent_id="P11EfXiK8z1Q" writeOutText="false" classfield_id="P11EfXiK8z1Q" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_58" accessType="0" parent_id="fX01c2b1RSZW" writeOutText="false" classfield_id="fX01c2b1RSZW" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_59" accessType="1" parent_id="fX01c2b1RSZW" writeOutText="false" classfield_id="fX01c2b1RSZW" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_60" accessType="0" parent_id="vAUjly0AzzMe" writeOutText="false" classfield_id="vAUjly0AzzMe" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_61" accessType="1" parent_id="vAUjly0AzzMe" writeOutText="false" classfield_id="vAUjly0AzzMe" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_62" accessType="0" parent_id="W4xf1y3gT3g6" writeOutText="false" classfield_id="W4xf1y3gT3g6" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_63" accessType="1" parent_id="W4xf1y3gT3g6" writeOutText="false" classfield_id="W4xf1y3gT3g6" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_64" accessType="0" parent_id="5F5UhezaoTJZ" writeOutText="false" classfield_id="5F5UhezaoTJZ" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_65" accessType="1" parent_id="5F5UhezaoTJZ" writeOutText="false" classfield_id="5F5UhezaoTJZ" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_66" accessType="0" parent_id="tRlMURQXgW0M" writeOutText="false" classfield_id="tRlMURQXgW0M" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_67" accessType="1" parent_id="tRlMURQXgW0M" writeOutText="false" classfield_id="tRlMURQXgW0M" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_68" accessType="0" parent_id="AzwxQEUnTCAi" writeOutText="false" classfield_id="AzwxQEUnTCAi" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_69" accessType="1" parent_id="AzwxQEUnTCAi" writeOutText="false" classfield_id="AzwxQEUnTCAi" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_70" accessType="0" parent_id="DARI4nOxC7Ie" writeOutText="false" classfield_id="DARI4nOxC7Ie" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_71" accessType="1" parent_id="DARI4nOxC7Ie" writeOutText="false" classfield_id="DARI4nOxC7Ie" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_72" accessType="0" parent_id="Yi9DC9ZN6TIW" writeOutText="false" classfield_id="Yi9DC9ZN6TIW" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_73" accessType="1" parent_id="Yi9DC9ZN6TIW" writeOutText="false" classfield_id="Yi9DC9ZN6TIW" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_74" accessType="0" parent_id="zoaBuspSZwdl" writeOutText="false" classfield_id="zoaBuspSZwdl" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_75" accessType="1" parent_id="zoaBuspSZwdl" writeOutText="false" classfield_id="zoaBuspSZwdl" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_76" accessType="0" parent_id="RFG2RghQSHbK" writeOutText="false" classfield_id="RFG2RghQSHbK" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_77" accessType="1" parent_id="RFG2RghQSHbK" writeOutText="false" classfield_id="RFG2RghQSHbK" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_78" accessType="0" parent_id="8OlhLOQPZXbD" writeOutText="false" classfield_id="8OlhLOQPZXbD" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_79" accessType="1" parent_id="8OlhLOQPZXbD" writeOutText="false" classfield_id="8OlhLOQPZXbD" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_80" accessType="0" parent_id="vGU4Fv8h8Mja" writeOutText="false" classfield_id="vGU4Fv8h8Mja" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_81" accessType="1" parent_id="vGU4Fv8h8Mja" writeOutText="false" classfield_id="vGU4Fv8h8Mja" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_82" accessType="0" parent_id="0OyRdYljuWQF" writeOutText="false" classfield_id="0OyRdYljuWQF" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_83" accessType="1" parent_id="0OyRdYljuWQF" writeOutText="false" classfield_id="0OyRdYljuWQF" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_84" accessType="0" parent_id="D0n8WBLP0wrK" writeOutText="false" classfield_id="D0n8WBLP0wrK" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_85" accessType="1" parent_id="D0n8WBLP0wrK" writeOutText="false" classfield_id="D0n8WBLP0wrK" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_86" accessType="0" parent_id="8WaYesEeIbl3" writeOutText="false" classfield_id="8WaYesEeIbl3" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_87" accessType="1" parent_id="8WaYesEeIbl3" writeOutText="false" classfield_id="8WaYesEeIbl3" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_88" accessType="0" parent_id="3jv4fnOnHwLt" writeOutText="false" classfield_id="3jv4fnOnHwLt" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_89" accessType="1" parent_id="3jv4fnOnHwLt" writeOutText="false" classfield_id="3jv4fnOnHwLt" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_90" accessType="0" parent_id="oYY59H6nkvsq" writeOutText="false" classfield_id="oYY59H6nkvsq" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_91" accessType="1" parent_id="oYY59H6nkvsq" writeOutText="false" classfield_id="oYY59H6nkvsq" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_92" accessType="0" parent_id="7LeOGxG4Vm7f" writeOutText="false" classfield_id="7LeOGxG4Vm7f" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_93" accessType="1" parent_id="7LeOGxG4Vm7f" writeOutText="false" classfield_id="7LeOGxG4Vm7f" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_94" accessType="0" parent_id="3EQn7Ib4Ghz7" writeOutText="false" classfield_id="3EQn7Ib4Ghz7" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_95" accessType="1" parent_id="3EQn7Ib4Ghz7" writeOutText="false" classfield_id="3EQn7Ib4Ghz7" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_96" accessType="0" parent_id="qVZKHhxKtN60" writeOutText="false" classfield_id="qVZKHhxKtN60" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_97" accessType="1" parent_id="qVZKHhxKtN60" writeOutText="false" classfield_id="qVZKHhxKtN60" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_98" accessType="0" parent_id="df3tM21WR1uD" writeOutText="false" classfield_id="df3tM21WR1uD" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_99" accessType="1" parent_id="df3tM21WR1uD" writeOutText="false" classfield_id="df3tM21WR1uD" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_100" accessType="0" parent_id="16JsRPr42syN" writeOutText="false" classfield_id="16JsRPr42syN" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_101" accessType="1" parent_id="16JsRPr42syN" writeOutText="false" classfield_id="16JsRPr42syN" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_102" accessType="0" parent_id="ounYFwWE2p7T" writeOutText="false" classfield_id="ounYFwWE2p7T" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_103" accessType="1" parent_id="ounYFwWE2p7T" writeOutText="false" classfield_id="ounYFwWE2p7T" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_104" accessType="0" parent_id="HUGD0Q9mIwIX" writeOutText="false" classfield_id="HUGD0Q9mIwIX" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_105" accessType="1" parent_id="HUGD0Q9mIwIX" writeOutText="false" classfield_id="HUGD0Q9mIwIX" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_106" accessType="0" parent_id="GcFg5C1NeIYc" writeOutText="false" classfield_id="GcFg5C1NeIYc" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_107" accessType="1" parent_id="GcFg5C1NeIYc" writeOutText="false" classfield_id="GcFg5C1NeIYc" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_108" accessType="0" parent_id="gfNwZfUPSCH5" writeOutText="false" classfield_id="gfNwZfUPSCH5" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_109" accessType="1" parent_id="gfNwZfUPSCH5" writeOutText="false" classfield_id="gfNwZfUPSCH5" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeoperation tag="operation_1YsmMuLcWYHZ" parent_id="1YsmMuLcWYHZ" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Emitted when a cut operation is successful." />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLApp.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:37&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield role_id="1" listClassName="" field_type="94" parent_id="IkigP1mFDu9i" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="IkigP1mFDu9i" writeOutText="false" indentLevel="1" text="public KXmlGuiWindow ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="IkigP1mFDu9i" writeOutText="false" classfield_id="IkigP1mFDu9i" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="IkigP1mFDu9i" writeOutText="false" classfield_id="IkigP1mFDu9i" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="IkigP1mFDu9i" writeOutText="false" classfield_id="IkigP1mFDu9i" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="IkigP1mFDu9i" writeOutText="false" classfield_id="IkigP1mFDu9i" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="IkigP1mFDu9i" writeOutText="false" classfield_id="IkigP1mFDu9i" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="EpREJUyNvvEq" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="EpREJUyNvvEq" indentLevel="1" text="protected CodeGenerationPolicy* m_commoncodegenpolicy;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="EpREJUyNvvEq" writeOutText="false" classfield_id="EpREJUyNvvEq" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="EpREJUyNvvEq" writeOutText="false" classfield_id="EpREJUyNvvEq" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="zUFUfJKCCqo5" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="zUFUfJKCCqo5" indentLevel="1" text="private UMLApp* s_instance;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_2" accessType="0" parent_id="zUFUfJKCCqo5" writeOutText="false" classfield_id="zUFUfJKCCqo5" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_3" accessType="1" parent_id="zUFUfJKCCqo5" writeOutText="false" classfield_id="zUFUfJKCCqo5" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="EllVr0lTSw43" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="EllVr0lTSw43" indentLevel="1" text="private QMenu* m_langSelect;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_4" accessType="0" parent_id="EllVr0lTSw43" writeOutText="false" classfield_id="EllVr0lTSw43" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_5" accessType="1" parent_id="EllVr0lTSw43" writeOutText="false" classfield_id="EllVr0lTSw43" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="LJolmjOjDdBq" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="LJolmjOjDdBq" indentLevel="1" text="private QMenu* m_zoomSelect;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_6" accessType="0" parent_id="LJolmjOjDdBq" writeOutText="false" classfield_id="LJolmjOjDdBq" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_7" accessType="1" parent_id="LJolmjOjDdBq" writeOutText="false" classfield_id="LJolmjOjDdBq" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="tPQceJ4Db5Bw" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="tPQceJ4Db5Bw" indentLevel="1" text="private Uml::Programming_Language m_activeLanguage;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_8" accessType="0" parent_id="tPQceJ4Db5Bw" writeOutText="false" classfield_id="tPQceJ4Db5Bw" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_9" accessType="1" parent_id="tPQceJ4Db5Bw" writeOutText="false" classfield_id="tPQceJ4Db5Bw" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="jJ9xGbbpvLvH" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="jJ9xGbbpvLvH" indentLevel="1" text="private CodeGenerator* m_codegen;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_10" accessType="0" parent_id="jJ9xGbbpvLvH" writeOutText="false" classfield_id="jJ9xGbbpvLvH" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_11" accessType="1" parent_id="jJ9xGbbpvLvH" writeOutText="false" classfield_id="jJ9xGbbpvLvH" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="IPs41a2sxRVa" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="IPs41a2sxRVa" indentLevel="1" text="private CodeGenPolicyExt* m_policyext;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_12" accessType="0" parent_id="IPs41a2sxRVa" writeOutText="false" classfield_id="IPs41a2sxRVa" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_13" accessType="1" parent_id="IPs41a2sxRVa" writeOutText="false" classfield_id="IPs41a2sxRVa" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="mUTsRNSspwjz" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="mUTsRNSspwjz" indentLevel="1" text="private KSharedConfigPtr m_config;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_14" accessType="0" parent_id="mUTsRNSspwjz" writeOutText="false" classfield_id="mUTsRNSspwjz" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_15" accessType="1" parent_id="mUTsRNSspwjz" writeOutText="false" classfield_id="mUTsRNSspwjz" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="Et3K0WfiaP3B" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="Et3K0WfiaP3B" indentLevel="1" text="private UMLView* m_view;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_16" accessType="0" parent_id="Et3K0WfiaP3B" writeOutText="false" classfield_id="Et3K0WfiaP3B" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_17" accessType="1" parent_id="Et3K0WfiaP3B" writeOutText="false" classfield_id="Et3K0WfiaP3B" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="RlpNRpCDJf3l" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="RlpNRpCDJf3l" indentLevel="1" text="private UMLDoc* m_doc;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_18" accessType="0" parent_id="RlpNRpCDJf3l" writeOutText="false" classfield_id="RlpNRpCDJf3l" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_19" accessType="1" parent_id="RlpNRpCDJf3l" writeOutText="false" classfield_id="RlpNRpCDJf3l" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="0UboOIncBpvC" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="0UboOIncBpvC" indentLevel="1" text="private UMLListView* m_listView;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_20" accessType="0" parent_id="0UboOIncBpvC" writeOutText="false" classfield_id="0UboOIncBpvC" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_21" accessType="1" parent_id="0UboOIncBpvC" writeOutText="false" classfield_id="0UboOIncBpvC" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="mwI3aJoYlNM9" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="mwI3aJoYlNM9" indentLevel="1" text="private QDockWidget* m_mainDock;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_22" accessType="0" parent_id="mwI3aJoYlNM9" writeOutText="false" classfield_id="mwI3aJoYlNM9" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_23" accessType="1" parent_id="mwI3aJoYlNM9" writeOutText="false" classfield_id="mwI3aJoYlNM9" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="f8mrvf1GDrBB" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="f8mrvf1GDrBB" indentLevel="1" text="private QDockWidget* m_listDock;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_24" accessType="0" parent_id="f8mrvf1GDrBB" writeOutText="false" classfield_id="f8mrvf1GDrBB" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_25" accessType="1" parent_id="f8mrvf1GDrBB" writeOutText="false" classfield_id="f8mrvf1GDrBB" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="lGZODLSzGk0q" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="lGZODLSzGk0q" indentLevel="1" text="private QDockWidget* m_documentationDock;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_26" accessType="0" parent_id="lGZODLSzGk0q" writeOutText="false" classfield_id="lGZODLSzGk0q" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_27" accessType="1" parent_id="lGZODLSzGk0q" writeOutText="false" classfield_id="lGZODLSzGk0q" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="2nOnAjvqpffk" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="2nOnAjvqpffk" indentLevel="1" text="private QDockWidget* m_cmdHistoryDock;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_28" accessType="0" parent_id="2nOnAjvqpffk" writeOutText="false" classfield_id="2nOnAjvqpffk" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_29" accessType="1" parent_id="2nOnAjvqpffk" writeOutText="false" classfield_id="2nOnAjvqpffk" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="Ke0XV9hGQGeb" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="Ke0XV9hGQGeb" indentLevel="1" text="private QDockWidget* m_propertyDock;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_30" accessType="0" parent_id="Ke0XV9hGQGeb" writeOutText="false" classfield_id="Ke0XV9hGQGeb" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_31" accessType="1" parent_id="Ke0XV9hGQGeb" writeOutText="false" classfield_id="Ke0XV9hGQGeb" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="Z7YppYfrL2dW" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="Z7YppYfrL2dW" indentLevel="1" text="private DocWindow* m_pDocWindow;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_32" accessType="0" parent_id="Z7YppYfrL2dW" writeOutText="false" classfield_id="Z7YppYfrL2dW" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_33" accessType="1" parent_id="Z7YppYfrL2dW" writeOutText="false" classfield_id="Z7YppYfrL2dW" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="NjNlxzMX6uMu" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="NjNlxzMX6uMu" indentLevel="1" text="private QUndoView* m_pQUndoView;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_34" accessType="0" parent_id="NjNlxzMX6uMu" writeOutText="false" classfield_id="NjNlxzMX6uMu" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_35" accessType="1" parent_id="NjNlxzMX6uMu" writeOutText="false" classfield_id="NjNlxzMX6uMu" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="ZXYAlZH6GcsE" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="ZXYAlZH6GcsE" indentLevel="1" text="private RefactoringAssistant* m_refactoringAssist;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_36" accessType="0" parent_id="ZXYAlZH6GcsE" writeOutText="false" classfield_id="ZXYAlZH6GcsE" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_37" accessType="1" parent_id="ZXYAlZH6GcsE" writeOutText="false" classfield_id="ZXYAlZH6GcsE" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="cfsUH9Ypg4zP" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="cfsUH9Ypg4zP" indentLevel="1" text="private KRecentFilesAction* fileOpenRecent;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_38" accessType="0" parent_id="cfsUH9Ypg4zP" writeOutText="false" classfield_id="cfsUH9Ypg4zP" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_39" accessType="1" parent_id="cfsUH9Ypg4zP" writeOutText="false" classfield_id="cfsUH9Ypg4zP" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="dEWsoO6Oap0f" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="dEWsoO6Oap0f" indentLevel="1" text="private QAction* filePrint;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_40" accessType="0" parent_id="dEWsoO6Oap0f" writeOutText="false" classfield_id="dEWsoO6Oap0f" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_41" accessType="1" parent_id="dEWsoO6Oap0f" writeOutText="false" classfield_id="dEWsoO6Oap0f" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="wYF2na9PF0uU" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="wYF2na9PF0uU" indentLevel="1" text="private QAction* editCut;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_42" accessType="0" parent_id="wYF2na9PF0uU" writeOutText="false" classfield_id="wYF2na9PF0uU" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_43" accessType="1" parent_id="wYF2na9PF0uU" writeOutText="false" classfield_id="wYF2na9PF0uU" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="9QJoSHD4TjwI" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="9QJoSHD4TjwI" indentLevel="1" text="private QAction* editCopy;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_44" accessType="0" parent_id="9QJoSHD4TjwI" writeOutText="false" classfield_id="9QJoSHD4TjwI" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_45" accessType="1" parent_id="9QJoSHD4TjwI" writeOutText="false" classfield_id="9QJoSHD4TjwI" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="50eepeJjAXlv" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="50eepeJjAXlv" indentLevel="1" text="private QAction* editPaste;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_46" accessType="0" parent_id="50eepeJjAXlv" writeOutText="false" classfield_id="50eepeJjAXlv" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_47" accessType="1" parent_id="50eepeJjAXlv" writeOutText="false" classfield_id="50eepeJjAXlv" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="7tLKrDm0d4o3" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="7tLKrDm0d4o3" indentLevel="1" text="private QAction* editUndo;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_48" accessType="0" parent_id="7tLKrDm0d4o3" writeOutText="false" classfield_id="7tLKrDm0d4o3" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_49" accessType="1" parent_id="7tLKrDm0d4o3" writeOutText="false" classfield_id="7tLKrDm0d4o3" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="L07oj14n1iPq" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="L07oj14n1iPq" indentLevel="1" text="private QAction* editRedo;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_50" accessType="0" parent_id="L07oj14n1iPq" writeOutText="false" classfield_id="L07oj14n1iPq" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_51" accessType="1" parent_id="L07oj14n1iPq" writeOutText="false" classfield_id="L07oj14n1iPq" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="uN2VRoYmoeYW" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="uN2VRoYmoeYW" indentLevel="1" text="private KActionMenu* newDiagram;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_52" accessType="0" parent_id="uN2VRoYmoeYW" writeOutText="false" classfield_id="uN2VRoYmoeYW" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_53" accessType="1" parent_id="uN2VRoYmoeYW" writeOutText="false" classfield_id="uN2VRoYmoeYW" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="fbJhHgXcM52a" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="fbJhHgXcM52a" indentLevel="1" text="private QAction* viewClearDiagram;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_54" accessType="0" parent_id="fbJhHgXcM52a" writeOutText="false" classfield_id="fbJhHgXcM52a" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_55" accessType="1" parent_id="fbJhHgXcM52a" writeOutText="false" classfield_id="fbJhHgXcM52a" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="P11EfXiK8z1Q" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="P11EfXiK8z1Q" indentLevel="1" text="private KToggleAction* viewSnapToGrid;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_56" accessType="0" parent_id="P11EfXiK8z1Q" writeOutText="false" classfield_id="P11EfXiK8z1Q" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_57" accessType="1" parent_id="P11EfXiK8z1Q" writeOutText="false" classfield_id="P11EfXiK8z1Q" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="fX01c2b1RSZW" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="fX01c2b1RSZW" indentLevel="1" text="private KToggleAction* viewShowGrid;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_58" accessType="0" parent_id="fX01c2b1RSZW" writeOutText="false" classfield_id="fX01c2b1RSZW" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_59" accessType="1" parent_id="fX01c2b1RSZW" writeOutText="false" classfield_id="fX01c2b1RSZW" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="vAUjly0AzzMe" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="vAUjly0AzzMe" indentLevel="1" text="private QAction* viewExportImage;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_60" accessType="0" parent_id="vAUjly0AzzMe" writeOutText="false" classfield_id="vAUjly0AzzMe" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_61" accessType="1" parent_id="vAUjly0AzzMe" writeOutText="false" classfield_id="vAUjly0AzzMe" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="W4xf1y3gT3g6" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="W4xf1y3gT3g6" indentLevel="1" text="private QAction* viewProperties;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_62" accessType="0" parent_id="W4xf1y3gT3g6" writeOutText="false" classfield_id="W4xf1y3gT3g6" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_63" accessType="1" parent_id="W4xf1y3gT3g6" writeOutText="false" classfield_id="W4xf1y3gT3g6" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="5F5UhezaoTJZ" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="5F5UhezaoTJZ" indentLevel="1" text="private QAction* zoom100Action;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_64" accessType="0" parent_id="5F5UhezaoTJZ" writeOutText="false" classfield_id="5F5UhezaoTJZ" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_65" accessType="1" parent_id="5F5UhezaoTJZ" writeOutText="false" classfield_id="5F5UhezaoTJZ" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="tRlMURQXgW0M" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="tRlMURQXgW0M" indentLevel="1" text="private KPlayerPopupSliderAction* zoomAction;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_66" accessType="0" parent_id="tRlMURQXgW0M" writeOutText="false" classfield_id="tRlMURQXgW0M" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_67" accessType="1" parent_id="tRlMURQXgW0M" writeOutText="false" classfield_id="tRlMURQXgW0M" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="AzwxQEUnTCAi" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="AzwxQEUnTCAi" indentLevel="1" text="private QAction* m_langAct;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_68" accessType="0" parent_id="AzwxQEUnTCAi" writeOutText="false" classfield_id="AzwxQEUnTCAi" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_69" accessType="1" parent_id="AzwxQEUnTCAi" writeOutText="false" classfield_id="AzwxQEUnTCAi" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="DARI4nOxC7Ie" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="DARI4nOxC7Ie" indentLevel="1" text="private QAction* deleteSelectedWidget;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_70" accessType="0" parent_id="DARI4nOxC7Ie" writeOutText="false" classfield_id="DARI4nOxC7Ie" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_71" accessType="1" parent_id="DARI4nOxC7Ie" writeOutText="false" classfield_id="DARI4nOxC7Ie" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="Yi9DC9ZN6TIW" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="Yi9DC9ZN6TIW" indentLevel="1" text="private QAction* deleteDiagram;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_72" accessType="0" parent_id="Yi9DC9ZN6TIW" writeOutText="false" classfield_id="Yi9DC9ZN6TIW" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_73" accessType="1" parent_id="Yi9DC9ZN6TIW" writeOutText="false" classfield_id="Yi9DC9ZN6TIW" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="zoaBuspSZwdl" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="zoaBuspSZwdl" indentLevel="1" text="private QToolButton* m_newSessionButton;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_74" accessType="0" parent_id="zoaBuspSZwdl" writeOutText="false" classfield_id="zoaBuspSZwdl" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_75" accessType="1" parent_id="zoaBuspSZwdl" writeOutText="false" classfield_id="zoaBuspSZwdl" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="RFG2RghQSHbK" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="RFG2RghQSHbK" indentLevel="1" text="private KMenu* m_diagramMenu;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_76" accessType="0" parent_id="RFG2RghQSHbK" writeOutText="false" classfield_id="RFG2RghQSHbK" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_77" accessType="1" parent_id="RFG2RghQSHbK" writeOutText="false" classfield_id="RFG2RghQSHbK" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="8OlhLOQPZXbD" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="8OlhLOQPZXbD" indentLevel="1" text="private KToggleAction* viewToolBar;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_78" accessType="0" parent_id="8OlhLOQPZXbD" writeOutText="false" classfield_id="8OlhLOQPZXbD" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_79" accessType="1" parent_id="8OlhLOQPZXbD" writeOutText="false" classfield_id="8OlhLOQPZXbD" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="vGU4Fv8h8Mja" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="vGU4Fv8h8Mja" indentLevel="1" text="private KToggleAction* viewStatusBar;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_80" accessType="0" parent_id="vGU4Fv8h8Mja" writeOutText="false" classfield_id="vGU4Fv8h8Mja" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_81" accessType="1" parent_id="vGU4Fv8h8Mja" writeOutText="false" classfield_id="vGU4Fv8h8Mja" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="0OyRdYljuWQF" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="0OyRdYljuWQF" indentLevel="1" text="private WorkToolBar* toolsbar;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_82" accessType="0" parent_id="0OyRdYljuWQF" writeOutText="false" classfield_id="0OyRdYljuWQF" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_83" accessType="1" parent_id="0OyRdYljuWQF" writeOutText="false" classfield_id="0OyRdYljuWQF" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="D0n8WBLP0wrK" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="D0n8WBLP0wrK" indentLevel="1" text="private QTimer* m_clipTimer;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_84" accessType="0" parent_id="D0n8WBLP0wrK" writeOutText="false" classfield_id="D0n8WBLP0wrK" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_85" accessType="1" parent_id="D0n8WBLP0wrK" writeOutText="false" classfield_id="D0n8WBLP0wrK" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="8WaYesEeIbl3" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="8WaYesEeIbl3" indentLevel="1" text="private QTimer* m_copyTimer;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_86" accessType="0" parent_id="8WaYesEeIbl3" writeOutText="false" classfield_id="8WaYesEeIbl3" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_87" accessType="1" parent_id="8WaYesEeIbl3" writeOutText="false" classfield_id="8WaYesEeIbl3" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="3jv4fnOnHwLt" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="3jv4fnOnHwLt" indentLevel="1" text="private AlignToolBar* m_alignToolBar;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_88" accessType="0" parent_id="3jv4fnOnHwLt" writeOutText="false" classfield_id="3jv4fnOnHwLt" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_89" accessType="1" parent_id="3jv4fnOnHwLt" writeOutText="false" classfield_id="3jv4fnOnHwLt" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="oYY59H6nkvsq" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="oYY59H6nkvsq" indentLevel="1" text="private bool m_loading;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_90" accessType="0" parent_id="oYY59H6nkvsq" writeOutText="false" classfield_id="oYY59H6nkvsq" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_91" accessType="1" parent_id="oYY59H6nkvsq" writeOutText="false" classfield_id="oYY59H6nkvsq" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="7LeOGxG4Vm7f" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="7LeOGxG4Vm7f" indentLevel="1" text="private QStackedWidget* m_viewStack;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_92" accessType="0" parent_id="7LeOGxG4Vm7f" writeOutText="false" classfield_id="7LeOGxG4Vm7f" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_93" accessType="1" parent_id="7LeOGxG4Vm7f" writeOutText="false" classfield_id="7LeOGxG4Vm7f" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="3EQn7Ib4Ghz7" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="3EQn7Ib4Ghz7" indentLevel="1" text="private KTabWidget* m_tabWidget;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_94" accessType="0" parent_id="3EQn7Ib4Ghz7" writeOutText="false" classfield_id="3EQn7Ib4Ghz7" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_95" accessType="1" parent_id="3EQn7Ib4Ghz7" writeOutText="false" classfield_id="3EQn7Ib4Ghz7" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="qVZKHhxKtN60" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="qVZKHhxKtN60" indentLevel="1" text="private QVBoxLayout* m_layout;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_96" accessType="0" parent_id="qVZKHhxKtN60" writeOutText="false" classfield_id="qVZKHhxKtN60" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_97" accessType="1" parent_id="qVZKHhxKtN60" writeOutText="false" classfield_id="qVZKHhxKtN60" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="df3tM21WR1uD" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="df3tM21WR1uD" indentLevel="1" text="private QString m_imageMimeType;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_98" accessType="0" parent_id="df3tM21WR1uD" writeOutText="false" classfield_id="df3tM21WR1uD" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_99" accessType="1" parent_id="df3tM21WR1uD" writeOutText="false" classfield_id="df3tM21WR1uD" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="16JsRPr42syN" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="16JsRPr42syN" indentLevel="1" text="private SettingsDlg* m_dlg;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_100" accessType="0" parent_id="16JsRPr42syN" writeOutText="false" classfield_id="16JsRPr42syN" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_101" accessType="1" parent_id="16JsRPr42syN" writeOutText="false" classfield_id="16JsRPr42syN" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="ounYFwWE2p7T" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="ounYFwWE2p7T" indentLevel="1" text="private UMLViewImageExporterAll* m_imageExporterAll;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_102" accessType="0" parent_id="ounYFwWE2p7T" writeOutText="false" classfield_id="ounYFwWE2p7T" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_103" accessType="1" parent_id="ounYFwWE2p7T" writeOutText="false" classfield_id="ounYFwWE2p7T" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="HUGD0Q9mIwIX" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="HUGD0Q9mIwIX" indentLevel="1" text="private XhtmlGenerator* m_xhtmlGenerator;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_104" accessType="0" parent_id="HUGD0Q9mIwIX" writeOutText="false" classfield_id="HUGD0Q9mIwIX" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_105" accessType="1" parent_id="HUGD0Q9mIwIX" writeOutText="false" classfield_id="HUGD0Q9mIwIX" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="GcFg5C1NeIYc" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="GcFg5C1NeIYc" indentLevel="1" text="private KUndoStack* m_pUndoStack;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_106" accessType="0" parent_id="GcFg5C1NeIYc" writeOutText="false" classfield_id="GcFg5C1NeIYc" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_107" accessType="1" parent_id="GcFg5C1NeIYc" writeOutText="false" classfield_id="GcFg5C1NeIYc" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="gfNwZfUPSCH5" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="gfNwZfUPSCH5" indentLevel="1" text="private bool m_hasBegunMacro;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_108" accessType="0" parent_id="gfNwZfUPSCH5" writeOutText="false" classfield_id="gfNwZfUPSCH5" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_109" accessType="1" parent_id="gfNwZfUPSCH5" writeOutText="false" classfield_id="gfNwZfUPSCH5" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="XiaaIbYxcTvh" id="XiaaIbYxcTvh" fileName="KXmlGuiWindow" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;kxmlguiwindow.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        KXmlGuiWindow.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:37&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield role_id="0" listClassName="" field_type="2097266" parent_id="IkigP1mFDu9i" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="IkigP1mFDu9i" writeOutText="false" indentLevel="1" text="public UMLApp ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="" accessType="0" parent_id="IkigP1mFDu9i" writeOutText="false" classfield_id="IkigP1mFDu9i" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="1" parent_id="IkigP1mFDu9i" writeOutText="false" classfield_id="IkigP1mFDu9i" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="2" parent_id="IkigP1mFDu9i" writeOutText="false" classfield_id="IkigP1mFDu9i" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="3" parent_id="IkigP1mFDu9i" writeOutText="false" classfield_id="IkigP1mFDu9i" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="4" parent_id="IkigP1mFDu9i" writeOutText="false" classfield_id="IkigP1mFDu9i" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="QT96Be7Ui3LE" id="QT96Be7Ui3LE" fileName="QWidget" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QWidget.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:37&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="tt3Q9VNPmVtu" id="tt3Q9VNPmVtu" fileName="QWidget_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QWidget_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:38&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="XDcd3ZuYadje" id="XDcd3ZuYadje" fileName="UMLApp_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLApp_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:38&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="pluNPd16lalK" id="pluNPd16lalK" fileName="KUrl" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        KUrl.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:38&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="RUoyh1gFoL6W" id="RUoyh1gFoL6W" fileName="const_KUrl_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        const_KUrl_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:38&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="YmkNLCCTosyV" id="YmkNLCCTosyV" fileName="UMLListView_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLListView_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:39&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="xfXjVTCDe51v" id="xfXjVTCDe51v" fileName="WorkToolBar_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        WorkToolBar_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:39&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="ayYaUmdlYiq6" id="ayYaUmdlYiq6" fileName="DocWindow_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        DocWindow_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:39&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="w0AySeShlrAc" id="w0AySeShlrAc" fileName="CodeGenerator_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        CodeGenerator_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:39&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="6RKvazYnW00Q" id="6RKvazYnW00Q" fileName="UMLClassifier_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLClassifier_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:40&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="64uTjbyTyZiz" id="64uTjbyTyZiz" fileName="QString_const" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QString_const.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:40&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="m1fEmoDyikG7" id="m1fEmoDyikG7" fileName="QString_const_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QString_const_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:40&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="SNDqFTdIatYX" id="SNDqFTdIatYX" fileName="KTabWidget_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        KTabWidget_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:41&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="0SA32lL41vf8" id="0SA32lL41vf8" fileName="CodeGenerationPolicy_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        CodeGenerationPolicy_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:41&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="psAonpwmcEJ5" id="psAonpwmcEJ5" fileName="CodeGenPolicyExt_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        CodeGenPolicyExt_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:41&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="rgyu5O6wTXMI" id="rgyu5O6wTXMI" fileName="QUndoCommand_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QUndoCommand_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:42&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="UOStU2tidcCj" id="UOStU2tidcCj" fileName="QKeyEvent_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QKeyEvent_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:42&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="Al2Pw99A9a1j" id="Al2Pw99A9a1j" fileName="QEvent" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QEvent.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:42&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="CZ28H5wQZrEd" id="CZ28H5wQZrEd" fileName="QEvent_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QEvent_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:42&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="DrVaTH3TPboF" id="DrVaTH3TPboF" fileName="KConfigGroup" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        KConfigGroup.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:43&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="TTjqjcRGpSDu" id="TTjqjcRGpSDu" fileName="KConfigGroup_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        KConfigGroup_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:43&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="6TztvAo9Ffzc" id="6TztvAo9Ffzc" fileName="const_KConfigGroup_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        const_KConfigGroup_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:43&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="E8rnR9U0bJxY" id="E8rnR9U0bJxY" fileName="QMenu_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QMenu_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:47&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="s8bF9sGBa8dq" id="s8bF9sGBa8dq" fileName="KConfig" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        KConfig.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:48&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="TcCvKMunT0Wg" id="TcCvKMunT0Wg" fileName="KConfig_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        KConfig_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:48&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="0uHvDCCUZ2Ya" id="0uHvDCCUZ2Ya" fileName="const_QMimeData_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        const_QMimeData_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:50&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="unyOHbcTeYIO" id="unyOHbcTeYIO" fileName="QStringList" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QStringList.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:50&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="5v1Mt4Ug6ztc" id="5v1Mt4Ug6ztc" fileName="QStringList_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QStringList_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:50&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="i4mKd2igxi0p" id="i4mKd2igxi0p" fileName="KSharedConfigPtr" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        KSharedConfigPtr.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:51&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="LYsvyt7Pfwm6" id="LYsvyt7Pfwm6" fileName="QDockWidget_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QDockWidget_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:51&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="jYKYDzGVbE26" id="jYKYDzGVbE26" fileName="QUndoView_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QUndoView_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:51&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="T2lo2MIlscJ3" id="T2lo2MIlscJ3" fileName="RefactoringAssistant_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        RefactoringAssistant_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:52&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="ZEle77Ya7HM7" id="ZEle77Ya7HM7" fileName="KRecentFilesAction_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        KRecentFilesAction_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:52&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="KiaSDJOIAjc1" id="KiaSDJOIAjc1" fileName="KActionMenu_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        KActionMenu_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:52&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="POsZ5TbzqdUH" id="POsZ5TbzqdUH" fileName="KToggleAction_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        KToggleAction_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:53&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="PHiNE2zl5wO6" id="PHiNE2zl5wO6" fileName="KPlayerPopupSliderAction_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        KPlayerPopupSliderAction_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:53&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="fmK9xSpAaESf" id="fmK9xSpAaESf" fileName="QToolButton_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QToolButton_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:53&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="6A6CeOhJBzQ6" id="6A6CeOhJBzQ6" fileName="KMenu_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        KMenu_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:54&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="vpcUMCfFS7Ii" id="vpcUMCfFS7Ii" fileName="QTimer" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QTimer.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:54&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="2QN9n4hnSfE3" id="2QN9n4hnSfE3" fileName="QTimer_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QTimer_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:54&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="fSp5637J1uPW" id="fSp5637J1uPW" fileName="AlignToolBar_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        AlignToolBar_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:54&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="xz7wrVSvEMxt" id="xz7wrVSvEMxt" fileName="QStackedWidget_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QStackedWidget_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:55&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="CR2OlxHsHtFX" id="CR2OlxHsHtFX" fileName="QVBoxLayout_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QVBoxLayout_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:55&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="z93G2GnrlK90" id="z93G2GnrlK90" fileName="SettingsDlg_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        SettingsDlg_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:55&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="uxtJyoUvvY9y" id="uxtJyoUvvY9y" fileName="UMLViewImageExporterAll_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLViewImageExporterAll_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:56&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="CwXFoTcgQTzN" id="CwXFoTcgQTzN" fileName="XhtmlGenerator_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        XhtmlGenerator_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:56&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="spkscrJplo2Z" id="spkscrJplo2Z" fileName="KUndoStack_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        KUndoStack_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:56&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="zC5M9e0b3SnI" id="zC5M9e0b3SnI" fileName="UMLClassifierListItem" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;umlclassifierlistitem.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks>
        <codeoperation tag="operation_SjKKogcKTOEy" parent_id="SjKKogcKTOEy" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_VtRAKqVPuK2o" parent_id="VtRAKqVPuK2o" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Constructor.  Empty.&amp;#010;&amp;#010;@param parent    The parent to this operation.&amp;#010;         At first sight it would appear that the type of the&amp;#010;         parent should be UMLClassifier. However, the class&amp;#010;         UMLAttribute is also used for the parameters of&amp;#010;         operations, and in this case the UMLOperation is the&amp;#010;         parent." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_trc68oAbhcm2" parent_id="trc68oAbhcm2" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Destructor.  Empty." />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod role_id="0" tag="hblock_tag_0" accessType="0" parent_id="o0A2leF0s6OK" writeOutText="false" classfield_id="o0A2leF0s6OK" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_1" accessType="1" parent_id="o0A2leF0s6OK" writeOutText="false" classfield_id="o0A2leF0s6OK" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_2" accessType="2" parent_id="o0A2leF0s6OK" writeOutText="false" classfield_id="o0A2leF0s6OK" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_3" accessType="3" parent_id="o0A2leF0s6OK" writeOutText="false" classfield_id="o0A2leF0s6OK" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_4" accessType="4" parent_id="o0A2leF0s6OK" writeOutText="false" classfield_id="o0A2leF0s6OK" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeoperation tag="operation_SHPKaP8CLEpZ" parent_id="SHPKaP8CLEpZ" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns the type of the UMLClassifierListItem.&amp;#010;&amp;#010;@return  The type of the UMLClassifierListItem." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_uulZUVZulwEL" parent_id="uulZUVZulwEL" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns the type name of the UMLClassifierListItem.&amp;#010;&amp;#010;@return  The type name of the UMLClassifierListItem." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_5st6ybEqUyPw" parent_id="5st6ybEqUyPw" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets the type name of the UMLClassifierListItem.&amp;#010;DEPRECATED - use setType() instead.&amp;#010;&amp;#010;@param type      The type name of the UMLClassifierListItem." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_M4Przm72ey8c" parent_id="M4Przm72ey8c" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets the type of the UMLAttribute.&amp;#010;&amp;#010;@param type      Pointer to the UMLObject of the type." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_rSqFVh9plWfi" parent_id="rSqFVh9plWfi" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns a string representation of the list item.&amp;#010;&amp;#010;@param sig               What type of operation string to show.&amp;#010;@return  The string representation of the operation." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_kGtTkYB3Ityy" parent_id="kGtTkYB3Ityy" writeOutText="false" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Display the properties configuration dialog for the list item.&amp;#010;&amp;#010;@param parent    The parent widget.&amp;#010;@return  True for success of this operation." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_aXkqQio8C1yf" parent_id="aXkqQio8C1yf" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Copy the internal presentation of this object into the new&amp;#010;object." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_OazNcM4Arp0I" parent_id="OazNcM4Arp0I" writeOutText="false" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="The abstract method UMLObject::clone() must be implemented&amp;#010;by the classes inheriting from UMLClassifierListItem." />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLClassifierListItem.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:46&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield role_id="1" listClassName="" field_type="0" parent_id="o0A2leF0s6OK" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="o0A2leF0s6OK" writeOutText="false" indentLevel="1" text="public UMLObject ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="hblock_tag_0" accessType="0" parent_id="o0A2leF0s6OK" writeOutText="false" classfield_id="o0A2leF0s6OK" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_1" accessType="1" parent_id="o0A2leF0s6OK" writeOutText="false" classfield_id="o0A2leF0s6OK" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_2" accessType="2" parent_id="o0A2leF0s6OK" writeOutText="false" classfield_id="o0A2leF0s6OK" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_3" accessType="3" parent_id="o0A2leF0s6OK" writeOutText="false" classfield_id="o0A2leF0s6OK" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_4" accessType="4" parent_id="o0A2leF0s6OK" writeOutText="false" classfield_id="o0A2leF0s6OK" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="2097266" parent_id="vML37wIue0GS" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="vML37wIue0GS" writeOutText="false" indentLevel="1" text="public UMLEntityConstraint ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="" accessType="0" parent_id="vML37wIue0GS" writeOutText="false" classfield_id="vML37wIue0GS" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="1" parent_id="vML37wIue0GS" writeOutText="false" classfield_id="vML37wIue0GS" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="2" parent_id="vML37wIue0GS" writeOutText="false" classfield_id="vML37wIue0GS" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="3" parent_id="vML37wIue0GS" writeOutText="false" classfield_id="vML37wIue0GS" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="4" parent_id="vML37wIue0GS" writeOutText="false" classfield_id="vML37wIue0GS" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="2097266" parent_id="n6RRQ1F8aVBW" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="n6RRQ1F8aVBW" writeOutText="false" indentLevel="1" text="public UMLAttribute ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="" accessType="0" parent_id="n6RRQ1F8aVBW" writeOutText="false" classfield_id="n6RRQ1F8aVBW" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="1" parent_id="n6RRQ1F8aVBW" writeOutText="false" classfield_id="n6RRQ1F8aVBW" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="2" parent_id="n6RRQ1F8aVBW" writeOutText="false" classfield_id="n6RRQ1F8aVBW" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="3" parent_id="n6RRQ1F8aVBW" writeOutText="false" classfield_id="n6RRQ1F8aVBW" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="4" parent_id="n6RRQ1F8aVBW" writeOutText="false" classfield_id="n6RRQ1F8aVBW" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="VoqLYBDtljP0" id="VoqLYBDtljP0" fileName="QTreeWidget" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;qtreewidget.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QTreeWidget.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:02:52&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield role_id="0" listClassName="" field_type="2097266" parent_id="H7HBUneS0ho7" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="H7HBUneS0ho7" writeOutText="false" indentLevel="1" text="public RefactoringAssistant ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="" accessType="0" parent_id="H7HBUneS0ho7" writeOutText="false" classfield_id="H7HBUneS0ho7" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="1" parent_id="H7HBUneS0ho7" writeOutText="false" classfield_id="H7HBUneS0ho7" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="2" parent_id="H7HBUneS0ho7" writeOutText="false" classfield_id="H7HBUneS0ho7" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="3" parent_id="H7HBUneS0ho7" writeOutText="false" classfield_id="H7HBUneS0ho7" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="4" parent_id="H7HBUneS0ho7" writeOutText="false" classfield_id="H7HBUneS0ho7" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="n9VOC17QaolU" id="n9VOC17QaolU" fileName="const_UMLObject_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        const_UMLObject_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:02:53&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="m8aKuJpCgEf2" id="m8aKuJpCgEf2" fileName="UMLClassifierListItem_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLClassifierListItem_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:02:53&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="w6p9G6t4JmSW" id="w6p9G6t4JmSW" fileName="QTreeWidgetItem" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;qtreewidgetitem.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QTreeWidgetItem.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:02:56&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield role_id="0" listClassName="" field_type="7667826" parent_id="LhwQzaJU0Uy9" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="LhwQzaJU0Uy9" writeOutText="false" indentLevel="1" text="public RefactoringAssistant ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="" accessType="0" parent_id="LhwQzaJU0Uy9" writeOutText="false" classfield_id="LhwQzaJU0Uy9" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="1" parent_id="LhwQzaJU0Uy9" writeOutText="false" classfield_id="LhwQzaJU0Uy9" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="2" parent_id="LhwQzaJU0Uy9" writeOutText="false" classfield_id="LhwQzaJU0Uy9" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="3" parent_id="LhwQzaJU0Uy9" writeOutText="false" classfield_id="LhwQzaJU0Uy9" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="4" parent_id="LhwQzaJU0Uy9" writeOutText="false" classfield_id="LhwQzaJU0Uy9" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="Szod9Jha7CsN" id="Szod9Jha7CsN" fileName="QTreeWidgetItem_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QTreeWidgetItem_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:02:54&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="1mR5QhN6rk7l" id="1mR5QhN6rk7l" fileName="const_QTreeWidgetItem_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        const_QTreeWidgetItem_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:02:54&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="7EQ1DtdY3xOw" id="7EQ1DtdY3xOw" fileName="QDragMoveEvent" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QDragMoveEvent.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:02:55&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="klyMKdw6qkra" id="klyMKdw6qkra" fileName="QDragMoveEvent_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QDragMoveEvent_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:02:55&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="ko6aZvAbFatN" id="ko6aZvAbFatN" fileName="QDropEvent" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QDropEvent.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:02:55&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="9paxApwLfSaQ" id="9paxApwLfSaQ" fileName="QDropEvent_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QDropEvent_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:02:55&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="BwSNqFnI0jvf" id="BwSNqFnI0jvf" fileName="QMap" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QMap.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:02:56&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="Ia6JlsvZ9yAj" id="Ia6JlsvZ9yAj" fileName="QMap_QTreeWidgetItem_UMLObject_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QMap_QTreeWidgetItem_UMLObject_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:02:56&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="wQR0lBZLC0ti" id="wQR0lBZLC0ti" fileName="const_char_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        const_char_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:02:56&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="KR2QdOwaoLYX" id="KR2QdOwaoLYX" fileName="Icon_Utils" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        Icon_Utils.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:01&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="KR2QdOwaoLYX" fileExt=".cpp" parent_class="W7th5kPYv32y" id="W7th5kPYv32y" fileName="Icon_Type" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        Icon_Type.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:02&amp;#010;The original location of this file is Icon_Utils&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="bJJlEhCW8Ewj" id="bJJlEhCW8Ewj" fileName="const_Icon_Utils_Icon_Type" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        const_Icon_Utils_Icon_Type.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:02&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="iE4KpEKgZfyX" id="iE4KpEKgZfyX" fileName="UMLPackage" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;umlpackage.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks>
        <codeoperation tag="operation_6KsXzYd8gs6J" parent_id="6KsXzYd8gs6J" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_b4UFwYY6hpGz" parent_id="b4UFwYY6hpGz" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Empty deconstructor." />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation tag="operation_HvexKCarsuch" parent_id="HvexKCarsuch" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Copy the internal presentation of this object into the new&amp;#010;object." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_jD5P3LOIE0EX" parent_id="jD5P3LOIE0EX" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Make a clone of this object." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_Jl6MwlKgzP30" parent_id="Jl6MwlKgzP30" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Adds an object in this package.&amp;#010;&amp;#010;@param pObject   Pointer to the UMLObject to add.&amp;#010;@return    True if the object was actually added." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_5Xx4uy2dPJXo" parent_id="5Xx4uy2dPJXo" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Removes an object from this package.&amp;#010;Does not physically delete the object.&amp;#010;&amp;#010;@param pObject   Pointer to the UMLObject to be removed." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_6SgQmrhqOcsJ" parent_id="6SgQmrhqOcsJ" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Removes all objects from this package.&amp;#010;Inner containers (e.g. nested packages) are removed recursively." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_avwxETk1R74F" parent_id="avwxETk1R74F" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns the list of objects contained in this package." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_ch40HwJqpEn3" parent_id="ch40HwJqpEn3" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Adds an existing association to the matching concept in the list of concepts.&amp;#010;The selection of the matching concept depends on the association type:&amp;#010;For generalizations, the assoc is added to the concept that matches role A.&amp;#010;For aggregations and compositions , the assoc is added to the concept&amp;#010;that matches role B.&amp;#010;&amp;#010;@param assoc     The association to add" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_90BckDoMsqN9" parent_id="90BckDoMsqN9" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Remove the association from the participating concepts." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_msRt0LU9Lfk5" parent_id="msRt0LU9Lfk5" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Find the object of the given name in the list of contained objects.&amp;#010;&amp;#010;@param name              The name to seek.&amp;#010;@return  Pointer to the UMLObject found or NULL if not found." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_I5FdixgXT6Do" parent_id="I5FdixgXT6Do" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Find the object of the given ID in the list of contained objects.&amp;#010;&amp;#010;@param id                The ID to seek.&amp;#010;@return  Pointer to the UMLObject found or NULL if not found." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_q1OH5b4xdwCQ" parent_id="q1OH5b4xdwCQ" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Append all packages from this packaed ( and those from nested packeges)&amp;#010;to the given UMLPackageList.&amp;#010;&amp;#010;@param packages     The list to append to&amp;#010;@param includeNested  Whether to include the packages from nested packages&amp;#010;                         (default:true)" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_5HYIsKwamHQ7" parent_id="5HYIsKwamHQ7" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Append all classifiers from this package (and those from&amp;#010;nested packages) to the given UMLClassifierList.&amp;#010;&amp;#010;@param classifiers               The list to append to.&amp;#010;@param includeNested             Whether to include the classifiers from&amp;#010;                         nested packages (default: true.)" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_GmuLo8pi3C5P" parent_id="GmuLo8pi3C5P" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Append all classes from this package (and those from&amp;#010;nested packages) to the given UMLClassifierList.&amp;#010;&amp;#010;@param classes           The list to append to.&amp;#010;@param includeNested             Whether to include the classes from&amp;#010;                         nested packages (default: true.)" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_e8RhKW60GvUD" parent_id="e8RhKW60GvUD" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Append all classes and interfaces from this package (and those&amp;#010;from nested packages) to the given UMLClassifierList.&amp;#010;&amp;#010;@param classifiers               The list to append to.&amp;#010;@param includeNested             Whether to include the classifiers from&amp;#010;                         nested packages (default: true.)" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_37yJ0QURz7vs" parent_id="37yJ0QURz7vs" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Append all entities from this package (and those&amp;#010;from nested packages) to the given UMLEntityList.&amp;#010;&amp;#010;@param entities               The list to append to.&amp;#010;@param includeNested          Whether to include the entities from&amp;#010;                         nested packages (default: true.)" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_cq8zGf5AIWmS" parent_id="cq8zGf5AIWmS" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Append all interfaces from this package (and those from&amp;#010;nested packages) to the given UMLClassifierList.&amp;#010;&amp;#010;@param interfaces                The list to append to.&amp;#010;@param includeNested             Whether to include the interfaces from&amp;#010;                         nested packages (default: true.)" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_6DoOkarirXGd" parent_id="6DoOkarirXGd" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Resolve types. Required when dealing with foreign XMI files.&amp;#010;Needs to be called after all UML objects are loaded from file.&amp;#010;Overrides the method from UMLObject.&amp;#010;Calls resolveRef() on each contained object.&amp;#010;&amp;#010;@return  True for overall success." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_p9cFdmrjxg6h" parent_id="p9cFdmrjxg6h" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Creates the &lt;UML:Package> XMI element." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_OWJJCP1RKOVl" parent_id="OWJJCP1RKOVl" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Loads the &lt;UML:Package> XMI element.&amp;#010;Auxiliary to UMLObject::loadFromXMI." />
         </header>
        </codeoperation>
        <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="ibF2xin0ti2x" writeOutText="false" classfield_id="ibF2xin0ti2x" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of m_objects&amp;#010;References to the objects contained in this package.&amp;#010;The UMLPackage is the owner of the objects.&amp;#010;@return the value of m_objects" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="ibF2xin0ti2x" writeOutText="false" classfield_id="ibF2xin0ti2x" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of m_objects&amp;#010;References to the objects contained in this package.&amp;#010;The UMLPackage is the owner of the objects.&amp;#010;@param value the value of m_objects" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLPackage.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:54&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield role_id="1" listClassName="" field_type="7077888" parent_id="m845GuXORfg8" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="m845GuXORfg8" writeOutText="false" indentLevel="1" text="public UMLCanvasObject ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="m845GuXORfg8" writeOutText="false" classfield_id="m845GuXORfg8" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="m845GuXORfg8" writeOutText="false" classfield_id="m845GuXORfg8" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="m845GuXORfg8" writeOutText="false" classfield_id="m845GuXORfg8" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="m845GuXORfg8" writeOutText="false" classfield_id="m845GuXORfg8" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="m845GuXORfg8" writeOutText="false" classfield_id="m845GuXORfg8" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="ibF2xin0ti2x" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="ibF2xin0ti2x" indentLevel="1" text="protected UMLObjectList m_objects;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="References to the objects contained in this package.&amp;#010;The UMLPackage is the owner of the objects." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="ibF2xin0ti2x" writeOutText="false" classfield_id="ibF2xin0ti2x" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of m_objects&amp;#010;References to the objects contained in this package.&amp;#010;The UMLPackage is the owner of the objects.&amp;#010;@return the value of m_objects" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="ibF2xin0ti2x" writeOutText="false" classfield_id="ibF2xin0ti2x" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of m_objects&amp;#010;References to the objects contained in this package.&amp;#010;The UMLPackage is the owner of the objects.&amp;#010;@param value the value of m_objects" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="2097266" parent_id="hHQtcEd7mnhT" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="hHQtcEd7mnhT" writeOutText="false" indentLevel="1" text="public UMLClassifier ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="" accessType="0" parent_id="hHQtcEd7mnhT" writeOutText="false" classfield_id="hHQtcEd7mnhT" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="1" parent_id="hHQtcEd7mnhT" writeOutText="false" classfield_id="hHQtcEd7mnhT" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="2" parent_id="hHQtcEd7mnhT" writeOutText="false" classfield_id="hHQtcEd7mnhT" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="3" parent_id="hHQtcEd7mnhT" writeOutText="false" classfield_id="hHQtcEd7mnhT" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="4" parent_id="hHQtcEd7mnhT" writeOutText="false" classfield_id="hHQtcEd7mnhT" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="DEF25bcCX9gg" id="DEF25bcCX9gg" fileName="QList_UMLPackage_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QList_UMLPackage_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:24&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="EkW5TcpBorWd" id="EkW5TcpBorWd" fileName="UMLPackageList" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLPackageList.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:25&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="5oIcTG9eSPeV" id="5oIcTG9eSPeV" fileName="QListIterator_UMLPackage_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QListIterator_UMLPackage_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:25&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="0GfVPKBd2ggW" id="0GfVPKBd2ggW" fileName="UMLPackageListIt" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLPackageListIt.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:25&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="GTh4LBgOzy1Q" id="GTh4LBgOzy1Q" fileName="UMLStereotype" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLStereotype.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:25&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="2FdJxbK7JYEp" id="2FdJxbK7JYEp" fileName="const_UMLObject_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        const_UMLObject_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:26&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="6bgFIb8avmQP" id="6bgFIb8avmQP" fileName="UMLStereotype_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLStereotype_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:27&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="g2AlSN6Uj0Sp" id="g2AlSN6Uj0Sp" fileName="UMLPackage_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLPackage_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:27&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="aowHoM487F3E" id="aowHoM487F3E" fileName="const_UMLStereotype_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        const_UMLStereotype_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:27&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="7Vb3818Ub7rC" id="7Vb3818Ub7rC" fileName="QList_UMLClassifier_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QList_UMLClassifier_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:31&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="RuMJhLZC6vss" id="RuMJhLZC6vss" fileName="UMLClassifierList" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLClassifierList.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:31&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="IBAsTfCY8nbF" id="IBAsTfCY8nbF" fileName="QListIterator_UMLClassifier_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QListIterator_UMLClassifier_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:31&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="ojjOqZYGTuXA" id="ojjOqZYGTuXA" fileName="UMLClassifierListIt" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLClassifierListIt.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:31&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="D6KJ1AAHLIAm" id="D6KJ1AAHLIAm" fileName="UMLEntityConstraint" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;umlentityconstraint.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks>
        <codeoperation tag="operation_0s6csM5RAlTq" parent_id="0s6csM5RAlTq" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets up a constraint.&amp;#010;&amp;#010;@param parent    The parent of this UMLEntityConstraint.&amp;#010;@param name      The name of this UMLEntityConstraint.&amp;#010;@param id        The unique id given to this UMLEntityConstraint." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_EpGV1zSxUyw0" parent_id="EpGV1zSxUyw0" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets up a constraint.&amp;#010;&amp;#010;@param parent    The parent of this UMLEntityConstraint." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_KzV58CBwpDck" parent_id="KzV58CBwpDck" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="destructor." />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation tag="operation_3AmSQ0xcpD7q" parent_id="3AmSQ0xcpD7q" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Overloaded '==' operator" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_p9ibO9leWXi4" parent_id="p9ibO9leWXi4" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Copy the internal presentation of this object into the UMLEntityConstraint&amp;#010;object." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_KmD9xprmwaLJ" parent_id="KmD9xprmwaLJ" writeOutText="false" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Make a clone of the UMLEntityConstraint." />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLEntityConstraint.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:33&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield role_id="1" listClassName="" field_type="-4737792" parent_id="vML37wIue0GS" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="vML37wIue0GS" writeOutText="false" indentLevel="1" text="public UMLClassifierListItem ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="vML37wIue0GS" writeOutText="false" classfield_id="vML37wIue0GS" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="vML37wIue0GS" writeOutText="false" classfield_id="vML37wIue0GS" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="vML37wIue0GS" writeOutText="false" classfield_id="vML37wIue0GS" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="vML37wIue0GS" writeOutText="false" classfield_id="vML37wIue0GS" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="vML37wIue0GS" writeOutText="false" classfield_id="vML37wIue0GS" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="2097266" parent_id="dSF0DDIj0MBL" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="dSF0DDIj0MBL" writeOutText="false" indentLevel="1" text="public UMLForeignKeyConstraint ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="" accessType="0" parent_id="dSF0DDIj0MBL" writeOutText="false" classfield_id="dSF0DDIj0MBL" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="1" parent_id="dSF0DDIj0MBL" writeOutText="false" classfield_id="dSF0DDIj0MBL" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="2" parent_id="dSF0DDIj0MBL" writeOutText="false" classfield_id="dSF0DDIj0MBL" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="3" parent_id="dSF0DDIj0MBL" writeOutText="false" classfield_id="dSF0DDIj0MBL" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="4" parent_id="dSF0DDIj0MBL" writeOutText="false" classfield_id="dSF0DDIj0MBL" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="BYldWgdbl9h8" id="BYldWgdbl9h8" fileName="const_UMLEntityConstraint_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        const_UMLEntityConstraint_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:32&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="BN0IVbZqNkxK" id="BN0IVbZqNkxK" fileName="UMLEntityAttribute" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;umlentityattribute.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod role_id="1" tag="hblock_tag_0" accessType="0" parent_id="TC5j4ZHtsgBx" writeOutText="false" classfield_id="TC5j4ZHtsgBx" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_1" accessType="1" parent_id="TC5j4ZHtsgBx" writeOutText="false" classfield_id="TC5j4ZHtsgBx" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_2" accessType="2" parent_id="TC5j4ZHtsgBx" writeOutText="false" classfield_id="TC5j4ZHtsgBx" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_3" accessType="3" parent_id="TC5j4ZHtsgBx" writeOutText="false" classfield_id="TC5j4ZHtsgBx" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_4" accessType="4" parent_id="TC5j4ZHtsgBx" writeOutText="false" classfield_id="TC5j4ZHtsgBx" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLEntityAttribute.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:36&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield role_id="0" listClassName="" field_type="149385728" parent_id="3QrWL5rFJzA4" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="3QrWL5rFJzA4" writeOutText="false" indentLevel="1" text="public UMLForeignKeyConstraint ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="" accessType="0" parent_id="3QrWL5rFJzA4" writeOutText="false" classfield_id="3QrWL5rFJzA4" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="1" parent_id="3QrWL5rFJzA4" writeOutText="false" classfield_id="3QrWL5rFJzA4" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="2" parent_id="3QrWL5rFJzA4" writeOutText="false" classfield_id="3QrWL5rFJzA4" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="3" parent_id="3QrWL5rFJzA4" writeOutText="false" classfield_id="3QrWL5rFJzA4" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="4" parent_id="3QrWL5rFJzA4" writeOutText="false" classfield_id="3QrWL5rFJzA4" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="7209074" parent_id="cJxtI7xQXTwX" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="cJxtI7xQXTwX" writeOutText="false" indentLevel="1" text="public UMLForeignKeyConstraint ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="" accessType="0" parent_id="cJxtI7xQXTwX" writeOutText="false" classfield_id="cJxtI7xQXTwX" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="1" parent_id="cJxtI7xQXTwX" writeOutText="false" classfield_id="cJxtI7xQXTwX" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="2" parent_id="cJxtI7xQXTwX" writeOutText="false" classfield_id="cJxtI7xQXTwX" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="3" parent_id="cJxtI7xQXTwX" writeOutText="false" classfield_id="cJxtI7xQXTwX" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="4" parent_id="cJxtI7xQXTwX" writeOutText="false" classfield_id="cJxtI7xQXTwX" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="7274604" parent_id="zM417aPbMqXm" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="zM417aPbMqXm" writeOutText="false" indentLevel="1" text="public UMLForeignKeyConstraint ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="" accessType="0" parent_id="zM417aPbMqXm" writeOutText="false" classfield_id="zM417aPbMqXm" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="1" parent_id="zM417aPbMqXm" writeOutText="false" classfield_id="zM417aPbMqXm" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="2" parent_id="zM417aPbMqXm" writeOutText="false" classfield_id="zM417aPbMqXm" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="3" parent_id="zM417aPbMqXm" writeOutText="false" classfield_id="zM417aPbMqXm" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="4" parent_id="zM417aPbMqXm" writeOutText="false" classfield_id="zM417aPbMqXm" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="0" parent_id="TC5j4ZHtsgBx" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="TC5j4ZHtsgBx" writeOutText="false" indentLevel="1" text="public UMLForeignKeyConstraint ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="hblock_tag_0" accessType="0" parent_id="TC5j4ZHtsgBx" writeOutText="false" classfield_id="TC5j4ZHtsgBx" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_1" accessType="1" parent_id="TC5j4ZHtsgBx" writeOutText="false" classfield_id="TC5j4ZHtsgBx" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_2" accessType="2" parent_id="TC5j4ZHtsgBx" writeOutText="false" classfield_id="TC5j4ZHtsgBx" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_3" accessType="3" parent_id="TC5j4ZHtsgBx" writeOutText="false" classfield_id="TC5j4ZHtsgBx" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_4" accessType="4" parent_id="TC5j4ZHtsgBx" writeOutText="false" classfield_id="TC5j4ZHtsgBx" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="-1" parent_id="S8jImtE85ZZl" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="S8jImtE85ZZl" writeOutText="false" indentLevel="1" text="public UMLForeignKeyConstraint ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="" accessType="0" parent_id="S8jImtE85ZZl" writeOutText="false" classfield_id="S8jImtE85ZZl" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="1" parent_id="S8jImtE85ZZl" writeOutText="false" classfield_id="S8jImtE85ZZl" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="2" parent_id="S8jImtE85ZZl" writeOutText="false" classfield_id="S8jImtE85ZZl" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="3" parent_id="S8jImtE85ZZl" writeOutText="false" classfield_id="S8jImtE85ZZl" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="4" parent_id="S8jImtE85ZZl" writeOutText="false" classfield_id="S8jImtE85ZZl" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="Yp4SNPl2TgE2" id="Yp4SNPl2TgE2" fileName="UMLEntity" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLEntity.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:32&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="MRvaUd4dy2vR" id="MRvaUd4dy2vR" fileName="UMLForeignKeyConstraint" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;umlforeignkeyconstraint.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks>
        <codeoperation tag="operation_31HHSWXIyU1k" parent_id="31HHSWXIyU1k" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets up a constraint.&amp;#010;&amp;#010;@param parent    The parent of this UMLForeignKeyConstraint.&amp;#010;@param name      The name of this UMLForeignKeyConstraint.&amp;#010;@param id        The unique id given to this UMLForeignKeyConstraint." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_tGnV0gsHcCaH" parent_id="tGnV0gsHcCaH" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets up a constraint.&amp;#010;&amp;#010;@param parent    The parent of this UMLForeignKeyConstraint." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_frLoP36ubMsM" parent_id="frLoP36ubMsM" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="destructor." />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation tag="operation_iSBRnQJee49f" parent_id="iSBRnQJee49f" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Overloaded '==' operator" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_UGq0njJivGIB" parent_id="UGq0njJivGIB" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Copy the internal presentation of this object into the UMLForeignKeyConstraint&amp;#010;object." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_zEaYbRs3fi4S" parent_id="zEaYbRs3fi4S" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Make a clone of the UMLForeignKeyConstraint." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_1uyGq6unLSLu" parent_id="1uyGq6unLSLu" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns a string representation of the UMLForeignKeyConstraint.&amp;#010;&amp;#010;@param sig               If true will show the attribute type and&amp;#010;                 initial value.&amp;#010;@return  Returns a string representation of the UMLAttribute." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_CrcVIvPB6Lk0" parent_id="CrcVIvPB6Lk0" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Set the Referenced Entity&amp;#010;@param ent The Entity to Reference" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_sBfyUNxm6FSr" parent_id="sBfyUNxm6FSr" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_fnKrk7JaGzYk" parent_id="fnKrk7JaGzYk" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Creates the &lt;UML:ForeignKeyConstraint> XMI element." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_wznAwMvHnShW" parent_id="wznAwMvHnShW" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Display the properties configuration dialog for the attribute." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_UZ2I1hmOd7h1" parent_id="UZ2I1hmOd7h1" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Adds the attribute pair to the attributeMap&amp;#010;@param pAttr The Attribute of the Parent Entity&amp;#010;@param rAttr The Attribute of the Referenced Entity&amp;#010;@return true if the attribute pair could be added successfully" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_62DKgOY0JBvL" parent_id="62DKgOY0JBvL" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Removes an Attribute pair&amp;#010;@param pAttr The Attribute of the Parent Entity in the map. This attribute is the&amp;#010;key of the map&amp;#010;@return true of the attribute pair could be removed successfully" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_l814JvOil9iN" parent_id="l814JvOil9iN" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Check if a attribute pair already exists&amp;#010;@param pAttr The Attribute of the Parent Entity&amp;#010;@param rAttr The Attribute of the Referenced Entity&amp;#010;@return true if the attribute pair could be found." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_YOIgw4zm0Y1K" parent_id="YOIgw4zm0Y1K" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_PUK1GVx6nqN7" parent_id="PUK1GVx6nqN7" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_6hBtNURnwlmB" parent_id="6hBtNURnwlmB" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_VlOejyvnf6e0" parent_id="VlOejyvnf6e0" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_YCoQuqYPZw1G" parent_id="YCoQuqYPZw1G" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_neb1Xem3qYUi" parent_id="neb1Xem3qYUi" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Clears all mappings between local and referenced attributes" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_P06wv7Bn2CH0" parent_id="P06wv7Bn2CH0" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Remimplementation from base classes&amp;#010;Used to resolve forward references to referenced entities in xmi" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_RXiF5AvSB1N6" parent_id="RXiF5AvSB1N6" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_7Yr7k67brdFq" parent_id="7Yr7k67brdFq" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_6PaEANtZuZox" parent_id="6PaEANtZuZox" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Loads the &lt;UML:ForeignKeyConstraint> XMI element." />
         </header>
        </codeoperation>
        <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="RpxJMjH4RhvA" writeOutText="false" classfield_id="RpxJMjH4RhvA" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of m_pReferencedEntityID&amp;#010;Used to resolve forward references to UMLEntity&amp;#010;@return the value of m_pReferencedEntityID" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="RpxJMjH4RhvA" writeOutText="false" classfield_id="RpxJMjH4RhvA" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of m_pReferencedEntityID&amp;#010;Used to resolve forward references to UMLEntity&amp;#010;@param value the value of m_pReferencedEntityID" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_2" accessType="0" parent_id="2uqu80wuDgc3" writeOutText="false" classfield_id="2uqu80wuDgc3" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of m_pEntityAttributeIDMap&amp;#010;Used to resolve forward references to UMLEntityAttributes&amp;#010;Key -> The local attribute&amp;#010;Value -> Id of the attribute it is mapping to&amp;#010;@return the value of m_pEntityAttributeIDMap" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_3" accessType="1" parent_id="2uqu80wuDgc3" writeOutText="false" classfield_id="2uqu80wuDgc3" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of m_pEntityAttributeIDMap&amp;#010;Used to resolve forward references to UMLEntityAttributes&amp;#010;Key -> The local attribute&amp;#010;Value -> Id of the attribute it is mapping to&amp;#010;@param value the value of m_pEntityAttributeIDMap" />
         </header>
        </codeaccessormethod>
        <codeoperation tag="operation_3Tt5JxspVnLk" parent_id="3Tt5JxspVnLk" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Initialisation of common variables" />
         </header>
        </codeoperation>
        <codeaccessormethod tag="hblock_tag_4" accessType="0" parent_id="INWLuNzuFnoL" writeOutText="false" classfield_id="INWLuNzuFnoL" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of m_ReferencedEntity&amp;#010;The UMLEntity that this foreign key references&amp;#010;@return the value of m_ReferencedEntity" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_5" accessType="1" parent_id="INWLuNzuFnoL" writeOutText="false" classfield_id="INWLuNzuFnoL" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of m_ReferencedEntity&amp;#010;The UMLEntity that this foreign key references&amp;#010;@param value the value of m_ReferencedEntity" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_6" accessType="0" parent_id="niFyPp0QIrTZ" writeOutText="false" classfield_id="niFyPp0QIrTZ" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_7" accessType="1" parent_id="niFyPp0QIrTZ" writeOutText="false" classfield_id="niFyPp0QIrTZ" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_8" accessType="2" parent_id="niFyPp0QIrTZ" writeOutText="false" classfield_id="niFyPp0QIrTZ" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_9" accessType="3" parent_id="niFyPp0QIrTZ" writeOutText="false" classfield_id="niFyPp0QIrTZ" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_10" accessType="4" parent_id="niFyPp0QIrTZ" writeOutText="false" classfield_id="niFyPp0QIrTZ" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_11" accessType="0" parent_id="HjrRbtlPRxBp" writeOutText="false" classfield_id="HjrRbtlPRxBp" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_12" accessType="1" parent_id="HjrRbtlPRxBp" writeOutText="false" classfield_id="HjrRbtlPRxBp" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_13" accessType="0" parent_id="BalGn3zgWuNw" writeOutText="false" classfield_id="BalGn3zgWuNw" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_14" accessType="1" parent_id="BalGn3zgWuNw" writeOutText="false" classfield_id="BalGn3zgWuNw" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_15" accessType="0" parent_id="CcA7cFDrw4IY" writeOutText="false" classfield_id="CcA7cFDrw4IY" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_16" accessType="1" parent_id="CcA7cFDrw4IY" writeOutText="false" classfield_id="CcA7cFDrw4IY" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLForeignKeyConstraint.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:36&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield role_id="1" listClassName="" field_type="298" parent_id="dSF0DDIj0MBL" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="dSF0DDIj0MBL" writeOutText="false" indentLevel="1" text="public UMLEntityConstraint ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="dSF0DDIj0MBL" writeOutText="false" classfield_id="dSF0DDIj0MBL" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="dSF0DDIj0MBL" writeOutText="false" classfield_id="dSF0DDIj0MBL" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="dSF0DDIj0MBL" writeOutText="false" classfield_id="dSF0DDIj0MBL" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="dSF0DDIj0MBL" writeOutText="false" classfield_id="dSF0DDIj0MBL" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="dSF0DDIj0MBL" writeOutText="false" classfield_id="dSF0DDIj0MBL" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="320" parent_id="ouIG65ecTuGN" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="ouIG65ecTuGN" writeOutText="false" indentLevel="1" text="public  ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="ouIG65ecTuGN" writeOutText="false" classfield_id="ouIG65ecTuGN" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="ouIG65ecTuGN" writeOutText="false" classfield_id="ouIG65ecTuGN" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="ouIG65ecTuGN" writeOutText="false" classfield_id="ouIG65ecTuGN" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="ouIG65ecTuGN" writeOutText="false" classfield_id="ouIG65ecTuGN" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="ouIG65ecTuGN" writeOutText="false" classfield_id="ouIG65ecTuGN" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="2097266" parent_id="3QrWL5rFJzA4" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="3QrWL5rFJzA4" writeOutText="false" indentLevel="1" text="public UMLEntityAttribute ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="3QrWL5rFJzA4" writeOutText="false" classfield_id="3QrWL5rFJzA4" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="3QrWL5rFJzA4" writeOutText="false" classfield_id="3QrWL5rFJzA4" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="3QrWL5rFJzA4" writeOutText="false" classfield_id="3QrWL5rFJzA4" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="3QrWL5rFJzA4" writeOutText="false" classfield_id="3QrWL5rFJzA4" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="3QrWL5rFJzA4" writeOutText="false" classfield_id="3QrWL5rFJzA4" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="2097266" parent_id="cJxtI7xQXTwX" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="cJxtI7xQXTwX" writeOutText="false" indentLevel="1" text="public UMLEntityAttribute ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="cJxtI7xQXTwX" writeOutText="false" classfield_id="cJxtI7xQXTwX" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="cJxtI7xQXTwX" writeOutText="false" classfield_id="cJxtI7xQXTwX" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="cJxtI7xQXTwX" writeOutText="false" classfield_id="cJxtI7xQXTwX" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="cJxtI7xQXTwX" writeOutText="false" classfield_id="cJxtI7xQXTwX" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="cJxtI7xQXTwX" writeOutText="false" classfield_id="cJxtI7xQXTwX" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="6619252" parent_id="Bm4gE1DaNprp" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="Bm4gE1DaNprp" writeOutText="false" indentLevel="1" text="public  ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="Bm4gE1DaNprp" writeOutText="false" classfield_id="Bm4gE1DaNprp" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="Bm4gE1DaNprp" writeOutText="false" classfield_id="Bm4gE1DaNprp" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="Bm4gE1DaNprp" writeOutText="false" classfield_id="Bm4gE1DaNprp" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="Bm4gE1DaNprp" writeOutText="false" classfield_id="Bm4gE1DaNprp" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="Bm4gE1DaNprp" writeOutText="false" classfield_id="Bm4gE1DaNprp" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="RpxJMjH4RhvA" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="RpxJMjH4RhvA" indentLevel="1" text="private Uml::IDType m_pReferencedEntityID;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Used to resolve forward references to UMLEntity" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="RpxJMjH4RhvA" writeOutText="false" classfield_id="RpxJMjH4RhvA" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of m_pReferencedEntityID&amp;#010;Used to resolve forward references to UMLEntity&amp;#010;@return the value of m_pReferencedEntityID" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="RpxJMjH4RhvA" writeOutText="false" classfield_id="RpxJMjH4RhvA" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of m_pReferencedEntityID&amp;#010;Used to resolve forward references to UMLEntity&amp;#010;@param value the value of m_pReferencedEntityID" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="121" parent_id="GhJVlFrD2nWO" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="GhJVlFrD2nWO" writeOutText="false" indentLevel="1" text="public  ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="GhJVlFrD2nWO" writeOutText="false" classfield_id="GhJVlFrD2nWO" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="GhJVlFrD2nWO" writeOutText="false" classfield_id="GhJVlFrD2nWO" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="GhJVlFrD2nWO" writeOutText="false" classfield_id="GhJVlFrD2nWO" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="GhJVlFrD2nWO" writeOutText="false" classfield_id="GhJVlFrD2nWO" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="GhJVlFrD2nWO" writeOutText="false" classfield_id="GhJVlFrD2nWO" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="2097266" parent_id="zM417aPbMqXm" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="zM417aPbMqXm" writeOutText="false" indentLevel="1" text="public UMLEntityAttribute ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="zM417aPbMqXm" writeOutText="false" classfield_id="zM417aPbMqXm" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="zM417aPbMqXm" writeOutText="false" classfield_id="zM417aPbMqXm" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="zM417aPbMqXm" writeOutText="false" classfield_id="zM417aPbMqXm" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="zM417aPbMqXm" writeOutText="false" classfield_id="zM417aPbMqXm" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="zM417aPbMqXm" writeOutText="false" classfield_id="zM417aPbMqXm" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="7209074" parent_id="X3urtRe6zFYZ" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="X3urtRe6zFYZ" writeOutText="false" indentLevel="1" text="public Uml ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="X3urtRe6zFYZ" writeOutText="false" classfield_id="X3urtRe6zFYZ" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="X3urtRe6zFYZ" writeOutText="false" classfield_id="X3urtRe6zFYZ" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="X3urtRe6zFYZ" writeOutText="false" classfield_id="X3urtRe6zFYZ" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="X3urtRe6zFYZ" writeOutText="false" classfield_id="X3urtRe6zFYZ" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="X3urtRe6zFYZ" writeOutText="false" classfield_id="X3urtRe6zFYZ" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="7209074" parent_id="RKIQZpy0b40w" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="RKIQZpy0b40w" writeOutText="false" indentLevel="1" text="public  ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="RKIQZpy0b40w" writeOutText="false" classfield_id="RKIQZpy0b40w" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="RKIQZpy0b40w" writeOutText="false" classfield_id="RKIQZpy0b40w" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="RKIQZpy0b40w" writeOutText="false" classfield_id="RKIQZpy0b40w" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="RKIQZpy0b40w" writeOutText="false" classfield_id="RKIQZpy0b40w" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="RKIQZpy0b40w" writeOutText="false" classfield_id="RKIQZpy0b40w" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="7209074" parent_id="XXV7bV1CtEA2" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="XXV7bV1CtEA2" writeOutText="false" indentLevel="1" text="public  ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="XXV7bV1CtEA2" writeOutText="false" classfield_id="XXV7bV1CtEA2" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="XXV7bV1CtEA2" writeOutText="false" classfield_id="XXV7bV1CtEA2" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="XXV7bV1CtEA2" writeOutText="false" classfield_id="XXV7bV1CtEA2" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="XXV7bV1CtEA2" writeOutText="false" classfield_id="XXV7bV1CtEA2" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="XXV7bV1CtEA2" writeOutText="false" classfield_id="XXV7bV1CtEA2" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="2uqu80wuDgc3" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="2uqu80wuDgc3" indentLevel="1" text="private QMap&lt; UMLEntityAttribute *, Uml :: IDType > m_pEntityAttributeIDMap;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Used to resolve forward references to UMLEntityAttributes&amp;#010;Key -> The local attribute&amp;#010;Value -> Id of the attribute it is mapping to" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_2" accessType="0" parent_id="2uqu80wuDgc3" writeOutText="false" classfield_id="2uqu80wuDgc3" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of m_pEntityAttributeIDMap&amp;#010;Used to resolve forward references to UMLEntityAttributes&amp;#010;Key -> The local attribute&amp;#010;Value -> Id of the attribute it is mapping to&amp;#010;@return the value of m_pEntityAttributeIDMap" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_3" accessType="1" parent_id="2uqu80wuDgc3" writeOutText="false" classfield_id="2uqu80wuDgc3" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of m_pEntityAttributeIDMap&amp;#010;Used to resolve forward references to UMLEntityAttributes&amp;#010;Key -> The local attribute&amp;#010;Value -> Id of the attribute it is mapping to&amp;#010;@param value the value of m_pEntityAttributeIDMap" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="INWLuNzuFnoL" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="INWLuNzuFnoL" indentLevel="1" text="private UMLEntity* m_ReferencedEntity;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The UMLEntity that this foreign key references" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_4" accessType="0" parent_id="INWLuNzuFnoL" writeOutText="false" classfield_id="INWLuNzuFnoL" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of m_ReferencedEntity&amp;#010;The UMLEntity that this foreign key references&amp;#010;@return the value of m_ReferencedEntity" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_5" accessType="1" parent_id="INWLuNzuFnoL" writeOutText="false" classfield_id="INWLuNzuFnoL" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of m_ReferencedEntity&amp;#010;The UMLEntity that this foreign key references&amp;#010;@param value the value of m_ReferencedEntity" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="0" parent_id="niFyPp0QIrTZ" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="niFyPp0QIrTZ" writeOutText="false" indentLevel="1" text="public  ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="hblock_tag_6" accessType="0" parent_id="niFyPp0QIrTZ" writeOutText="false" classfield_id="niFyPp0QIrTZ" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_7" accessType="1" parent_id="niFyPp0QIrTZ" writeOutText="false" classfield_id="niFyPp0QIrTZ" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_8" accessType="2" parent_id="niFyPp0QIrTZ" writeOutText="false" classfield_id="niFyPp0QIrTZ" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_9" accessType="3" parent_id="niFyPp0QIrTZ" writeOutText="false" classfield_id="niFyPp0QIrTZ" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_10" accessType="4" parent_id="niFyPp0QIrTZ" writeOutText="false" classfield_id="niFyPp0QIrTZ" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="2097266" parent_id="TC5j4ZHtsgBx" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="TC5j4ZHtsgBx" writeOutText="false" indentLevel="1" text="public UMLEntityAttribute ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="TC5j4ZHtsgBx" writeOutText="false" classfield_id="TC5j4ZHtsgBx" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="TC5j4ZHtsgBx" writeOutText="false" classfield_id="TC5j4ZHtsgBx" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="TC5j4ZHtsgBx" writeOutText="false" classfield_id="TC5j4ZHtsgBx" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="TC5j4ZHtsgBx" writeOutText="false" classfield_id="TC5j4ZHtsgBx" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="TC5j4ZHtsgBx" writeOutText="false" classfield_id="TC5j4ZHtsgBx" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="2097266" parent_id="S8jImtE85ZZl" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="S8jImtE85ZZl" writeOutText="false" indentLevel="1" text="public UMLEntityAttribute ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="S8jImtE85ZZl" writeOutText="false" classfield_id="S8jImtE85ZZl" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="S8jImtE85ZZl" writeOutText="false" classfield_id="S8jImtE85ZZl" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="S8jImtE85ZZl" writeOutText="false" classfield_id="S8jImtE85ZZl" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="S8jImtE85ZZl" writeOutText="false" classfield_id="S8jImtE85ZZl" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="S8jImtE85ZZl" writeOutText="false" classfield_id="S8jImtE85ZZl" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="2097266" parent_id="qdjtCHclCu4J" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="qdjtCHclCu4J" writeOutText="false" indentLevel="1" text="public  ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="qdjtCHclCu4J" writeOutText="false" classfield_id="qdjtCHclCu4J" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="qdjtCHclCu4J" writeOutText="false" classfield_id="qdjtCHclCu4J" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="qdjtCHclCu4J" writeOutText="false" classfield_id="qdjtCHclCu4J" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="qdjtCHclCu4J" writeOutText="false" classfield_id="qdjtCHclCu4J" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="qdjtCHclCu4J" writeOutText="false" classfield_id="qdjtCHclCu4J" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="HjrRbtlPRxBp" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="HjrRbtlPRxBp" indentLevel="1" text="private QMap&lt; UMLEntityAttribute *, UMLEntityAttribute * > m_AttributeMap;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_11" accessType="0" parent_id="HjrRbtlPRxBp" writeOutText="false" classfield_id="HjrRbtlPRxBp" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_12" accessType="1" parent_id="HjrRbtlPRxBp" writeOutText="false" classfield_id="HjrRbtlPRxBp" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="BalGn3zgWuNw" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="BalGn3zgWuNw" indentLevel="1" text="private UpdateDeleteAction m_UpdateAction;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_13" accessType="0" parent_id="BalGn3zgWuNw" writeOutText="false" classfield_id="BalGn3zgWuNw" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_14" accessType="1" parent_id="BalGn3zgWuNw" writeOutText="false" classfield_id="BalGn3zgWuNw" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="CcA7cFDrw4IY" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="CcA7cFDrw4IY" indentLevel="1" text="private UpdateDeleteAction m_DeleteAction;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_15" accessType="0" parent_id="CcA7cFDrw4IY" writeOutText="false" classfield_id="CcA7cFDrw4IY" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_16" accessType="1" parent_id="CcA7cFDrw4IY" writeOutText="false" classfield_id="CcA7cFDrw4IY" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="MRvaUd4dy2vR" fileExt=".cpp" parent_class="XTKVpWqZPBj0" id="XTKVpWqZPBj0" fileName="UpdateDeleteAction" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UpdateDeleteAction.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:33&amp;#010;The original location of this file is UMLForeignKeyConstraint&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="i2wKCWb5BakI" id="i2wKCWb5BakI" fileName="const_UMLForeignKeyConstraint_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        const_UMLForeignKeyConstraint_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:33&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="KiIfnwaL1Qqj" id="KiIfnwaL1Qqj" fileName="UMLEntity_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLEntity_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:34&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="TKsgDB3rwGzW" id="TKsgDB3rwGzW" fileName="UMLEntityAttribute_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLEntityAttribute_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:34&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="hHOzXWYh0pdd" id="hHOzXWYh0pdd" fileName="QMap_UMLEntityAttribute_UMLEntityAttribute_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QMap_UMLEntityAttribute_UMLEntityAttribute_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:35&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="Sq0ldvmUxRAb" id="Sq0ldvmUxRAb" fileName="QMap_UMLEntityAttribute_Uml_IDType_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QMap_UMLEntityAttribute_Uml_IDType_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:36&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="FqTK0xDFYwn7" id="FqTK0xDFYwn7" fileName="QListIterator_UMLObject_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QListIterator_UMLObject_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:36&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="MuR0yJicuobD" id="MuR0yJicuobD" fileName="UMLObjectListIt" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLObjectListIt.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:36&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="KBNhUHJk7m25" id="KBNhUHJk7m25" fileName="UMLObjectList" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;umlobjectlist.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks>
        <codeoperation tag="operation_tqMCJI01WWoV" parent_id="tqMCJI01WWoV" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_5jCtv5sCFKU7" parent_id="5jCtv5sCFKU7" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation tag="operation_Ig0PPjTGZpQq" parent_id="Ig0PPjTGZpQq" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Copy the internal presentation of this object into the new&amp;#010;object." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_QBCy1co71ejv" parent_id="QBCy1co71ejv" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Make a clone of this object." />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLObjectList.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:37&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield role_id="1" listClassName="" field_type="2097266" parent_id="0BZuxA5HLSwq" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="0BZuxA5HLSwq" writeOutText="false" indentLevel="1" text="public QList&lt; UMLObject * > ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="0BZuxA5HLSwq" writeOutText="false" classfield_id="0BZuxA5HLSwq" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="0BZuxA5HLSwq" writeOutText="false" classfield_id="0BZuxA5HLSwq" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="0BZuxA5HLSwq" writeOutText="false" classfield_id="0BZuxA5HLSwq" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="0BZuxA5HLSwq" writeOutText="false" classfield_id="0BZuxA5HLSwq" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="0BZuxA5HLSwq" writeOutText="false" classfield_id="0BZuxA5HLSwq" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="hGKDA6KV0jVw" id="hGKDA6KV0jVw" fileName="QList_UMLObject_" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;qlist_umlobject_.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QList_UMLObject_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:37&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield role_id="0" listClassName="" field_type="121" parent_id="0BZuxA5HLSwq" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="0BZuxA5HLSwq" writeOutText="false" indentLevel="1" text="public UMLObjectList ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="" accessType="0" parent_id="0BZuxA5HLSwq" writeOutText="false" classfield_id="0BZuxA5HLSwq" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="1" parent_id="0BZuxA5HLSwq" writeOutText="false" classfield_id="0BZuxA5HLSwq" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="2" parent_id="0BZuxA5HLSwq" writeOutText="false" classfield_id="0BZuxA5HLSwq" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="3" parent_id="0BZuxA5HLSwq" writeOutText="false" classfield_id="0BZuxA5HLSwq" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="4" parent_id="0BZuxA5HLSwq" writeOutText="false" classfield_id="0BZuxA5HLSwq" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="6Prcve70NJsG" id="6Prcve70NJsG" fileName="UMLObjectList_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLObjectList_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:37&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="IkotSWpqh1mi" fileExt=".cpp" parent_class="dbndDWWVLN8R" id="dbndDWWVLN8R" fileName="Parse_Status" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        Parse_Status.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:38&amp;#010;The original location of this file is Model_Utils&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="IkotSWpqh1mi" fileExt=".cpp" parent_class="IH5AzLTnQJhA" id="IH5AzLTnQJhA" fileName="NameAndType" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;nameandtype.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks>
        <codeoperation tag="operation_KJre7ZxFh1p9" parent_id="KJre7ZxFh1p9" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_mWoYirn1VXPE" parent_id="mWoYirn1VXPE" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="F2WOU8aW6AVK" writeOutText="false" classfield_id="F2WOU8aW6AVK" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="F2WOU8aW6AVK" writeOutText="false" classfield_id="F2WOU8aW6AVK" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_2" accessType="0" parent_id="GnaaG5lZKojJ" writeOutText="false" classfield_id="GnaaG5lZKojJ" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_3" accessType="1" parent_id="GnaaG5lZKojJ" writeOutText="false" classfield_id="GnaaG5lZKojJ" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_4" accessType="0" parent_id="AA6aRlihnE5F" writeOutText="false" classfield_id="AA6aRlihnE5F" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_5" accessType="1" parent_id="AA6aRlihnE5F" writeOutText="false" classfield_id="AA6aRlihnE5F" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_6" accessType="0" parent_id="KdlOlHiz2HZI" writeOutText="false" classfield_id="KdlOlHiz2HZI" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_7" accessType="1" parent_id="KdlOlHiz2HZI" writeOutText="false" classfield_id="KdlOlHiz2HZI" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        NameAndType.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:38&amp;#010;The original location of this file is Model_Utils&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="F2WOU8aW6AVK" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="F2WOU8aW6AVK" indentLevel="1" text="public QString m_name;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="F2WOU8aW6AVK" writeOutText="false" classfield_id="F2WOU8aW6AVK" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="F2WOU8aW6AVK" writeOutText="false" classfield_id="F2WOU8aW6AVK" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="GnaaG5lZKojJ" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="GnaaG5lZKojJ" indentLevel="1" text="public UMLObject* m_type;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_2" accessType="0" parent_id="GnaaG5lZKojJ" writeOutText="false" classfield_id="GnaaG5lZKojJ" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_3" accessType="1" parent_id="GnaaG5lZKojJ" writeOutText="false" classfield_id="GnaaG5lZKojJ" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="AA6aRlihnE5F" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="AA6aRlihnE5F" indentLevel="1" text="public Uml::Parameter_Direction m_direction;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_4" accessType="0" parent_id="AA6aRlihnE5F" writeOutText="false" classfield_id="AA6aRlihnE5F" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_5" accessType="1" parent_id="AA6aRlihnE5F" writeOutText="false" classfield_id="AA6aRlihnE5F" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="KdlOlHiz2HZI" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="KdlOlHiz2HZI" indentLevel="1" text="public QString m_initialValue;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_6" accessType="0" parent_id="KdlOlHiz2HZI" writeOutText="false" classfield_id="KdlOlHiz2HZI" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_7" accessType="1" parent_id="KdlOlHiz2HZI" writeOutText="false" classfield_id="KdlOlHiz2HZI" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="IkotSWpqh1mi" fileExt=".cpp" parent_class="VDVEJ1fEI8c6" id="VDVEJ1fEI8c6" fileName="NameAndType_List" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        NameAndType_List.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:39&amp;#010;The original location of this file is Model_Utils&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="IkotSWpqh1mi" fileExt=".cpp" parent_class="yEgs527fUzLr" id="yEgs527fUzLr" fileName="NameAndType_ListIt" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        NameAndType_ListIt.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:39&amp;#010;The original location of this file is Model_Utils&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="IkotSWpqh1mi" fileExt=".cpp" parent_class="8CeTSczvqU97" id="8CeTSczvqU97" fileName="OpDescriptor" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;opdescriptor.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="TmJjsvpq7TgC" writeOutText="false" classfield_id="TmJjsvpq7TgC" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="TmJjsvpq7TgC" writeOutText="false" classfield_id="TmJjsvpq7TgC" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_2" accessType="0" parent_id="VnpymBnsLRJn" writeOutText="false" classfield_id="VnpymBnsLRJn" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_3" accessType="1" parent_id="VnpymBnsLRJn" writeOutText="false" classfield_id="VnpymBnsLRJn" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_4" accessType="0" parent_id="2IgslpxCZGwS" writeOutText="false" classfield_id="2IgslpxCZGwS" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_5" accessType="1" parent_id="2IgslpxCZGwS" writeOutText="false" classfield_id="2IgslpxCZGwS" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        OpDescriptor.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:39&amp;#010;The original location of this file is Model_Utils&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="TmJjsvpq7TgC" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="TmJjsvpq7TgC" indentLevel="1" text="public QString m_name;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="TmJjsvpq7TgC" writeOutText="false" classfield_id="TmJjsvpq7TgC" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="TmJjsvpq7TgC" writeOutText="false" classfield_id="TmJjsvpq7TgC" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="VnpymBnsLRJn" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="VnpymBnsLRJn" indentLevel="1" text="public Model_Utils::NameAndType_List m_args;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_2" accessType="0" parent_id="VnpymBnsLRJn" writeOutText="false" classfield_id="VnpymBnsLRJn" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_3" accessType="1" parent_id="VnpymBnsLRJn" writeOutText="false" classfield_id="VnpymBnsLRJn" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="2IgslpxCZGwS" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="2IgslpxCZGwS" indentLevel="1" text="public UMLObject* m_pReturnType;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_4" accessType="0" parent_id="2IgslpxCZGwS" writeOutText="false" classfield_id="2IgslpxCZGwS" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_5" accessType="1" parent_id="2IgslpxCZGwS" writeOutText="false" classfield_id="2IgslpxCZGwS" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="9jGGDxRgiGcT" id="9jGGDxRgiGcT" fileName="UMLAssociation" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLAssociation.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:39&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="PPLkrfVtvBje" id="PPLkrfVtvBje" fileName="QList_UMLAssociation_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QList_UMLAssociation_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:39&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="ygrYuny1WCFh" id="ygrYuny1WCFh" fileName="UMLAssociationList" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLAssociationList.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:40&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="7gMqvyHKOa3D" id="7gMqvyHKOa3D" fileName="QListIterator_UMLAssociation_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QListIterator_UMLAssociation_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:40&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="DY69knngReEJ" id="DY69knngReEJ" fileName="UMLAssociationListIt" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLAssociationListIt.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:40&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="PAKwLZbSExG9" id="PAKwLZbSExG9" fileName="UMLCanvasObject" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;umlcanvasobject.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks>
        <codeoperation tag="operation_6Ih5p8o7MCqC" parent_id="6Ih5p8o7MCqC" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_K0XeCNoyDFSP" parent_id="K0XeCNoyDFSP" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Standard deconstructor." />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation tag="operation_l4U3Afy13U94" parent_id="l4U3Afy13U94" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text=" Overloaded '==' operator" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_22oQLY026Wvs" parent_id="22oQLY026Wvs" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Copy the internal presentation of this object into the new&amp;#010;object." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_2BLwpYcsYOIu" parent_id="2BLwpYcsYOIu" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Adds an association end to m_List.&amp;#010;&amp;#010;@param assoc  The association to add.&amp;#010;              @todo change param type to UMLRole" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_JnFI2vDHFP1J" parent_id="JnFI2vDHFP1J" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Determine if this canvasobject has the given association.&amp;#010;&amp;#010;@param assoc   The association to check." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_FTxSqwm6CBQ1" parent_id="FTxSqwm6CBQ1" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Remove an association end from the CanvasObject.&amp;#010;&amp;#010;@param assoc   The association to remove.&amp;#010;               @todo change param type to UMLRole" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_nN3xYRz90yoT" parent_id="nN3xYRz90yoT" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Remove all association ends from the CanvasObject." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_ZWoNDIqlsIxl" parent_id="ZWoNDIqlsIxl" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns the number of associations for the CanvasObject.&amp;#010;This is the sum of the aggregations and compositions.&amp;#010;&amp;#010;@return  The number of associations for the Concept." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_WMaUIOxqukB5" parent_id="WMaUIOxqukB5" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Return the list of associations for the CanvasObject.&amp;#010;&amp;#010;@return   The list of associations for the CanvasObject." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_2QfwV2NzMxUd" parent_id="2QfwV2NzMxUd" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Return the subset of m_List that matches the given type.&amp;#010;&amp;#010;@param assocType   The Association_Type to match.&amp;#010;@return   The list of associations that match assocType." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_MMRjJvKcInnQ" parent_id="MMRjJvKcInnQ" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Return a list of the superclasses of this concept.&amp;#010;TODO: This overlaps with UMLClassifier::findSuperClassConcepts(),&amp;#010;      see if we can merge the two.&amp;#010;&amp;#010;@return  The list of superclasses for the concept." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_d95ZV5zrRQYj" parent_id="d95ZV5zrRQYj" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Return a list of the classes that inherit from this concept.&amp;#010;TODO: This overlaps with UMLClassifier::findSubClassConcepts(),&amp;#010;      see if we can merge the two.&amp;#010;&amp;#010;@return  The list of classes inheriting from the concept." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_wzMu5ouhxyGQ" parent_id="wzMu5ouhxyGQ" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Shorthand for getSpecificAssocs(Uml::at_Realization)&amp;#010;&amp;#010;@return  The list of realizations for the Concept." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_aRJlwM5sLRkP" parent_id="aRJlwM5sLRkP" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Shorthand for getSpecificAssocs(Uml::at_Aggregation)&amp;#010;&amp;#010;@return  The list of aggregations for the Concept." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_eE4JhWZFxt0s" parent_id="eE4JhWZFxt0s" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Shorthand for getSpecificAssocs(Uml::at_Composition)&amp;#010;&amp;#010;@return  The list of compositions for the Concept." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_KSJqJNzvZ1EE" parent_id="KSJqJNzvZ1EE" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Shorthand for getSpecificAssocs(Uml::at_Relationship)&amp;#010;&amp;#010;@return  The list of relationships for the entity." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_SKeYJWFdyYRG" parent_id="SKeYJWFdyYRG" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Find a child object with the given name.&amp;#010;&amp;#010;@param n         The name of the object to find.&amp;#010;@param t         The type to find (optional.) If not given then&amp;#010;                 any object type will match.&amp;#010;@return  Pointer to the object found; NULL if none found." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_qUTydojESOI4" parent_id="qUTydojESOI4" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Find an association.&amp;#010;&amp;#010;@param id        The id of the object to find.&amp;#010;@param considerAncestors boolean switch to consider ancestors while searching&amp;#010;@return  Pointer to the object found (NULL if not found.)" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_qa0RN9QsehUb" parent_id="qa0RN9QsehUb" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns a name for the new association, operation, template&amp;#010;or attribute appended with a number if the default name is&amp;#010;taken e.g. new_association, new_association_1 etc.&amp;#010;&amp;#010;@param type      The object type for which to make a name.&amp;#010;@param prefix    Optional prefix to use for the name.&amp;#010;                 If not given then uniqChildName() will choose the prefix&amp;#010;                 internally based on the object type.&amp;#010;@return  Unique name string for the Object_Type given." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_KT7ck2G9MjEN" parent_id="KT7ck2G9MjEN" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_fs9FtB8yfmbw" parent_id="fs9FtB8yfmbw" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_hMA33NQgDZw6" parent_id="hMA33NQgDZw6" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Reimplementation of UMLObject method." />
         </header>
        </codeoperation>
        <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="mLq50v4hHClI" writeOutText="false" classfield_id="mLq50v4hHClI" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of m_List&amp;#010;List of all the associations in this object.&amp;#010;Inheriting classes add more types of objects that are possible in this list;&amp;#010;for example, UMLClassifier adds operations, attributes, and templates.&amp;#010;&amp;#010;@todo Only a pointer to the appropriate association end object&amp;#010;      (UMLRole) should be saved here, not the entire UMLAssociation.&amp;#010;&amp;#010;@return the value of m_List" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="mLq50v4hHClI" writeOutText="false" classfield_id="mLq50v4hHClI" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of m_List&amp;#010;List of all the associations in this object.&amp;#010;Inheriting classes add more types of objects that are possible in this list;&amp;#010;for example, UMLClassifier adds operations, attributes, and templates.&amp;#010;&amp;#010;@todo Only a pointer to the appropriate association end object&amp;#010;      (UMLRole) should be saved here, not the entire UMLAssociation.&amp;#010;&amp;#010;@param value the value of m_List" />
         </header>
        </codeaccessormethod>
        <codeoperation tag="operation_Z9znjtrStuof" parent_id="Z9znjtrStuof" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Emit when new association is added.&amp;#010;@param assoc Pointer to the association which has been added." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_nwG281LgBIRs" parent_id="nwG281LgBIRs" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Emit when new association is removed.&amp;#010;@param assoc Pointer to the association which has been removed." />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLCanvasObject.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:44&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield role_id="1" listClassName="" field_type="768" parent_id="uXRI8STL1XSj" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="uXRI8STL1XSj" writeOutText="false" indentLevel="1" text="public UMLObject ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="uXRI8STL1XSj" writeOutText="false" classfield_id="uXRI8STL1XSj" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="uXRI8STL1XSj" writeOutText="false" classfield_id="uXRI8STL1XSj" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="uXRI8STL1XSj" writeOutText="false" classfield_id="uXRI8STL1XSj" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="uXRI8STL1XSj" writeOutText="false" classfield_id="uXRI8STL1XSj" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="uXRI8STL1XSj" writeOutText="false" classfield_id="uXRI8STL1XSj" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="mLq50v4hHClI" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="mLq50v4hHClI" indentLevel="1" text="protected UMLObjectList m_List;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="List of all the associations in this object.&amp;#010;Inheriting classes add more types of objects that are possible in this list;&amp;#010;for example, UMLClassifier adds operations, attributes, and templates.&amp;#010;&amp;#010;@todo Only a pointer to the appropriate association end object&amp;#010;      (UMLRole) should be saved here, not the entire UMLAssociation.&amp;#010;" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="mLq50v4hHClI" writeOutText="false" classfield_id="mLq50v4hHClI" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of m_List&amp;#010;List of all the associations in this object.&amp;#010;Inheriting classes add more types of objects that are possible in this list;&amp;#010;for example, UMLClassifier adds operations, attributes, and templates.&amp;#010;&amp;#010;@todo Only a pointer to the appropriate association end object&amp;#010;      (UMLRole) should be saved here, not the entire UMLAssociation.&amp;#010;&amp;#010;@return the value of m_List" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="mLq50v4hHClI" writeOutText="false" classfield_id="mLq50v4hHClI" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of m_List&amp;#010;List of all the associations in this object.&amp;#010;Inheriting classes add more types of objects that are possible in this list;&amp;#010;for example, UMLClassifier adds operations, attributes, and templates.&amp;#010;&amp;#010;@todo Only a pointer to the appropriate association end object&amp;#010;      (UMLRole) should be saved here, not the entire UMLAssociation.&amp;#010;&amp;#010;@param value the value of m_List" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="2097266" parent_id="m845GuXORfg8" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="m845GuXORfg8" writeOutText="false" indentLevel="1" text="public UMLPackage ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="" accessType="0" parent_id="m845GuXORfg8" writeOutText="false" classfield_id="m845GuXORfg8" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="1" parent_id="m845GuXORfg8" writeOutText="false" classfield_id="m845GuXORfg8" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="2" parent_id="m845GuXORfg8" writeOutText="false" classfield_id="m845GuXORfg8" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="3" parent_id="m845GuXORfg8" writeOutText="false" classfield_id="m845GuXORfg8" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="4" parent_id="m845GuXORfg8" writeOutText="false" classfield_id="m845GuXORfg8" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="neCQoOo8OLma" id="neCQoOo8OLma" fileName="const_UMLCanvasObject_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        const_UMLCanvasObject_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:41&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="wHw0lpsEzHiu" id="wHw0lpsEzHiu" fileName="UMLAssociation_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLAssociation_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:41&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="lfMII6RmYpgO" id="lfMII6RmYpgO" fileName="const_Uml_Object_Type" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        const_Uml_Object_Type.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:42&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="QO1zGta3pr5w" id="QO1zGta3pr5w" fileName="QList_UMLEntity_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QList_UMLEntity_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:43&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="qOczg3ppL7rU" id="qOczg3ppL7rU" fileName="UMLEntityList" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLEntityList.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:43&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="AZ8KhVU8rU75" id="AZ8KhVU8rU75" fileName="QListIterator_UMLEntity_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QListIterator_UMLEntity_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:43&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="Ng8BVC7LajJF" id="Ng8BVC7LajJF" fileName="UMLEntityListIt" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLEntityListIt.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:44&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="VfhJoi6FCcoe" id="VfhJoi6FCcoe" fileName="UMLPackageList_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLPackageList_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:45&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="x8GcFeNw74EU" id="x8GcFeNw74EU" fileName="UMLClassifierList_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLClassifierList_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:45&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="VQi0gFE8PQW6" id="VQi0gFE8PQW6" fileName="UMLEntityList_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLEntityList_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:45&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="jbhAE0BeGf5B" id="jbhAE0BeGf5B" fileName="UMLAttribute" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;umlattribute.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks>
        <codeoperation tag="operation_Ykf6DocOj6TM" parent_id="Ykf6DocOj6TM" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_jNMW38oIMBmj" parent_id="jNMW38oIMBmj" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets up an attribute.&amp;#010;&amp;#010;@param parent    The parent of this UMLAttribute." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_oH7NclUsbKzJ" parent_id="oH7NclUsbKzJ" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="destructor." />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation tag="operation_UjbBfOmMk7qn" parent_id="UjbBfOmMk7qn" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Overloaded '==' operator" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_qSU6XpwywBB8" parent_id="qSU6XpwywBB8" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Copy the internal presentation of this object into the UMLAttribute&amp;#010;object." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_LkFw2CDsfgwA" parent_id="LkFw2CDsfgwA" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Reimplementation of method from UMLObject is required as&amp;#010;an extra signal, attributeChanged(), is emitted." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_ZfQKFghYOwSQ" parent_id="ZfQKFghYOwSQ" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Reimplementation of method from UMLObject is required as&amp;#010;an extra signal, attributeChanged(), is emitted." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_LdMhfXBCCbXQ" parent_id="LdMhfXBCCbXQ" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Make a clone of the UMLAttribute." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_Xw6cyEjHp3yU" parent_id="Xw6cyEjHp3yU" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns The initial value of the UMLAttribute.&amp;#010;&amp;#010;@return  The initial value of the Atrtibute." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_WenXwnsThw3f" parent_id="WenXwnsThw3f" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets the initial value of the UMLAttribute.&amp;#010;&amp;#010;@param iv                The initial value of the UMLAttribute." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_FKgdQHAwtvSp" parent_id="FKgdQHAwtvSp" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns a string representation of the UMLAttribute.&amp;#010;&amp;#010;@param sig               If true will show the attribute type and&amp;#010;                 initial value.&amp;#010;@return  Returns a string representation of the UMLAttribute." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_Um3LfVAKoOh1" parent_id="Um3LfVAKoOh1" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Reimplement method from UMLObject." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_PNmjB1nQmqMl" parent_id="PNmjB1nQmqMl" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Creates the &lt;UML:Attribute> XMI element." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_CYvwMIhqjtiF" parent_id="CYvwMIhqjtiF" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Display the properties configuration dialog for the attribute." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_ElnweV9U8VG5" parent_id="ElnweV9U8VG5" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_r9fU5iRITEC7" parent_id="r9fU5iRITEC7" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_za7WKF0COdeR" parent_id="za7WKF0COdeR" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns all the template params (if any) that are in the type of this attribute" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_Ih8KxKnvsuRD" parent_id="Ih8KxKnvsuRD" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Required for informing AssociationWidgets representing this attribute&amp;#010;that the attribute name or visibility has changed." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_7QPV31uN5cDO" parent_id="7QPV31uN5cDO" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Loads the &lt;UML:Attribute> XMI element." />
         </header>
        </codeoperation>
        <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="bKugw52QBM4j" writeOutText="false" classfield_id="bKugw52QBM4j" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="bKugw52QBM4j" writeOutText="false" classfield_id="bKugw52QBM4j" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_2" accessType="0" parent_id="UkcJXn6ejlbZ" writeOutText="false" classfield_id="UkcJXn6ejlbZ" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_3" accessType="1" parent_id="UkcJXn6ejlbZ" writeOutText="false" classfield_id="UkcJXn6ejlbZ" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeoperation tag="operation_qoWLLuswFmb9" parent_id="qoWLLuswFmb9" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Puts in the param templateParamList all the template params that are in templateParam" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLAttribute.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:46&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield role_id="1" listClassName="" field_type="141566008" parent_id="n6RRQ1F8aVBW" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="n6RRQ1F8aVBW" writeOutText="false" indentLevel="1" text="public UMLClassifierListItem ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="n6RRQ1F8aVBW" writeOutText="false" classfield_id="n6RRQ1F8aVBW" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="n6RRQ1F8aVBW" writeOutText="false" classfield_id="n6RRQ1F8aVBW" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="n6RRQ1F8aVBW" writeOutText="false" classfield_id="n6RRQ1F8aVBW" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="n6RRQ1F8aVBW" writeOutText="false" classfield_id="n6RRQ1F8aVBW" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="n6RRQ1F8aVBW" writeOutText="false" classfield_id="n6RRQ1F8aVBW" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="bKugw52QBM4j" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="bKugw52QBM4j" indentLevel="1" text="protected QString m_InitialValue;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="bKugw52QBM4j" writeOutText="false" classfield_id="bKugw52QBM4j" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="bKugw52QBM4j" writeOutText="false" classfield_id="bKugw52QBM4j" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="UkcJXn6ejlbZ" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="UkcJXn6ejlbZ" indentLevel="1" text="protected Uml::Parameter_Direction m_ParmKind;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_2" accessType="0" parent_id="UkcJXn6ejlbZ" writeOutText="false" classfield_id="UkcJXn6ejlbZ" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_3" accessType="1" parent_id="UkcJXn6ejlbZ" writeOutText="false" classfield_id="UkcJXn6ejlbZ" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="Fe3ZqpJbZKe8" id="Fe3ZqpJbZKe8" fileName="const_UMLAttribute_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        const_UMLAttribute_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:47&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="nd72NgACHhCF" id="nd72NgACHhCF" fileName="QListIterator_UMLAttribute_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QListIterator_UMLAttribute_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:48&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="HwgaEQRJEv6n" id="HwgaEQRJEv6n" fileName="UMLAttributeListIt" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLAttributeListIt.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:48&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="yVBpOx19Y6Au" id="yVBpOx19Y6Au" fileName="UMLAttributeList" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;umlattributelist.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks>
        <codeoperation tag="operation_D2iTUd7sXsmV" parent_id="D2iTUd7sXsmV" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_maG1S3Cc4cw0" parent_id="maG1S3Cc4cw0" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_YdjaGea5KlQO" parent_id="YdjaGea5KlQO" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation tag="operation_iOdg1L7GAQ1n" parent_id="iOdg1L7GAQ1n" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Copy the internal presentation of this object into the new&amp;#010;object." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_DdbL3a7XrKfb" parent_id="DdbL3a7XrKfb" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Make a clone of this object." />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLAttributeList.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:49&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield role_id="1" listClassName="" field_type="2097266" parent_id="JGgX9nJ7ISue" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="JGgX9nJ7ISue" writeOutText="false" indentLevel="1" text="public QList&lt; UMLAttribute * > ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="JGgX9nJ7ISue" writeOutText="false" classfield_id="JGgX9nJ7ISue" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="JGgX9nJ7ISue" writeOutText="false" classfield_id="JGgX9nJ7ISue" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="JGgX9nJ7ISue" writeOutText="false" classfield_id="JGgX9nJ7ISue" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="JGgX9nJ7ISue" writeOutText="false" classfield_id="JGgX9nJ7ISue" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="JGgX9nJ7ISue" writeOutText="false" classfield_id="JGgX9nJ7ISue" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="mK62zHFFBvpP" id="mK62zHFFBvpP" fileName="QList_UMLAttribute_" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;qlist_umlattribute_.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QList_UMLAttribute_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:49&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield role_id="0" listClassName="" field_type="121" parent_id="JGgX9nJ7ISue" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="JGgX9nJ7ISue" writeOutText="false" indentLevel="1" text="public UMLAttributeList ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="" accessType="0" parent_id="JGgX9nJ7ISue" writeOutText="false" classfield_id="JGgX9nJ7ISue" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="1" parent_id="JGgX9nJ7ISue" writeOutText="false" classfield_id="JGgX9nJ7ISue" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="2" parent_id="JGgX9nJ7ISue" writeOutText="false" classfield_id="JGgX9nJ7ISue" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="3" parent_id="JGgX9nJ7ISue" writeOutText="false" classfield_id="JGgX9nJ7ISue" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="4" parent_id="JGgX9nJ7ISue" writeOutText="false" classfield_id="JGgX9nJ7ISue" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="rgDL4yyHyekT" id="rgDL4yyHyekT" fileName="const_UMLAttributeList_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        const_UMLAttributeList_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:49&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="VHD8leEHFvrT" id="VHD8leEHFvrT" fileName="UMLAttributeList_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLAttributeList_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:50&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="7T5RMbmXEMrF" id="7T5RMbmXEMrF" fileName="QListIterator_UMLClassifierListItem_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QListIterator_UMLClassifierListItem_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:50&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="wymmISLCJBL6" id="wymmISLCJBL6" fileName="UMLClassifierListItemListIt" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLClassifierListItemListIt.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:50&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="ryVv6j7CCBdW" id="ryVv6j7CCBdW" fileName="UMLClassifierListItemList" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;umlclassifierlistitemlist.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks>
        <codeoperation tag="operation_Tlv22Yi2JZCF" parent_id="Tlv22Yi2JZCF" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_2tvtcZSEPefE" parent_id="2tvtcZSEPefE" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation tag="operation_D83amgp0sFWs" parent_id="D83amgp0sFWs" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation tag="operation_cEKkrrs232Vp" parent_id="cEKkrrs232Vp" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Copy the internal presentation of this object into the new&amp;#010;object." />
         </header>
        </codeoperation>
        <codeoperation tag="operation_ysl0sGnESPpK" parent_id="ysl0sGnESPpK" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Make a clone of this object." />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLClassifierListItemList.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:51&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield role_id="1" listClassName="" field_type="2097266" parent_id="QjJjteqkbJdf" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="QjJjteqkbJdf" writeOutText="false" indentLevel="1" text="public QList&lt; UMLClassifierListItem * > ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="QjJjteqkbJdf" writeOutText="false" classfield_id="QjJjteqkbJdf" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="QjJjteqkbJdf" writeOutText="false" classfield_id="QjJjteqkbJdf" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="QjJjteqkbJdf" writeOutText="false" classfield_id="QjJjteqkbJdf" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="QjJjteqkbJdf" writeOutText="false" classfield_id="QjJjteqkbJdf" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="QjJjteqkbJdf" writeOutText="false" classfield_id="QjJjteqkbJdf" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="mO4yktDer0O7" id="mO4yktDer0O7" fileName="QList_UMLClassifierListItem_" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;qlist_umlclassifierlistitem_.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QList_UMLClassifierListItem_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:51&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield role_id="0" listClassName="" field_type="6750318" parent_id="QjJjteqkbJdf" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="QjJjteqkbJdf" writeOutText="false" indentLevel="1" text="public UMLClassifierListItemList ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="" accessType="0" parent_id="QjJjteqkbJdf" writeOutText="false" classfield_id="QjJjteqkbJdf" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="1" parent_id="QjJjteqkbJdf" writeOutText="false" classfield_id="QjJjteqkbJdf" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="2" parent_id="QjJjteqkbJdf" writeOutText="false" classfield_id="QjJjteqkbJdf" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="3" parent_id="QjJjteqkbJdf" writeOutText="false" classfield_id="QjJjteqkbJdf" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="4" parent_id="QjJjteqkbJdf" writeOutText="false" classfield_id="QjJjteqkbJdf" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="EBSX0NkU8dWA" id="EBSX0NkU8dWA" fileName="const_UMLClassifierListItemList_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        const_UMLClassifierListItemList_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:51&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="MEcasIR3QSeB" id="MEcasIR3QSeB" fileName="UMLClassifierListItemList_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLClassifierListItemList_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:51&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="4aLxhLegDPg3" id="4aLxhLegDPg3" fileName="UMLOperation" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLOperation.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:52&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="dRH6r4OWIkcy" id="dRH6r4OWIkcy" fileName="QList_UMLOperation_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QList_UMLOperation_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:52&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="irl7IWCM6XHl" id="irl7IWCM6XHl" fileName="UMLOperationList" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLOperationList.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:52&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="stR3G54uXMyM" id="stR3G54uXMyM" fileName="QListIterator_UMLOperation_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QListIterator_UMLOperation_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:52&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="OKsh3VflMQtc" id="OKsh3VflMQtc" fileName="UMLOperationListIt" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLOperationListIt.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:52&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="u3wybCkR59TM" id="u3wybCkR59TM" fileName="UMLTemplate" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLTemplate.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:53&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="FVEkpA6EUyvX" id="FVEkpA6EUyvX" fileName="QList_UMLTemplate_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QList_UMLTemplate_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:53&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="RYHoxAOrBLqk" id="RYHoxAOrBLqk" fileName="UMLTemplateList" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLTemplateList.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:53&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="XYAchdwu6Aew" id="XYAchdwu6Aew" fileName="QListIterator_UMLTemplate_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QListIterator_UMLTemplate_.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:53&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="KkAnh5K8dZua" id="KkAnh5K8dZua" fileName="UMLTemplateListIt" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLTemplateListIt.cpp - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:54&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="aTYr61x04nJa" id="cppheaderaTYr61x04nJa" fileName="unsigned_int" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef UNSIGNED_INT_H&amp;#010;#define UNSIGNED_INT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="aTYr61x04nJa" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" text="Class unsigned_int&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="unsigned_int ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //UNSIGNED_INT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        unsigned_int.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:16:19&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="accGaxLGGIaW" id="cppheaderaccGaxLGGIaW" fileName="unsigned_short" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef UNSIGNED_SHORT_H&amp;#010;#define UNSIGNED_SHORT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="accGaxLGGIaW" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" text="Class unsigned_short&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="unsigned_short ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //UNSIGNED_SHORT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        unsigned_short.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:16:19&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="4Cj06egg7EVB" id="cppheader4Cj06egg7EVB" fileName="unsigned_long" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef UNSIGNED_LONG_H&amp;#010;#define UNSIGNED_LONG_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="4Cj06egg7EVB" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" text="Class unsigned_long&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="unsigned_long ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //UNSIGNED_LONG_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        unsigned_long.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:16:19&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="ES9IFQqn1Q3Z" id="cppheaderES9IFQqn1Q3Z" fileName="string" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef STRING_H&amp;#010;#define STRING_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="ES9IFQqn1Q3Z" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" text="Class string&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="string ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //STRING_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        string.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:16:19&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="MrbhhCI2Jxa7" id="cppheaderMrbhhCI2Jxa7" fileName="AssociationWidget" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        AssociationWidget.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:05&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="EYzY6XNnKfgK" id="cppheaderEYzY6XNnKfgK" fileName="QList" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QList.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:05&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="AwBSERm60RlC" id="cppheaderAwBSERm60RlC" fileName="QList_AssociationWidget_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QList_AssociationWidget_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:05&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="jnVhObKc9H9D" id="cppheaderjnVhObKc9H9D" fileName="AssociationWidgetList" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        AssociationWidgetList.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:06&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="oW069fRHbakp" id="cppheaderoW069fRHbakp" fileName="QListIterator" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QListIterator.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:06&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="zUv0weCdSgIo" id="cppheaderzUv0weCdSgIo" fileName="QListIterator_AssociationWidget_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QListIterator_AssociationWidget_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:06&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="FcOMtXZg2Xm9" id="cppheaderFcOMtXZg2Xm9" fileName="AssociationWidgetListIt" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        AssociationWidgetListIt.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:06&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="CBRlk9bhdUfX" fileExt=".h" parent_class="9sBZWTLj4j5v" id="cppheader9sBZWTLj4j5v" fileName="CodeViewerState" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef CODEVIEWERSTATE_H&amp;#010;#define CODEVIEWERSTATE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;qfont.h&quot;&amp;#010;#include &quot;qcolor.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="9sBZWTLj4j5v" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" text="Class CodeViewerState&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock tag="tblock_0" parent_id="FcZH7MOKVp3F" indentLevel="1" text=" int height;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_2" parent_id="yexa7c7ESGnw" indentLevel="1" text=" int width;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_5" parent_id="i8dmpif4IFJQ" indentLevel="1" text=" bool showHiddenBlocks;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_8" parent_id="Zii4VlISOD2T" indentLevel="1" text=" bool blocksAreHighlighted;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_11" parent_id="UVQlkh9HNpMt" indentLevel="1" text=" QFont font;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_14" parent_id="W1w2pmQHIo00" indentLevel="1" text=" QColor paperColor;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_17" parent_id="V9ItyekXG3T5" indentLevel="1" text=" QColor fontColor;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_20" parent_id="OrjqtahObdQO" indentLevel="1" text=" QColor selectedColor;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_23" parent_id="Qodgceg8lwzk" indentLevel="1" text=" QColor editBlockColor;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_26" parent_id="YhFokir6XbwR" indentLevel="1" text=" QColor nonEditBlockColor;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_29" parent_id="9bnkFD8d2lHe" indentLevel="1" text=" QColor umlObjectColor;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_32" parent_id="Nvk9shrOO6D6" indentLevel="1" text=" QColor hiddenColor;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="CodeViewerState ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="FcZH7MOKVp3F" writeOutText="false" indentLevel="1" classfield_id="FcZH7MOKVp3F" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="FcZH7MOKVp3F" writeOutText="false" indentLevel="1" classfield_id="FcZH7MOKVp3F" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_3" accessType="0" parent_id="yexa7c7ESGnw" writeOutText="false" indentLevel="1" classfield_id="yexa7c7ESGnw" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_4" accessType="1" parent_id="yexa7c7ESGnw" writeOutText="false" indentLevel="1" classfield_id="yexa7c7ESGnw" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_6" accessType="0" parent_id="i8dmpif4IFJQ" writeOutText="false" indentLevel="1" classfield_id="i8dmpif4IFJQ" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_7" accessType="1" parent_id="i8dmpif4IFJQ" writeOutText="false" indentLevel="1" classfield_id="i8dmpif4IFJQ" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_9" accessType="0" parent_id="Zii4VlISOD2T" writeOutText="false" indentLevel="1" classfield_id="Zii4VlISOD2T" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_10" accessType="1" parent_id="Zii4VlISOD2T" writeOutText="false" indentLevel="1" classfield_id="Zii4VlISOD2T" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_12" accessType="0" parent_id="UVQlkh9HNpMt" writeOutText="false" indentLevel="1" classfield_id="UVQlkh9HNpMt" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_13" accessType="1" parent_id="UVQlkh9HNpMt" writeOutText="false" indentLevel="1" classfield_id="UVQlkh9HNpMt" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_15" accessType="0" parent_id="W1w2pmQHIo00" writeOutText="false" indentLevel="1" classfield_id="W1w2pmQHIo00" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_16" accessType="1" parent_id="W1w2pmQHIo00" writeOutText="false" indentLevel="1" classfield_id="W1w2pmQHIo00" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_18" accessType="0" parent_id="V9ItyekXG3T5" writeOutText="false" indentLevel="1" classfield_id="V9ItyekXG3T5" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_19" accessType="1" parent_id="V9ItyekXG3T5" writeOutText="false" indentLevel="1" classfield_id="V9ItyekXG3T5" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_21" accessType="0" parent_id="OrjqtahObdQO" writeOutText="false" indentLevel="1" classfield_id="OrjqtahObdQO" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_22" accessType="1" parent_id="OrjqtahObdQO" writeOutText="false" indentLevel="1" classfield_id="OrjqtahObdQO" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_24" accessType="0" parent_id="Qodgceg8lwzk" writeOutText="false" indentLevel="1" classfield_id="Qodgceg8lwzk" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_25" accessType="1" parent_id="Qodgceg8lwzk" writeOutText="false" indentLevel="1" classfield_id="Qodgceg8lwzk" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_27" accessType="0" parent_id="YhFokir6XbwR" writeOutText="false" indentLevel="1" classfield_id="YhFokir6XbwR" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_28" accessType="1" parent_id="YhFokir6XbwR" writeOutText="false" indentLevel="1" classfield_id="YhFokir6XbwR" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_30" accessType="0" parent_id="9bnkFD8d2lHe" writeOutText="false" indentLevel="1" classfield_id="9bnkFD8d2lHe" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_31" accessType="1" parent_id="9bnkFD8d2lHe" writeOutText="false" indentLevel="1" classfield_id="9bnkFD8d2lHe" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_33" accessType="0" parent_id="Nvk9shrOO6D6" writeOutText="false" indentLevel="1" classfield_id="Nvk9shrOO6D6" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_34" accessType="1" parent_id="Nvk9shrOO6D6" writeOutText="false" indentLevel="1" classfield_id="Nvk9shrOO6D6" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //CODEVIEWERSTATE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        CodeViewerState.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:06&amp;#010;The original location of this file is Settings&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="FcZH7MOKVp3F" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="tblock_0" parent_id="FcZH7MOKVp3F" indentLevel="1" text=" int height;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="FcZH7MOKVp3F" writeOutText="false" indentLevel="1" classfield_id="FcZH7MOKVp3F" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="FcZH7MOKVp3F" writeOutText="false" indentLevel="1" classfield_id="FcZH7MOKVp3F" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="yexa7c7ESGnw" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_2" parent_id="yexa7c7ESGnw" indentLevel="1" text=" int width;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_3" accessType="0" parent_id="yexa7c7ESGnw" writeOutText="false" indentLevel="1" classfield_id="yexa7c7ESGnw" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_4" accessType="1" parent_id="yexa7c7ESGnw" writeOutText="false" indentLevel="1" classfield_id="yexa7c7ESGnw" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="i8dmpif4IFJQ" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_5" parent_id="i8dmpif4IFJQ" indentLevel="1" text=" bool showHiddenBlocks;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_6" accessType="0" parent_id="i8dmpif4IFJQ" writeOutText="false" indentLevel="1" classfield_id="i8dmpif4IFJQ" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_7" accessType="1" parent_id="i8dmpif4IFJQ" writeOutText="false" indentLevel="1" classfield_id="i8dmpif4IFJQ" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="Zii4VlISOD2T" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_8" parent_id="Zii4VlISOD2T" indentLevel="1" text=" bool blocksAreHighlighted;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_9" accessType="0" parent_id="Zii4VlISOD2T" writeOutText="false" indentLevel="1" classfield_id="Zii4VlISOD2T" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_10" accessType="1" parent_id="Zii4VlISOD2T" writeOutText="false" indentLevel="1" classfield_id="Zii4VlISOD2T" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="UVQlkh9HNpMt" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_11" parent_id="UVQlkh9HNpMt" indentLevel="1" text=" QFont font;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_12" accessType="0" parent_id="UVQlkh9HNpMt" writeOutText="false" indentLevel="1" classfield_id="UVQlkh9HNpMt" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_13" accessType="1" parent_id="UVQlkh9HNpMt" writeOutText="false" indentLevel="1" classfield_id="UVQlkh9HNpMt" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="W1w2pmQHIo00" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_14" parent_id="W1w2pmQHIo00" indentLevel="1" text=" QColor paperColor;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_15" accessType="0" parent_id="W1w2pmQHIo00" writeOutText="false" indentLevel="1" classfield_id="W1w2pmQHIo00" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_16" accessType="1" parent_id="W1w2pmQHIo00" writeOutText="false" indentLevel="1" classfield_id="W1w2pmQHIo00" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="V9ItyekXG3T5" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_17" parent_id="V9ItyekXG3T5" indentLevel="1" text=" QColor fontColor;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_18" accessType="0" parent_id="V9ItyekXG3T5" writeOutText="false" indentLevel="1" classfield_id="V9ItyekXG3T5" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_19" accessType="1" parent_id="V9ItyekXG3T5" writeOutText="false" indentLevel="1" classfield_id="V9ItyekXG3T5" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="OrjqtahObdQO" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_20" parent_id="OrjqtahObdQO" indentLevel="1" text=" QColor selectedColor;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_21" accessType="0" parent_id="OrjqtahObdQO" writeOutText="false" indentLevel="1" classfield_id="OrjqtahObdQO" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_22" accessType="1" parent_id="OrjqtahObdQO" writeOutText="false" indentLevel="1" classfield_id="OrjqtahObdQO" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="Qodgceg8lwzk" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_23" parent_id="Qodgceg8lwzk" indentLevel="1" text=" QColor editBlockColor;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_24" accessType="0" parent_id="Qodgceg8lwzk" writeOutText="false" indentLevel="1" classfield_id="Qodgceg8lwzk" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_25" accessType="1" parent_id="Qodgceg8lwzk" writeOutText="false" indentLevel="1" classfield_id="Qodgceg8lwzk" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="YhFokir6XbwR" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_26" parent_id="YhFokir6XbwR" indentLevel="1" text=" QColor nonEditBlockColor;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_27" accessType="0" parent_id="YhFokir6XbwR" writeOutText="false" indentLevel="1" classfield_id="YhFokir6XbwR" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_28" accessType="1" parent_id="YhFokir6XbwR" writeOutText="false" indentLevel="1" classfield_id="YhFokir6XbwR" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="9bnkFD8d2lHe" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_29" parent_id="9bnkFD8d2lHe" indentLevel="1" text=" QColor umlObjectColor;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_30" accessType="0" parent_id="9bnkFD8d2lHe" writeOutText="false" indentLevel="1" classfield_id="9bnkFD8d2lHe" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_31" accessType="1" parent_id="9bnkFD8d2lHe" writeOutText="false" indentLevel="1" classfield_id="9bnkFD8d2lHe" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="Nvk9shrOO6D6" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_32" parent_id="Nvk9shrOO6D6" indentLevel="1" text=" QColor hiddenColor;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_33" accessType="0" parent_id="Nvk9shrOO6D6" writeOutText="false" indentLevel="1" classfield_id="Nvk9shrOO6D6" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_34" accessType="1" parent_id="Nvk9shrOO6D6" writeOutText="false" indentLevel="1" classfield_id="Nvk9shrOO6D6" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="p9hGOSA6YosN" id="cppheaderp9hGOSA6YosN" fileName="QFont" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QFont.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:06&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="aeLwrLPeS4sq" id="cppheaderaeLwrLPeS4sq" fileName="QColor" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QColor.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:06&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="m4CKd7jmiWUx" fileExt=".h" parent_class="haYjKnMhj4qZ" id="cppheaderhaYjKnMhj4qZ" fileName="Model_Type" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        Model_Type.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:06&amp;#010;The original location of this file is Uml&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="m4CKd7jmiWUx" fileExt=".h" parent_class="gXjSugHIlpJY" id="cppheadergXjSugHIlpJY" fileName="Object_Type" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        Object_Type.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:07&amp;#010;The original location of this file is Uml&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="m4CKd7jmiWUx" fileExt=".h" parent_class="Bh1MvAj7B0kh" id="cppheaderBh1MvAj7B0kh" fileName="Visibility" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef VISIBILITY_H&amp;#010;#define VISIBILITY_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;value.h&quot;&amp;#010;#include &quot;qstring.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="Bh1MvAj7B0kh" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" text="Class Visibility&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="Visibility ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock tag="tblock_0" parent_id="F6yR2YYiyHBa" indentLevel="1" text=" Value _v;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="F6yR2YYiyHBa" writeOutText="false" indentLevel="1" classfield_id="F6yR2YYiyHBa" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="F6yR2YYiyHBa" writeOutText="false" indentLevel="1" classfield_id="F6yR2YYiyHBa" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //VISIBILITY_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        Visibility.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:07&amp;#010;The original location of this file is Uml&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="F6yR2YYiyHBa" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="tblock_0" parent_id="F6yR2YYiyHBa" indentLevel="1" text=" Value _v;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="F6yR2YYiyHBa" writeOutText="false" indentLevel="1" classfield_id="F6yR2YYiyHBa" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="F6yR2YYiyHBa" writeOutText="false" indentLevel="1" classfield_id="F6yR2YYiyHBa" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Bh1MvAj7B0kh" fileExt=".h" parent_class="SF2oBjeknJKg" id="cppheaderSF2oBjeknJKg" fileName="Value" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        Value.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:07&amp;#010;The original location of this file is Visibility&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="dUt1TMu4e6AS" id="cppheaderdUt1TMu4e6AS" fileName="QString" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QString.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:07&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="j3HN7RojRZkd" id="cppheaderj3HN7RojRZkd" fileName="const_QString_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        const_QString_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:07&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="m4CKd7jmiWUx" fileExt=".h" parent_class="5YjeZvZuk59w" id="cppheader5YjeZvZuk59w" fileName="Widget_Type" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        Widget_Type.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:08&amp;#010;The original location of this file is Uml&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="m4CKd7jmiWUx" fileExt=".h" parent_class="NphzIupJjyAl" id="cppheaderNphzIupJjyAl" fileName="Diagram_Type" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        Diagram_Type.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:08&amp;#010;The original location of this file is Uml&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="m4CKd7jmiWUx" fileExt=".h" parent_class="1veKd5yRHVaC" id="cppheader1veKd5yRHVaC" fileName="Association_Type" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        Association_Type.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:08&amp;#010;The original location of this file is Uml&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="m4CKd7jmiWUx" fileExt=".h" parent_class="7tbaQ2KIJrwi" id="cppheader7tbaQ2KIJrwi" fileName="Signature_Type" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        Signature_Type.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:09&amp;#010;The original location of this file is Uml&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="m4CKd7jmiWUx" fileExt=".h" parent_class="wQAYLeZIRtZ4" id="cppheaderwQAYLeZIRtZ4" fileName="Text_Role" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        Text_Role.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:09&amp;#010;The original location of this file is Uml&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="m4CKd7jmiWUx" fileExt=".h" parent_class="CGpNNUcNKEnZ" id="cppheaderCGpNNUcNKEnZ" fileName="ListView_Type" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        ListView_Type.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:09&amp;#010;The original location of this file is Uml&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="m4CKd7jmiWUx" fileExt=".h" parent_class="tx7rZRQJKhgm" id="cppheadertx7rZRQJKhgm" fileName="Changeability_Type" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        Changeability_Type.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:10&amp;#010;The original location of this file is Uml&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="m4CKd7jmiWUx" fileExt=".h" parent_class="WUjvM0toPqra" id="cppheaderWUjvM0toPqra" fileName="Sequence_Message_Type" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        Sequence_Message_Type.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:10&amp;#010;The original location of this file is Uml&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="m4CKd7jmiWUx" fileExt=".h" parent_class="tp75PHBXSDTJ" id="cppheadertp75PHBXSDTJ" fileName="DBIndex_Type" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        DBIndex_Type.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:10&amp;#010;The original location of this file is Uml&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="m4CKd7jmiWUx" fileExt=".h" parent_class="NglIhqb15RoZ" id="cppheaderNglIhqb15RoZ" fileName="Role_Type" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        Role_Type.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:10&amp;#010;The original location of this file is Uml&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="m4CKd7jmiWUx" fileExt=".h" parent_class="CzJblqJdLTot" id="cppheaderCzJblqJdLTot" fileName="Parameter_Direction" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        Parameter_Direction.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:10&amp;#010;The original location of this file is Uml&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="m4CKd7jmiWUx" fileExt=".h" parent_class="UrHzDI7BfWWb" id="cppheaderUrHzDI7BfWWb" fileName="Programming_Language" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        Programming_Language.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:11&amp;#010;The original location of this file is Uml&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="m4CKd7jmiWUx" fileExt=".h" parent_class="Z6hEnPU23Y7J" id="cppheaderZ6hEnPU23Y7J" fileName="IDType" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        IDType.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:11&amp;#010;The original location of this file is Uml&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="CBRlk9bhdUfX" fileExt=".h" parent_class="J8cTC4sawAT0" id="cppheaderJ8cTC4sawAT0" fileName="Page" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        Page.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:11&amp;#010;The original location of this file is Settings&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="CBRlk9bhdUfX" fileExt=".h" parent_class="95etzUAzwC6b" id="cppheader95etzUAzwC6b" fileName="GeneralState" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef GENERALSTATE_H&amp;#010;#define GENERALSTATE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;qstring.h&quot;&amp;#010;#include &quot;diagram_type.h&quot;&amp;#010;#include &quot;programming_language.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="95etzUAzwC6b" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" text="Class GeneralState&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock tag="tblock_0" parent_id="Vcbv0lcl7EpJ" indentLevel="1" text=" bool undo;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_2" parent_id="vuNsFU1NYdEX" indentLevel="1" text=" bool tabdiagrams;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_5" parent_id="7MU2Ybd1BCx9" indentLevel="1" text=" bool newcodegen;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_8" parent_id="xXs5jfOcXlUn" indentLevel="1" text=" bool angularlines;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_11" parent_id="ET8k7KFEhkED" indentLevel="1" text=" bool footerPrinting;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_14" parent_id="JqFS2Ab0fR5O" indentLevel="1" text=" bool autosave;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_17" parent_id="7R0eBSPNvX72" indentLevel="1" text=" int time;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_20" parent_id="sMFX4RkLHznK" indentLevel="1" text=" int autosavetime;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_23" parent_id="7MImoLAvk8Zv" indentLevel="1" text=" QString autosavesuffix;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_26" parent_id="YzIUUPUKkhrm" indentLevel="1" text=" bool loadlast;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_29" parent_id="7c8OZtgfGwR2" indentLevel="1" text=" Uml::Diagram_Type diagram;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_32" parent_id="Hax2iUvHREju" indentLevel="1" text=" Uml::Programming_Language defaultLanguage;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_35" parent_id="bBELt460eEMD" indentLevel="1" text=" QString lastFile;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="GeneralState ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="Vcbv0lcl7EpJ" writeOutText="false" indentLevel="1" classfield_id="Vcbv0lcl7EpJ" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="Vcbv0lcl7EpJ" writeOutText="false" indentLevel="1" classfield_id="Vcbv0lcl7EpJ" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_3" accessType="0" parent_id="vuNsFU1NYdEX" writeOutText="false" indentLevel="1" classfield_id="vuNsFU1NYdEX" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_4" accessType="1" parent_id="vuNsFU1NYdEX" writeOutText="false" indentLevel="1" classfield_id="vuNsFU1NYdEX" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_6" accessType="0" parent_id="7MU2Ybd1BCx9" writeOutText="false" indentLevel="1" classfield_id="7MU2Ybd1BCx9" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_7" accessType="1" parent_id="7MU2Ybd1BCx9" writeOutText="false" indentLevel="1" classfield_id="7MU2Ybd1BCx9" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_9" accessType="0" parent_id="xXs5jfOcXlUn" writeOutText="false" indentLevel="1" classfield_id="xXs5jfOcXlUn" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_10" accessType="1" parent_id="xXs5jfOcXlUn" writeOutText="false" indentLevel="1" classfield_id="xXs5jfOcXlUn" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_12" accessType="0" parent_id="ET8k7KFEhkED" writeOutText="false" indentLevel="1" classfield_id="ET8k7KFEhkED" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_13" accessType="1" parent_id="ET8k7KFEhkED" writeOutText="false" indentLevel="1" classfield_id="ET8k7KFEhkED" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_15" accessType="0" parent_id="JqFS2Ab0fR5O" writeOutText="false" indentLevel="1" classfield_id="JqFS2Ab0fR5O" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_16" accessType="1" parent_id="JqFS2Ab0fR5O" writeOutText="false" indentLevel="1" classfield_id="JqFS2Ab0fR5O" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_18" accessType="0" parent_id="7R0eBSPNvX72" writeOutText="false" indentLevel="1" classfield_id="7R0eBSPNvX72" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_19" accessType="1" parent_id="7R0eBSPNvX72" writeOutText="false" indentLevel="1" classfield_id="7R0eBSPNvX72" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_21" accessType="0" parent_id="sMFX4RkLHznK" writeOutText="false" indentLevel="1" classfield_id="sMFX4RkLHznK" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_22" accessType="1" parent_id="sMFX4RkLHznK" writeOutText="false" indentLevel="1" classfield_id="sMFX4RkLHznK" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_24" accessType="0" parent_id="7MImoLAvk8Zv" writeOutText="false" indentLevel="1" classfield_id="7MImoLAvk8Zv" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_25" accessType="1" parent_id="7MImoLAvk8Zv" writeOutText="false" indentLevel="1" classfield_id="7MImoLAvk8Zv" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_27" accessType="0" parent_id="YzIUUPUKkhrm" writeOutText="false" indentLevel="1" classfield_id="YzIUUPUKkhrm" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_28" accessType="1" parent_id="YzIUUPUKkhrm" writeOutText="false" indentLevel="1" classfield_id="YzIUUPUKkhrm" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_30" accessType="0" parent_id="7c8OZtgfGwR2" writeOutText="false" indentLevel="1" classfield_id="7c8OZtgfGwR2" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_31" accessType="1" parent_id="7c8OZtgfGwR2" writeOutText="false" indentLevel="1" classfield_id="7c8OZtgfGwR2" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_33" accessType="0" parent_id="Hax2iUvHREju" writeOutText="false" indentLevel="1" classfield_id="Hax2iUvHREju" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_34" accessType="1" parent_id="Hax2iUvHREju" writeOutText="false" indentLevel="1" classfield_id="Hax2iUvHREju" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_36" accessType="0" parent_id="bBELt460eEMD" writeOutText="false" indentLevel="1" classfield_id="bBELt460eEMD" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_37" accessType="1" parent_id="bBELt460eEMD" writeOutText="false" indentLevel="1" classfield_id="bBELt460eEMD" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //GENERALSTATE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        GeneralState.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:11&amp;#010;The original location of this file is Settings&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="Vcbv0lcl7EpJ" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="tblock_0" parent_id="Vcbv0lcl7EpJ" indentLevel="1" text=" bool undo;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="Vcbv0lcl7EpJ" writeOutText="false" indentLevel="1" classfield_id="Vcbv0lcl7EpJ" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="Vcbv0lcl7EpJ" writeOutText="false" indentLevel="1" classfield_id="Vcbv0lcl7EpJ" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="vuNsFU1NYdEX" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_2" parent_id="vuNsFU1NYdEX" indentLevel="1" text=" bool tabdiagrams;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_3" accessType="0" parent_id="vuNsFU1NYdEX" writeOutText="false" indentLevel="1" classfield_id="vuNsFU1NYdEX" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_4" accessType="1" parent_id="vuNsFU1NYdEX" writeOutText="false" indentLevel="1" classfield_id="vuNsFU1NYdEX" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="7MU2Ybd1BCx9" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_5" parent_id="7MU2Ybd1BCx9" indentLevel="1" text=" bool newcodegen;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_6" accessType="0" parent_id="7MU2Ybd1BCx9" writeOutText="false" indentLevel="1" classfield_id="7MU2Ybd1BCx9" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_7" accessType="1" parent_id="7MU2Ybd1BCx9" writeOutText="false" indentLevel="1" classfield_id="7MU2Ybd1BCx9" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="xXs5jfOcXlUn" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_8" parent_id="xXs5jfOcXlUn" indentLevel="1" text=" bool angularlines;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_9" accessType="0" parent_id="xXs5jfOcXlUn" writeOutText="false" indentLevel="1" classfield_id="xXs5jfOcXlUn" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_10" accessType="1" parent_id="xXs5jfOcXlUn" writeOutText="false" indentLevel="1" classfield_id="xXs5jfOcXlUn" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="ET8k7KFEhkED" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_11" parent_id="ET8k7KFEhkED" indentLevel="1" text=" bool footerPrinting;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_12" accessType="0" parent_id="ET8k7KFEhkED" writeOutText="false" indentLevel="1" classfield_id="ET8k7KFEhkED" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_13" accessType="1" parent_id="ET8k7KFEhkED" writeOutText="false" indentLevel="1" classfield_id="ET8k7KFEhkED" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="JqFS2Ab0fR5O" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_14" parent_id="JqFS2Ab0fR5O" indentLevel="1" text=" bool autosave;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_15" accessType="0" parent_id="JqFS2Ab0fR5O" writeOutText="false" indentLevel="1" classfield_id="JqFS2Ab0fR5O" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_16" accessType="1" parent_id="JqFS2Ab0fR5O" writeOutText="false" indentLevel="1" classfield_id="JqFS2Ab0fR5O" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="7R0eBSPNvX72" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_17" parent_id="7R0eBSPNvX72" indentLevel="1" text=" int time;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_18" accessType="0" parent_id="7R0eBSPNvX72" writeOutText="false" indentLevel="1" classfield_id="7R0eBSPNvX72" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_19" accessType="1" parent_id="7R0eBSPNvX72" writeOutText="false" indentLevel="1" classfield_id="7R0eBSPNvX72" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="sMFX4RkLHznK" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_20" parent_id="sMFX4RkLHznK" indentLevel="1" text=" int autosavetime;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_21" accessType="0" parent_id="sMFX4RkLHznK" writeOutText="false" indentLevel="1" classfield_id="sMFX4RkLHznK" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_22" accessType="1" parent_id="sMFX4RkLHznK" writeOutText="false" indentLevel="1" classfield_id="sMFX4RkLHznK" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="7MImoLAvk8Zv" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_23" parent_id="7MImoLAvk8Zv" indentLevel="1" text=" QString autosavesuffix;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_24" accessType="0" parent_id="7MImoLAvk8Zv" writeOutText="false" indentLevel="1" classfield_id="7MImoLAvk8Zv" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_25" accessType="1" parent_id="7MImoLAvk8Zv" writeOutText="false" indentLevel="1" classfield_id="7MImoLAvk8Zv" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="YzIUUPUKkhrm" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_26" parent_id="YzIUUPUKkhrm" indentLevel="1" text=" bool loadlast;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_27" accessType="0" parent_id="YzIUUPUKkhrm" writeOutText="false" indentLevel="1" classfield_id="YzIUUPUKkhrm" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_28" accessType="1" parent_id="YzIUUPUKkhrm" writeOutText="false" indentLevel="1" classfield_id="YzIUUPUKkhrm" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="7c8OZtgfGwR2" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_29" parent_id="7c8OZtgfGwR2" indentLevel="1" text=" Uml::Diagram_Type diagram;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_30" accessType="0" parent_id="7c8OZtgfGwR2" writeOutText="false" indentLevel="1" classfield_id="7c8OZtgfGwR2" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_31" accessType="1" parent_id="7c8OZtgfGwR2" writeOutText="false" indentLevel="1" classfield_id="7c8OZtgfGwR2" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="Hax2iUvHREju" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_32" parent_id="Hax2iUvHREju" indentLevel="1" text=" Uml::Programming_Language defaultLanguage;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_33" accessType="0" parent_id="Hax2iUvHREju" writeOutText="false" indentLevel="1" classfield_id="Hax2iUvHREju" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_34" accessType="1" parent_id="Hax2iUvHREju" writeOutText="false" indentLevel="1" classfield_id="Hax2iUvHREju" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="bBELt460eEMD" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_35" parent_id="bBELt460eEMD" indentLevel="1" text=" QString lastFile;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_36" accessType="0" parent_id="bBELt460eEMD" writeOutText="false" indentLevel="1" classfield_id="bBELt460eEMD" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_37" accessType="1" parent_id="bBELt460eEMD" writeOutText="false" indentLevel="1" classfield_id="bBELt460eEMD" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="CBRlk9bhdUfX" fileExt=".h" parent_class="71sLxINFsIHa" id="cppheader71sLxINFsIHa" fileName="UIState" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef UISTATE_H&amp;#010;#define UISTATE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;qcolor.h&quot;&amp;#010;#include &quot;uint.h&quot;&amp;#010;#include &quot;qfont.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="71sLxINFsIHa" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" text="Class UIState&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock tag="tblock_0" parent_id="nCpCOW40iJJZ" indentLevel="1" text=" bool useFillColor;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_2" parent_id="NNXzbtChu32q" indentLevel="1" text=" QColor fillColor;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_5" parent_id="JQ5BiKjTUXet" indentLevel="1" text=" QColor lineColor;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_8" parent_id="hUmZVnPoDSzt" indentLevel="1" text=" uint lineWidth;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_11" parent_id="miLFDx6Hfv0f" indentLevel="1" text=" QFont font;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="UIState ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="nCpCOW40iJJZ" writeOutText="false" indentLevel="1" classfield_id="nCpCOW40iJJZ" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="nCpCOW40iJJZ" writeOutText="false" indentLevel="1" classfield_id="nCpCOW40iJJZ" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_3" accessType="0" parent_id="NNXzbtChu32q" writeOutText="false" indentLevel="1" classfield_id="NNXzbtChu32q" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_4" accessType="1" parent_id="NNXzbtChu32q" writeOutText="false" indentLevel="1" classfield_id="NNXzbtChu32q" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_6" accessType="0" parent_id="JQ5BiKjTUXet" writeOutText="false" indentLevel="1" classfield_id="JQ5BiKjTUXet" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_7" accessType="1" parent_id="JQ5BiKjTUXet" writeOutText="false" indentLevel="1" classfield_id="JQ5BiKjTUXet" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_9" accessType="0" parent_id="hUmZVnPoDSzt" writeOutText="false" indentLevel="1" classfield_id="hUmZVnPoDSzt" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_10" accessType="1" parent_id="hUmZVnPoDSzt" writeOutText="false" indentLevel="1" classfield_id="hUmZVnPoDSzt" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_12" accessType="0" parent_id="miLFDx6Hfv0f" writeOutText="false" indentLevel="1" classfield_id="miLFDx6Hfv0f" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_13" accessType="1" parent_id="miLFDx6Hfv0f" writeOutText="false" indentLevel="1" classfield_id="miLFDx6Hfv0f" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //UISTATE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UIState.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:12&amp;#010;The original location of this file is Settings&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="nCpCOW40iJJZ" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="tblock_0" parent_id="nCpCOW40iJJZ" indentLevel="1" text=" bool useFillColor;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="nCpCOW40iJJZ" writeOutText="false" indentLevel="1" classfield_id="nCpCOW40iJJZ" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="nCpCOW40iJJZ" writeOutText="false" indentLevel="1" classfield_id="nCpCOW40iJJZ" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="NNXzbtChu32q" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_2" parent_id="NNXzbtChu32q" indentLevel="1" text=" QColor fillColor;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_3" accessType="0" parent_id="NNXzbtChu32q" writeOutText="false" indentLevel="1" classfield_id="NNXzbtChu32q" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_4" accessType="1" parent_id="NNXzbtChu32q" writeOutText="false" indentLevel="1" classfield_id="NNXzbtChu32q" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="JQ5BiKjTUXet" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_5" parent_id="JQ5BiKjTUXet" indentLevel="1" text=" QColor lineColor;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_6" accessType="0" parent_id="JQ5BiKjTUXet" writeOutText="false" indentLevel="1" classfield_id="JQ5BiKjTUXet" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_7" accessType="1" parent_id="JQ5BiKjTUXet" writeOutText="false" indentLevel="1" classfield_id="JQ5BiKjTUXet" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="hUmZVnPoDSzt" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_8" parent_id="hUmZVnPoDSzt" indentLevel="1" text=" uint lineWidth;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_9" accessType="0" parent_id="hUmZVnPoDSzt" writeOutText="false" indentLevel="1" classfield_id="hUmZVnPoDSzt" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_10" accessType="1" parent_id="hUmZVnPoDSzt" writeOutText="false" indentLevel="1" classfield_id="hUmZVnPoDSzt" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="miLFDx6Hfv0f" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_11" parent_id="miLFDx6Hfv0f" indentLevel="1" text=" QFont font;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_12" accessType="0" parent_id="miLFDx6Hfv0f" writeOutText="false" indentLevel="1" classfield_id="miLFDx6Hfv0f" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_13" accessType="1" parent_id="miLFDx6Hfv0f" writeOutText="false" indentLevel="1" classfield_id="miLFDx6Hfv0f" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="3irjz8IKWpJ5" id="cppheader3irjz8IKWpJ5" fileName="uint" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        uint.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:12&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="CBRlk9bhdUfX" fileExt=".h" parent_class="1HzV6JbllLJG" id="cppheader1HzV6JbllLJG" fileName="ClassState" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef CLASSSTATE_H&amp;#010;#define CLASSSTATE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;visibility.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="1HzV6JbllLJG" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" text="Class ClassState&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock tag="tblock_0" parent_id="8g4J71BtjU6x" indentLevel="1" text=" bool showVisibility;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_2" parent_id="RCC67Cj9TjeY" indentLevel="1" text=" bool showAtts;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_5" parent_id="0DHlZYzfD3xK" indentLevel="1" text=" bool showOps;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_8" parent_id="48BlcIg3Us7c" indentLevel="1" text=" bool showStereoType;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_11" parent_id="3rjUaL0YZGH6" indentLevel="1" text=" bool showAttSig;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_14" parent_id="oGjzHgJLmV4O" indentLevel="1" text=" bool showOpSig;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_17" parent_id="nlPHbXrcOY7w" indentLevel="1" text=" bool showPackage;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_20" parent_id="u5SRLjV8xE7E" indentLevel="1" text=" bool showAttribAssocs;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_23" parent_id="vRXhub4hMTww" indentLevel="1" text=" Uml::Visibility defaultAttributeScope;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_26" parent_id="ymYKKdECjgb2" indentLevel="1" text=" Uml::Visibility defaultOperationScope;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="ClassState ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="8g4J71BtjU6x" writeOutText="false" indentLevel="1" classfield_id="8g4J71BtjU6x" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="8g4J71BtjU6x" writeOutText="false" indentLevel="1" classfield_id="8g4J71BtjU6x" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_3" accessType="0" parent_id="RCC67Cj9TjeY" writeOutText="false" indentLevel="1" classfield_id="RCC67Cj9TjeY" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_4" accessType="1" parent_id="RCC67Cj9TjeY" writeOutText="false" indentLevel="1" classfield_id="RCC67Cj9TjeY" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_6" accessType="0" parent_id="0DHlZYzfD3xK" writeOutText="false" indentLevel="1" classfield_id="0DHlZYzfD3xK" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_7" accessType="1" parent_id="0DHlZYzfD3xK" writeOutText="false" indentLevel="1" classfield_id="0DHlZYzfD3xK" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_9" accessType="0" parent_id="48BlcIg3Us7c" writeOutText="false" indentLevel="1" classfield_id="48BlcIg3Us7c" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_10" accessType="1" parent_id="48BlcIg3Us7c" writeOutText="false" indentLevel="1" classfield_id="48BlcIg3Us7c" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_12" accessType="0" parent_id="3rjUaL0YZGH6" writeOutText="false" indentLevel="1" classfield_id="3rjUaL0YZGH6" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_13" accessType="1" parent_id="3rjUaL0YZGH6" writeOutText="false" indentLevel="1" classfield_id="3rjUaL0YZGH6" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_15" accessType="0" parent_id="oGjzHgJLmV4O" writeOutText="false" indentLevel="1" classfield_id="oGjzHgJLmV4O" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_16" accessType="1" parent_id="oGjzHgJLmV4O" writeOutText="false" indentLevel="1" classfield_id="oGjzHgJLmV4O" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_18" accessType="0" parent_id="nlPHbXrcOY7w" writeOutText="false" indentLevel="1" classfield_id="nlPHbXrcOY7w" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_19" accessType="1" parent_id="nlPHbXrcOY7w" writeOutText="false" indentLevel="1" classfield_id="nlPHbXrcOY7w" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_21" accessType="0" parent_id="u5SRLjV8xE7E" writeOutText="false" indentLevel="1" classfield_id="u5SRLjV8xE7E" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_22" accessType="1" parent_id="u5SRLjV8xE7E" writeOutText="false" indentLevel="1" classfield_id="u5SRLjV8xE7E" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_24" accessType="0" parent_id="vRXhub4hMTww" writeOutText="false" indentLevel="1" classfield_id="vRXhub4hMTww" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_25" accessType="1" parent_id="vRXhub4hMTww" writeOutText="false" indentLevel="1" classfield_id="vRXhub4hMTww" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_27" accessType="0" parent_id="ymYKKdECjgb2" writeOutText="false" indentLevel="1" classfield_id="ymYKKdECjgb2" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_28" accessType="1" parent_id="ymYKKdECjgb2" writeOutText="false" indentLevel="1" classfield_id="ymYKKdECjgb2" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //CLASSSTATE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        ClassState.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:12&amp;#010;The original location of this file is Settings&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="8g4J71BtjU6x" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="tblock_0" parent_id="8g4J71BtjU6x" indentLevel="1" text=" bool showVisibility;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="8g4J71BtjU6x" writeOutText="false" indentLevel="1" classfield_id="8g4J71BtjU6x" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="8g4J71BtjU6x" writeOutText="false" indentLevel="1" classfield_id="8g4J71BtjU6x" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="RCC67Cj9TjeY" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_2" parent_id="RCC67Cj9TjeY" indentLevel="1" text=" bool showAtts;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_3" accessType="0" parent_id="RCC67Cj9TjeY" writeOutText="false" indentLevel="1" classfield_id="RCC67Cj9TjeY" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_4" accessType="1" parent_id="RCC67Cj9TjeY" writeOutText="false" indentLevel="1" classfield_id="RCC67Cj9TjeY" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="0DHlZYzfD3xK" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_5" parent_id="0DHlZYzfD3xK" indentLevel="1" text=" bool showOps;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_6" accessType="0" parent_id="0DHlZYzfD3xK" writeOutText="false" indentLevel="1" classfield_id="0DHlZYzfD3xK" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_7" accessType="1" parent_id="0DHlZYzfD3xK" writeOutText="false" indentLevel="1" classfield_id="0DHlZYzfD3xK" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="48BlcIg3Us7c" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_8" parent_id="48BlcIg3Us7c" indentLevel="1" text=" bool showStereoType;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_9" accessType="0" parent_id="48BlcIg3Us7c" writeOutText="false" indentLevel="1" classfield_id="48BlcIg3Us7c" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_10" accessType="1" parent_id="48BlcIg3Us7c" writeOutText="false" indentLevel="1" classfield_id="48BlcIg3Us7c" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="3rjUaL0YZGH6" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_11" parent_id="3rjUaL0YZGH6" indentLevel="1" text=" bool showAttSig;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_12" accessType="0" parent_id="3rjUaL0YZGH6" writeOutText="false" indentLevel="1" classfield_id="3rjUaL0YZGH6" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_13" accessType="1" parent_id="3rjUaL0YZGH6" writeOutText="false" indentLevel="1" classfield_id="3rjUaL0YZGH6" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="oGjzHgJLmV4O" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_14" parent_id="oGjzHgJLmV4O" indentLevel="1" text=" bool showOpSig;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_15" accessType="0" parent_id="oGjzHgJLmV4O" writeOutText="false" indentLevel="1" classfield_id="oGjzHgJLmV4O" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_16" accessType="1" parent_id="oGjzHgJLmV4O" writeOutText="false" indentLevel="1" classfield_id="oGjzHgJLmV4O" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="nlPHbXrcOY7w" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_17" parent_id="nlPHbXrcOY7w" indentLevel="1" text=" bool showPackage;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_18" accessType="0" parent_id="nlPHbXrcOY7w" writeOutText="false" indentLevel="1" classfield_id="nlPHbXrcOY7w" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_19" accessType="1" parent_id="nlPHbXrcOY7w" writeOutText="false" indentLevel="1" classfield_id="nlPHbXrcOY7w" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="u5SRLjV8xE7E" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_20" parent_id="u5SRLjV8xE7E" indentLevel="1" text=" bool showAttribAssocs;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_21" accessType="0" parent_id="u5SRLjV8xE7E" writeOutText="false" indentLevel="1" classfield_id="u5SRLjV8xE7E" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_22" accessType="1" parent_id="u5SRLjV8xE7E" writeOutText="false" indentLevel="1" classfield_id="u5SRLjV8xE7E" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="vRXhub4hMTww" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_23" parent_id="vRXhub4hMTww" indentLevel="1" text=" Uml::Visibility defaultAttributeScope;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_24" accessType="0" parent_id="vRXhub4hMTww" writeOutText="false" indentLevel="1" classfield_id="vRXhub4hMTww" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_25" accessType="1" parent_id="vRXhub4hMTww" writeOutText="false" indentLevel="1" classfield_id="vRXhub4hMTww" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="ymYKKdECjgb2" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_26" parent_id="ymYKKdECjgb2" indentLevel="1" text=" Uml::Visibility defaultOperationScope;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_27" accessType="0" parent_id="ymYKKdECjgb2" writeOutText="false" indentLevel="1" classfield_id="ymYKKdECjgb2" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_28" accessType="1" parent_id="ymYKKdECjgb2" writeOutText="false" indentLevel="1" classfield_id="ymYKKdECjgb2" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="CBRlk9bhdUfX" fileExt=".h" parent_class="N68ILGWEf1tX" id="cppheaderN68ILGWEf1tX" fileName="CodeGenerationState" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef CODEGENERATIONSTATE_H&amp;#010;#define CODEGENERATIONSTATE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;commentstyle.h&quot;&amp;#010;#include &quot;value.h&quot;&amp;#010;#include &quot;qdir.h&quot;&amp;#010;#include &quot;indentationtype.h&quot;&amp;#010;#include &quot;newlinetype.h&quot;&amp;#010;#include &quot;modifynamepolicy.h&quot;&amp;#010;#include &quot;overwritepolicy.h&quot;&amp;#010;#include &quot;cppcodegenerationstate.h&quot;&amp;#010;#include &quot;dcodegenerationstate.h&quot;&amp;#010;#include &quot;javacodegenerationstate.h&quot;&amp;#010;#include &quot;rubycodegenerationstate.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="N68ILGWEf1tX" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" text="Class CodeGenerationState&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock tag="tblock_0" parent_id="dvCxN8tLsQeB" indentLevel="1" text=" bool autoGenEmptyConstructors;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_2" parent_id="aB4SbibcaxL7" indentLevel="1" text=" CodeGenerationPolicy::CommentStyle commentStyle;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_5" parent_id="u62xxFK5wsnf" indentLevel="1" text=" Uml::Visibility::Value defaultAssocFieldScope;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_8" parent_id="I3zeUHO4SQV1" indentLevel="1" text=" Uml::Visibility::Value defaultAttributeAccessorScope;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_11" parent_id="86bh3wox0qty" indentLevel="1" text=" bool forceDoc;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_14" parent_id="3B1y1mbKpbyK" indentLevel="1" text=" bool forceSections;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_17" parent_id="lLtl9khDtg9u" indentLevel="1" text=" QDir headingsDirectory;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_20" parent_id="TkCGL8aBTvRC" indentLevel="1" text=" bool includeHeadings;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_23" parent_id="ki1eXaaItR32" indentLevel="1" text=" int indentationAmount;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_26" parent_id="HfaiY1uJiuvF" indentLevel="1" text=" CodeGenerationPolicy::IndentationType indentationType;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_29" parent_id="v2T09aPQEz7m" indentLevel="1" text=" CodeGenerationPolicy::NewLineType lineEndingType;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_32" parent_id="x2MCbSpUSHTb" indentLevel="1" text=" CodeGenerationPolicy::ModifyNamePolicy modnamePolicy;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_35" parent_id="ps13p8on8rU1" indentLevel="1" text=" QDir outputDirectory;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_38" parent_id="Kj9m0cNpSNrH" indentLevel="1" text=" CodeGenerationPolicy::OverwritePolicy overwritePolicy;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_41" parent_id="iCVxQqfGerTG" indentLevel="1" text=" CPPCodeGenerationState cppCodeGenerationState;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_44" parent_id="MhbPtKRbCxhD" indentLevel="1" text=" DCodeGenerationState dCodeGenerationState;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_47" parent_id="OxiD2EAkOfhm" indentLevel="1" text=" JavaCodeGenerationState javaCodeGenerationState;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_50" parent_id="TK27BUOWBxv4" indentLevel="1" text=" RubyCodeGenerationState rubyCodeGenerationState;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="CodeGenerationState ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="dvCxN8tLsQeB" writeOutText="false" indentLevel="1" classfield_id="dvCxN8tLsQeB" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="dvCxN8tLsQeB" writeOutText="false" indentLevel="1" classfield_id="dvCxN8tLsQeB" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_3" accessType="0" parent_id="aB4SbibcaxL7" writeOutText="false" indentLevel="1" classfield_id="aB4SbibcaxL7" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_4" accessType="1" parent_id="aB4SbibcaxL7" writeOutText="false" indentLevel="1" classfield_id="aB4SbibcaxL7" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_6" accessType="0" parent_id="u62xxFK5wsnf" writeOutText="false" indentLevel="1" classfield_id="u62xxFK5wsnf" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_7" accessType="1" parent_id="u62xxFK5wsnf" writeOutText="false" indentLevel="1" classfield_id="u62xxFK5wsnf" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_9" accessType="0" parent_id="I3zeUHO4SQV1" writeOutText="false" indentLevel="1" classfield_id="I3zeUHO4SQV1" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_10" accessType="1" parent_id="I3zeUHO4SQV1" writeOutText="false" indentLevel="1" classfield_id="I3zeUHO4SQV1" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_12" accessType="0" parent_id="86bh3wox0qty" writeOutText="false" indentLevel="1" classfield_id="86bh3wox0qty" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_13" accessType="1" parent_id="86bh3wox0qty" writeOutText="false" indentLevel="1" classfield_id="86bh3wox0qty" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_15" accessType="0" parent_id="3B1y1mbKpbyK" writeOutText="false" indentLevel="1" classfield_id="3B1y1mbKpbyK" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_16" accessType="1" parent_id="3B1y1mbKpbyK" writeOutText="false" indentLevel="1" classfield_id="3B1y1mbKpbyK" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_18" accessType="0" parent_id="lLtl9khDtg9u" writeOutText="false" indentLevel="1" classfield_id="lLtl9khDtg9u" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_19" accessType="1" parent_id="lLtl9khDtg9u" writeOutText="false" indentLevel="1" classfield_id="lLtl9khDtg9u" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_21" accessType="0" parent_id="TkCGL8aBTvRC" writeOutText="false" indentLevel="1" classfield_id="TkCGL8aBTvRC" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_22" accessType="1" parent_id="TkCGL8aBTvRC" writeOutText="false" indentLevel="1" classfield_id="TkCGL8aBTvRC" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_24" accessType="0" parent_id="ki1eXaaItR32" writeOutText="false" indentLevel="1" classfield_id="ki1eXaaItR32" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_25" accessType="1" parent_id="ki1eXaaItR32" writeOutText="false" indentLevel="1" classfield_id="ki1eXaaItR32" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_27" accessType="0" parent_id="HfaiY1uJiuvF" writeOutText="false" indentLevel="1" classfield_id="HfaiY1uJiuvF" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_28" accessType="1" parent_id="HfaiY1uJiuvF" writeOutText="false" indentLevel="1" classfield_id="HfaiY1uJiuvF" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_30" accessType="0" parent_id="v2T09aPQEz7m" writeOutText="false" indentLevel="1" classfield_id="v2T09aPQEz7m" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_31" accessType="1" parent_id="v2T09aPQEz7m" writeOutText="false" indentLevel="1" classfield_id="v2T09aPQEz7m" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_33" accessType="0" parent_id="x2MCbSpUSHTb" writeOutText="false" indentLevel="1" classfield_id="x2MCbSpUSHTb" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_34" accessType="1" parent_id="x2MCbSpUSHTb" writeOutText="false" indentLevel="1" classfield_id="x2MCbSpUSHTb" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_36" accessType="0" parent_id="ps13p8on8rU1" writeOutText="false" indentLevel="1" classfield_id="ps13p8on8rU1" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_37" accessType="1" parent_id="ps13p8on8rU1" writeOutText="false" indentLevel="1" classfield_id="ps13p8on8rU1" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_39" accessType="0" parent_id="Kj9m0cNpSNrH" writeOutText="false" indentLevel="1" classfield_id="Kj9m0cNpSNrH" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_40" accessType="1" parent_id="Kj9m0cNpSNrH" writeOutText="false" indentLevel="1" classfield_id="Kj9m0cNpSNrH" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_42" accessType="0" parent_id="iCVxQqfGerTG" writeOutText="false" indentLevel="1" classfield_id="iCVxQqfGerTG" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_43" accessType="1" parent_id="iCVxQqfGerTG" writeOutText="false" indentLevel="1" classfield_id="iCVxQqfGerTG" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_45" accessType="0" parent_id="MhbPtKRbCxhD" writeOutText="false" indentLevel="1" classfield_id="MhbPtKRbCxhD" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_46" accessType="1" parent_id="MhbPtKRbCxhD" writeOutText="false" indentLevel="1" classfield_id="MhbPtKRbCxhD" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_48" accessType="0" parent_id="OxiD2EAkOfhm" writeOutText="false" indentLevel="1" classfield_id="OxiD2EAkOfhm" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_49" accessType="1" parent_id="OxiD2EAkOfhm" writeOutText="false" indentLevel="1" classfield_id="OxiD2EAkOfhm" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_51" accessType="0" parent_id="TK27BUOWBxv4" writeOutText="false" indentLevel="1" classfield_id="TK27BUOWBxv4" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_52" accessType="1" parent_id="TK27BUOWBxv4" writeOutText="false" indentLevel="1" classfield_id="TK27BUOWBxv4" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //CODEGENERATIONSTATE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        CodeGenerationState.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:12&amp;#010;The original location of this file is Settings&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="dvCxN8tLsQeB" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="tblock_0" parent_id="dvCxN8tLsQeB" indentLevel="1" text=" bool autoGenEmptyConstructors;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="dvCxN8tLsQeB" writeOutText="false" indentLevel="1" classfield_id="dvCxN8tLsQeB" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="dvCxN8tLsQeB" writeOutText="false" indentLevel="1" classfield_id="dvCxN8tLsQeB" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="aB4SbibcaxL7" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_2" parent_id="aB4SbibcaxL7" indentLevel="1" text=" CodeGenerationPolicy::CommentStyle commentStyle;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_3" accessType="0" parent_id="aB4SbibcaxL7" writeOutText="false" indentLevel="1" classfield_id="aB4SbibcaxL7" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_4" accessType="1" parent_id="aB4SbibcaxL7" writeOutText="false" indentLevel="1" classfield_id="aB4SbibcaxL7" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="u62xxFK5wsnf" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_5" parent_id="u62xxFK5wsnf" indentLevel="1" text=" Uml::Visibility::Value defaultAssocFieldScope;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_6" accessType="0" parent_id="u62xxFK5wsnf" writeOutText="false" indentLevel="1" classfield_id="u62xxFK5wsnf" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_7" accessType="1" parent_id="u62xxFK5wsnf" writeOutText="false" indentLevel="1" classfield_id="u62xxFK5wsnf" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="I3zeUHO4SQV1" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_8" parent_id="I3zeUHO4SQV1" indentLevel="1" text=" Uml::Visibility::Value defaultAttributeAccessorScope;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_9" accessType="0" parent_id="I3zeUHO4SQV1" writeOutText="false" indentLevel="1" classfield_id="I3zeUHO4SQV1" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_10" accessType="1" parent_id="I3zeUHO4SQV1" writeOutText="false" indentLevel="1" classfield_id="I3zeUHO4SQV1" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="86bh3wox0qty" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_11" parent_id="86bh3wox0qty" indentLevel="1" text=" bool forceDoc;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_12" accessType="0" parent_id="86bh3wox0qty" writeOutText="false" indentLevel="1" classfield_id="86bh3wox0qty" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_13" accessType="1" parent_id="86bh3wox0qty" writeOutText="false" indentLevel="1" classfield_id="86bh3wox0qty" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="3B1y1mbKpbyK" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_14" parent_id="3B1y1mbKpbyK" indentLevel="1" text=" bool forceSections;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_15" accessType="0" parent_id="3B1y1mbKpbyK" writeOutText="false" indentLevel="1" classfield_id="3B1y1mbKpbyK" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_16" accessType="1" parent_id="3B1y1mbKpbyK" writeOutText="false" indentLevel="1" classfield_id="3B1y1mbKpbyK" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="lLtl9khDtg9u" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_17" parent_id="lLtl9khDtg9u" indentLevel="1" text=" QDir headingsDirectory;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_18" accessType="0" parent_id="lLtl9khDtg9u" writeOutText="false" indentLevel="1" classfield_id="lLtl9khDtg9u" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_19" accessType="1" parent_id="lLtl9khDtg9u" writeOutText="false" indentLevel="1" classfield_id="lLtl9khDtg9u" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="TkCGL8aBTvRC" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_20" parent_id="TkCGL8aBTvRC" indentLevel="1" text=" bool includeHeadings;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_21" accessType="0" parent_id="TkCGL8aBTvRC" writeOutText="false" indentLevel="1" classfield_id="TkCGL8aBTvRC" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_22" accessType="1" parent_id="TkCGL8aBTvRC" writeOutText="false" indentLevel="1" classfield_id="TkCGL8aBTvRC" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="ki1eXaaItR32" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_23" parent_id="ki1eXaaItR32" indentLevel="1" text=" int indentationAmount;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_24" accessType="0" parent_id="ki1eXaaItR32" writeOutText="false" indentLevel="1" classfield_id="ki1eXaaItR32" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_25" accessType="1" parent_id="ki1eXaaItR32" writeOutText="false" indentLevel="1" classfield_id="ki1eXaaItR32" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="HfaiY1uJiuvF" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_26" parent_id="HfaiY1uJiuvF" indentLevel="1" text=" CodeGenerationPolicy::IndentationType indentationType;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_27" accessType="0" parent_id="HfaiY1uJiuvF" writeOutText="false" indentLevel="1" classfield_id="HfaiY1uJiuvF" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_28" accessType="1" parent_id="HfaiY1uJiuvF" writeOutText="false" indentLevel="1" classfield_id="HfaiY1uJiuvF" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="v2T09aPQEz7m" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_29" parent_id="v2T09aPQEz7m" indentLevel="1" text=" CodeGenerationPolicy::NewLineType lineEndingType;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_30" accessType="0" parent_id="v2T09aPQEz7m" writeOutText="false" indentLevel="1" classfield_id="v2T09aPQEz7m" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_31" accessType="1" parent_id="v2T09aPQEz7m" writeOutText="false" indentLevel="1" classfield_id="v2T09aPQEz7m" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="x2MCbSpUSHTb" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_32" parent_id="x2MCbSpUSHTb" indentLevel="1" text=" CodeGenerationPolicy::ModifyNamePolicy modnamePolicy;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_33" accessType="0" parent_id="x2MCbSpUSHTb" writeOutText="false" indentLevel="1" classfield_id="x2MCbSpUSHTb" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_34" accessType="1" parent_id="x2MCbSpUSHTb" writeOutText="false" indentLevel="1" classfield_id="x2MCbSpUSHTb" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="ps13p8on8rU1" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_35" parent_id="ps13p8on8rU1" indentLevel="1" text=" QDir outputDirectory;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_36" accessType="0" parent_id="ps13p8on8rU1" writeOutText="false" indentLevel="1" classfield_id="ps13p8on8rU1" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_37" accessType="1" parent_id="ps13p8on8rU1" writeOutText="false" indentLevel="1" classfield_id="ps13p8on8rU1" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="Kj9m0cNpSNrH" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_38" parent_id="Kj9m0cNpSNrH" indentLevel="1" text=" CodeGenerationPolicy::OverwritePolicy overwritePolicy;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_39" accessType="0" parent_id="Kj9m0cNpSNrH" writeOutText="false" indentLevel="1" classfield_id="Kj9m0cNpSNrH" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_40" accessType="1" parent_id="Kj9m0cNpSNrH" writeOutText="false" indentLevel="1" classfield_id="Kj9m0cNpSNrH" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="iCVxQqfGerTG" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_41" parent_id="iCVxQqfGerTG" indentLevel="1" text=" CPPCodeGenerationState cppCodeGenerationState;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_42" accessType="0" parent_id="iCVxQqfGerTG" writeOutText="false" indentLevel="1" classfield_id="iCVxQqfGerTG" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_43" accessType="1" parent_id="iCVxQqfGerTG" writeOutText="false" indentLevel="1" classfield_id="iCVxQqfGerTG" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="MhbPtKRbCxhD" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_44" parent_id="MhbPtKRbCxhD" indentLevel="1" text=" DCodeGenerationState dCodeGenerationState;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_45" accessType="0" parent_id="MhbPtKRbCxhD" writeOutText="false" indentLevel="1" classfield_id="MhbPtKRbCxhD" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_46" accessType="1" parent_id="MhbPtKRbCxhD" writeOutText="false" indentLevel="1" classfield_id="MhbPtKRbCxhD" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="OxiD2EAkOfhm" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_47" parent_id="OxiD2EAkOfhm" indentLevel="1" text=" JavaCodeGenerationState javaCodeGenerationState;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_48" accessType="0" parent_id="OxiD2EAkOfhm" writeOutText="false" indentLevel="1" classfield_id="OxiD2EAkOfhm" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_49" accessType="1" parent_id="OxiD2EAkOfhm" writeOutText="false" indentLevel="1" classfield_id="OxiD2EAkOfhm" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="TK27BUOWBxv4" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_50" parent_id="TK27BUOWBxv4" indentLevel="1" text=" RubyCodeGenerationState rubyCodeGenerationState;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_51" accessType="0" parent_id="TK27BUOWBxv4" writeOutText="false" indentLevel="1" classfield_id="TK27BUOWBxv4" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_52" accessType="1" parent_id="TK27BUOWBxv4" writeOutText="false" indentLevel="1" classfield_id="TK27BUOWBxv4" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="3sNkZxlu3tDM" id="cppheader3sNkZxlu3tDM" fileName="CodeGenerationPolicy" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        CodeGenerationPolicy.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:16&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="3sNkZxlu3tDM" fileExt=".h" parent_class="7hakjSHMNTJk" id="cppheader7hakjSHMNTJk" fileName="CommentStyle" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        CommentStyle.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:17&amp;#010;The original location of this file is CodeGenerationPolicy&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="sKMIlpHruqYx" id="cppheadersKMIlpHruqYx" fileName="QDir" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QDir.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:17&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="3sNkZxlu3tDM" fileExt=".h" parent_class="BjD4PMwq797Q" id="cppheaderBjD4PMwq797Q" fileName="IndentationType" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        IndentationType.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:17&amp;#010;The original location of this file is CodeGenerationPolicy&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="3sNkZxlu3tDM" fileExt=".h" parent_class="UTXLuYN3FZ5d" id="cppheaderUTXLuYN3FZ5d" fileName="NewLineType" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        NewLineType.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:17&amp;#010;The original location of this file is CodeGenerationPolicy&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="3sNkZxlu3tDM" fileExt=".h" parent_class="0z3gtxvNQQgL" id="cppheader0z3gtxvNQQgL" fileName="ModifyNamePolicy" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        ModifyNamePolicy.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:17&amp;#010;The original location of this file is CodeGenerationPolicy&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="3sNkZxlu3tDM" fileExt=".h" parent_class="oNNFo1Yj3uve" id="cppheaderoNNFo1Yj3uve" fileName="OverwritePolicy" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        OverwritePolicy.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:17&amp;#010;The original location of this file is CodeGenerationPolicy&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="N68ILGWEf1tX" fileExt=".h" parent_class="Tf4ZWYZJuuWi" id="cppheaderTf4ZWYZJuuWi" fileName="CPPCodeGenerationState" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef CPPCODEGENERATIONSTATE_H&amp;#010;#define CPPCODEGENERATIONSTATE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;qstring.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="Tf4ZWYZJuuWi" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" text="Class CPPCodeGenerationState&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock tag="tblock_0" parent_id="v4PzwIbF1k1z" indentLevel="1" text=" bool autoGenAccessors;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_2" parent_id="KNpkkg1BJ4lp" indentLevel="1" text=" bool inlineAccessors;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_5" parent_id="aK6UCcA7gZ6b" indentLevel="1" text=" bool inlineOps;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_8" parent_id="siqrQprjCeRu" indentLevel="1" text=" bool packageIsNamespace;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_11" parent_id="IR6bVpO37VYJ" indentLevel="1" text=" bool publicAccessors;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_14" parent_id="7gQmGVL6BBvb" indentLevel="1" text=" QString stringClassName;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_17" parent_id="ymI9Ok3eB7Fe" indentLevel="1" text=" QString stringClassNameInclude;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_20" parent_id="wch37FMCwlwA" indentLevel="1" text=" bool stringIncludeIsGlobal;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_23" parent_id="GHERQ90PuJYG" indentLevel="1" text=" QString vectorClassName;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_26" parent_id="3ZvCh8qdkXfr" indentLevel="1" text=" QString vectorClassNameInclude;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_29" parent_id="l12fmyn0G1Rg" indentLevel="1" text=" bool vectorIncludeIsGlobal;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_32" parent_id="8S30jbHkBCws" indentLevel="1" text=" bool virtualDestructors;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="CPPCodeGenerationState ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="v4PzwIbF1k1z" writeOutText="false" indentLevel="1" classfield_id="v4PzwIbF1k1z" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="v4PzwIbF1k1z" writeOutText="false" indentLevel="1" classfield_id="v4PzwIbF1k1z" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_3" accessType="0" parent_id="KNpkkg1BJ4lp" writeOutText="false" indentLevel="1" classfield_id="KNpkkg1BJ4lp" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_4" accessType="1" parent_id="KNpkkg1BJ4lp" writeOutText="false" indentLevel="1" classfield_id="KNpkkg1BJ4lp" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_6" accessType="0" parent_id="aK6UCcA7gZ6b" writeOutText="false" indentLevel="1" classfield_id="aK6UCcA7gZ6b" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_7" accessType="1" parent_id="aK6UCcA7gZ6b" writeOutText="false" indentLevel="1" classfield_id="aK6UCcA7gZ6b" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_9" accessType="0" parent_id="siqrQprjCeRu" writeOutText="false" indentLevel="1" classfield_id="siqrQprjCeRu" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_10" accessType="1" parent_id="siqrQprjCeRu" writeOutText="false" indentLevel="1" classfield_id="siqrQprjCeRu" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_12" accessType="0" parent_id="IR6bVpO37VYJ" writeOutText="false" indentLevel="1" classfield_id="IR6bVpO37VYJ" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_13" accessType="1" parent_id="IR6bVpO37VYJ" writeOutText="false" indentLevel="1" classfield_id="IR6bVpO37VYJ" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_15" accessType="0" parent_id="7gQmGVL6BBvb" writeOutText="false" indentLevel="1" classfield_id="7gQmGVL6BBvb" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_16" accessType="1" parent_id="7gQmGVL6BBvb" writeOutText="false" indentLevel="1" classfield_id="7gQmGVL6BBvb" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_18" accessType="0" parent_id="ymI9Ok3eB7Fe" writeOutText="false" indentLevel="1" classfield_id="ymI9Ok3eB7Fe" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_19" accessType="1" parent_id="ymI9Ok3eB7Fe" writeOutText="false" indentLevel="1" classfield_id="ymI9Ok3eB7Fe" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_21" accessType="0" parent_id="wch37FMCwlwA" writeOutText="false" indentLevel="1" classfield_id="wch37FMCwlwA" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_22" accessType="1" parent_id="wch37FMCwlwA" writeOutText="false" indentLevel="1" classfield_id="wch37FMCwlwA" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_24" accessType="0" parent_id="GHERQ90PuJYG" writeOutText="false" indentLevel="1" classfield_id="GHERQ90PuJYG" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_25" accessType="1" parent_id="GHERQ90PuJYG" writeOutText="false" indentLevel="1" classfield_id="GHERQ90PuJYG" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_27" accessType="0" parent_id="3ZvCh8qdkXfr" writeOutText="false" indentLevel="1" classfield_id="3ZvCh8qdkXfr" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_28" accessType="1" parent_id="3ZvCh8qdkXfr" writeOutText="false" indentLevel="1" classfield_id="3ZvCh8qdkXfr" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_30" accessType="0" parent_id="l12fmyn0G1Rg" writeOutText="false" indentLevel="1" classfield_id="l12fmyn0G1Rg" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_31" accessType="1" parent_id="l12fmyn0G1Rg" writeOutText="false" indentLevel="1" classfield_id="l12fmyn0G1Rg" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_33" accessType="0" parent_id="8S30jbHkBCws" writeOutText="false" indentLevel="1" classfield_id="8S30jbHkBCws" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_34" accessType="1" parent_id="8S30jbHkBCws" writeOutText="false" indentLevel="1" classfield_id="8S30jbHkBCws" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //CPPCODEGENERATIONSTATE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        CPPCodeGenerationState.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:17&amp;#010;The original location of this file is CodeGenerationState&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="v4PzwIbF1k1z" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="tblock_0" parent_id="v4PzwIbF1k1z" indentLevel="1" text=" bool autoGenAccessors;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="v4PzwIbF1k1z" writeOutText="false" indentLevel="1" classfield_id="v4PzwIbF1k1z" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="v4PzwIbF1k1z" writeOutText="false" indentLevel="1" classfield_id="v4PzwIbF1k1z" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="KNpkkg1BJ4lp" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_2" parent_id="KNpkkg1BJ4lp" indentLevel="1" text=" bool inlineAccessors;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_3" accessType="0" parent_id="KNpkkg1BJ4lp" writeOutText="false" indentLevel="1" classfield_id="KNpkkg1BJ4lp" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_4" accessType="1" parent_id="KNpkkg1BJ4lp" writeOutText="false" indentLevel="1" classfield_id="KNpkkg1BJ4lp" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="aK6UCcA7gZ6b" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_5" parent_id="aK6UCcA7gZ6b" indentLevel="1" text=" bool inlineOps;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_6" accessType="0" parent_id="aK6UCcA7gZ6b" writeOutText="false" indentLevel="1" classfield_id="aK6UCcA7gZ6b" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_7" accessType="1" parent_id="aK6UCcA7gZ6b" writeOutText="false" indentLevel="1" classfield_id="aK6UCcA7gZ6b" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="siqrQprjCeRu" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_8" parent_id="siqrQprjCeRu" indentLevel="1" text=" bool packageIsNamespace;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_9" accessType="0" parent_id="siqrQprjCeRu" writeOutText="false" indentLevel="1" classfield_id="siqrQprjCeRu" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_10" accessType="1" parent_id="siqrQprjCeRu" writeOutText="false" indentLevel="1" classfield_id="siqrQprjCeRu" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="IR6bVpO37VYJ" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_11" parent_id="IR6bVpO37VYJ" indentLevel="1" text=" bool publicAccessors;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_12" accessType="0" parent_id="IR6bVpO37VYJ" writeOutText="false" indentLevel="1" classfield_id="IR6bVpO37VYJ" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_13" accessType="1" parent_id="IR6bVpO37VYJ" writeOutText="false" indentLevel="1" classfield_id="IR6bVpO37VYJ" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="7gQmGVL6BBvb" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_14" parent_id="7gQmGVL6BBvb" indentLevel="1" text=" QString stringClassName;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_15" accessType="0" parent_id="7gQmGVL6BBvb" writeOutText="false" indentLevel="1" classfield_id="7gQmGVL6BBvb" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_16" accessType="1" parent_id="7gQmGVL6BBvb" writeOutText="false" indentLevel="1" classfield_id="7gQmGVL6BBvb" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="ymI9Ok3eB7Fe" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_17" parent_id="ymI9Ok3eB7Fe" indentLevel="1" text=" QString stringClassNameInclude;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_18" accessType="0" parent_id="ymI9Ok3eB7Fe" writeOutText="false" indentLevel="1" classfield_id="ymI9Ok3eB7Fe" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_19" accessType="1" parent_id="ymI9Ok3eB7Fe" writeOutText="false" indentLevel="1" classfield_id="ymI9Ok3eB7Fe" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="wch37FMCwlwA" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_20" parent_id="wch37FMCwlwA" indentLevel="1" text=" bool stringIncludeIsGlobal;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_21" accessType="0" parent_id="wch37FMCwlwA" writeOutText="false" indentLevel="1" classfield_id="wch37FMCwlwA" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_22" accessType="1" parent_id="wch37FMCwlwA" writeOutText="false" indentLevel="1" classfield_id="wch37FMCwlwA" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="GHERQ90PuJYG" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_23" parent_id="GHERQ90PuJYG" indentLevel="1" text=" QString vectorClassName;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_24" accessType="0" parent_id="GHERQ90PuJYG" writeOutText="false" indentLevel="1" classfield_id="GHERQ90PuJYG" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_25" accessType="1" parent_id="GHERQ90PuJYG" writeOutText="false" indentLevel="1" classfield_id="GHERQ90PuJYG" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="3ZvCh8qdkXfr" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_26" parent_id="3ZvCh8qdkXfr" indentLevel="1" text=" QString vectorClassNameInclude;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_27" accessType="0" parent_id="3ZvCh8qdkXfr" writeOutText="false" indentLevel="1" classfield_id="3ZvCh8qdkXfr" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_28" accessType="1" parent_id="3ZvCh8qdkXfr" writeOutText="false" indentLevel="1" classfield_id="3ZvCh8qdkXfr" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="l12fmyn0G1Rg" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_29" parent_id="l12fmyn0G1Rg" indentLevel="1" text=" bool vectorIncludeIsGlobal;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_30" accessType="0" parent_id="l12fmyn0G1Rg" writeOutText="false" indentLevel="1" classfield_id="l12fmyn0G1Rg" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_31" accessType="1" parent_id="l12fmyn0G1Rg" writeOutText="false" indentLevel="1" classfield_id="l12fmyn0G1Rg" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="8S30jbHkBCws" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_32" parent_id="8S30jbHkBCws" indentLevel="1" text=" bool virtualDestructors;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_33" accessType="0" parent_id="8S30jbHkBCws" writeOutText="false" indentLevel="1" classfield_id="8S30jbHkBCws" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_34" accessType="1" parent_id="8S30jbHkBCws" writeOutText="false" indentLevel="1" classfield_id="8S30jbHkBCws" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="N68ILGWEf1tX" fileExt=".h" parent_class="ImT3H8s28uhs" id="cppheaderImT3H8s28uhs" fileName="DCodeGenerationState" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef DCODEGENERATIONSTATE_H&amp;#010;#define DCODEGENERATIONSTATE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="ImT3H8s28uhs" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" text="Class DCodeGenerationState&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock tag="tblock_0" parent_id="rUt7TIlakpaT" indentLevel="1" text=" bool autoGenerateAttributeAccessors;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_2" parent_id="OrDZ17PKrrL9" indentLevel="1" text=" bool autoGenerateAssocAccessors;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_5" parent_id="xD936pwxHn4l" indentLevel="1" text=" bool buildANTDocument;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="DCodeGenerationState ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="rUt7TIlakpaT" writeOutText="false" indentLevel="1" classfield_id="rUt7TIlakpaT" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="rUt7TIlakpaT" writeOutText="false" indentLevel="1" classfield_id="rUt7TIlakpaT" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_3" accessType="0" parent_id="OrDZ17PKrrL9" writeOutText="false" indentLevel="1" classfield_id="OrDZ17PKrrL9" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_4" accessType="1" parent_id="OrDZ17PKrrL9" writeOutText="false" indentLevel="1" classfield_id="OrDZ17PKrrL9" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_6" accessType="0" parent_id="xD936pwxHn4l" writeOutText="false" indentLevel="1" classfield_id="xD936pwxHn4l" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_7" accessType="1" parent_id="xD936pwxHn4l" writeOutText="false" indentLevel="1" classfield_id="xD936pwxHn4l" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //DCODEGENERATIONSTATE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        DCodeGenerationState.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:18&amp;#010;The original location of this file is CodeGenerationState&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="rUt7TIlakpaT" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="tblock_0" parent_id="rUt7TIlakpaT" indentLevel="1" text=" bool autoGenerateAttributeAccessors;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="rUt7TIlakpaT" writeOutText="false" indentLevel="1" classfield_id="rUt7TIlakpaT" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="rUt7TIlakpaT" writeOutText="false" indentLevel="1" classfield_id="rUt7TIlakpaT" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="OrDZ17PKrrL9" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_2" parent_id="OrDZ17PKrrL9" indentLevel="1" text=" bool autoGenerateAssocAccessors;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_3" accessType="0" parent_id="OrDZ17PKrrL9" writeOutText="false" indentLevel="1" classfield_id="OrDZ17PKrrL9" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_4" accessType="1" parent_id="OrDZ17PKrrL9" writeOutText="false" indentLevel="1" classfield_id="OrDZ17PKrrL9" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="xD936pwxHn4l" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_5" parent_id="xD936pwxHn4l" indentLevel="1" text=" bool buildANTDocument;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_6" accessType="0" parent_id="xD936pwxHn4l" writeOutText="false" indentLevel="1" classfield_id="xD936pwxHn4l" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_7" accessType="1" parent_id="xD936pwxHn4l" writeOutText="false" indentLevel="1" classfield_id="xD936pwxHn4l" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="N68ILGWEf1tX" fileExt=".h" parent_class="5nLoctFzjRYi" id="cppheader5nLoctFzjRYi" fileName="JavaCodeGenerationState" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef JAVACODEGENERATIONSTATE_H&amp;#010;#define JAVACODEGENERATIONSTATE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="5nLoctFzjRYi" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" text="Class JavaCodeGenerationState&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock tag="tblock_0" parent_id="Yw2QlLXiZgmf" indentLevel="1" text=" bool autoGenerateAttributeAccessors;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_2" parent_id="VganTcWWPpK0" indentLevel="1" text=" bool autoGenerateAssocAccessors;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_5" parent_id="iYzRzVAVPAvA" indentLevel="1" text=" bool buildANTDocument;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="JavaCodeGenerationState ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="Yw2QlLXiZgmf" writeOutText="false" indentLevel="1" classfield_id="Yw2QlLXiZgmf" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="Yw2QlLXiZgmf" writeOutText="false" indentLevel="1" classfield_id="Yw2QlLXiZgmf" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_3" accessType="0" parent_id="VganTcWWPpK0" writeOutText="false" indentLevel="1" classfield_id="VganTcWWPpK0" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_4" accessType="1" parent_id="VganTcWWPpK0" writeOutText="false" indentLevel="1" classfield_id="VganTcWWPpK0" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_6" accessType="0" parent_id="iYzRzVAVPAvA" writeOutText="false" indentLevel="1" classfield_id="iYzRzVAVPAvA" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_7" accessType="1" parent_id="iYzRzVAVPAvA" writeOutText="false" indentLevel="1" classfield_id="iYzRzVAVPAvA" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //JAVACODEGENERATIONSTATE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        JavaCodeGenerationState.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:18&amp;#010;The original location of this file is CodeGenerationState&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="Yw2QlLXiZgmf" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="tblock_0" parent_id="Yw2QlLXiZgmf" indentLevel="1" text=" bool autoGenerateAttributeAccessors;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="Yw2QlLXiZgmf" writeOutText="false" indentLevel="1" classfield_id="Yw2QlLXiZgmf" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="Yw2QlLXiZgmf" writeOutText="false" indentLevel="1" classfield_id="Yw2QlLXiZgmf" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="VganTcWWPpK0" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_2" parent_id="VganTcWWPpK0" indentLevel="1" text=" bool autoGenerateAssocAccessors;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_3" accessType="0" parent_id="VganTcWWPpK0" writeOutText="false" indentLevel="1" classfield_id="VganTcWWPpK0" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_4" accessType="1" parent_id="VganTcWWPpK0" writeOutText="false" indentLevel="1" classfield_id="VganTcWWPpK0" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="iYzRzVAVPAvA" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_5" parent_id="iYzRzVAVPAvA" indentLevel="1" text=" bool buildANTDocument;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_6" accessType="0" parent_id="iYzRzVAVPAvA" writeOutText="false" indentLevel="1" classfield_id="iYzRzVAVPAvA" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_7" accessType="1" parent_id="iYzRzVAVPAvA" writeOutText="false" indentLevel="1" classfield_id="iYzRzVAVPAvA" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="N68ILGWEf1tX" fileExt=".h" parent_class="UQr37bgaHGLi" id="cppheaderUQr37bgaHGLi" fileName="RubyCodeGenerationState" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef RUBYCODEGENERATIONSTATE_H&amp;#010;#define RUBYCODEGENERATIONSTATE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="UQr37bgaHGLi" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" text="Class RubyCodeGenerationState&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock tag="tblock_0" parent_id="qpEFeXFL3Ck2" indentLevel="1" text=" bool autoGenerateAttributeAccessors;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_2" parent_id="isX71RGVr7Yw" indentLevel="1" text=" bool autoGenerateAssocAccessors;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="RubyCodeGenerationState ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="qpEFeXFL3Ck2" writeOutText="false" indentLevel="1" classfield_id="qpEFeXFL3Ck2" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="qpEFeXFL3Ck2" writeOutText="false" indentLevel="1" classfield_id="qpEFeXFL3Ck2" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_3" accessType="0" parent_id="isX71RGVr7Yw" writeOutText="false" indentLevel="1" classfield_id="isX71RGVr7Yw" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_4" accessType="1" parent_id="isX71RGVr7Yw" writeOutText="false" indentLevel="1" classfield_id="isX71RGVr7Yw" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //RUBYCODEGENERATIONSTATE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        RubyCodeGenerationState.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:18&amp;#010;The original location of this file is CodeGenerationState&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="qpEFeXFL3Ck2" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="tblock_0" parent_id="qpEFeXFL3Ck2" indentLevel="1" text=" bool autoGenerateAttributeAccessors;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="qpEFeXFL3Ck2" writeOutText="false" indentLevel="1" classfield_id="qpEFeXFL3Ck2" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="qpEFeXFL3Ck2" writeOutText="false" indentLevel="1" classfield_id="qpEFeXFL3Ck2" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="isX71RGVr7Yw" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_2" parent_id="isX71RGVr7Yw" indentLevel="1" text=" bool autoGenerateAssocAccessors;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_3" accessType="0" parent_id="isX71RGVr7Yw" writeOutText="false" indentLevel="1" classfield_id="isX71RGVr7Yw" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_4" accessType="1" parent_id="isX71RGVr7Yw" writeOutText="false" indentLevel="1" classfield_id="isX71RGVr7Yw" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="CBRlk9bhdUfX" fileExt=".h" parent_class="HLeUIJfgEMrG" id="cppheaderHLeUIJfgEMrG" fileName="OptionState" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OPTIONSTATE_H&amp;#010;#define OPTIONSTATE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;generalstate.h&quot;&amp;#010;#include &quot;uistate.h&quot;&amp;#010;#include &quot;classstate.h&quot;&amp;#010;#include &quot;codeviewerstate.h&quot;&amp;#010;#include &quot;codegenerationstate.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="HLeUIJfgEMrG" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" text="Class OptionState&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock tag="tblock_0" parent_id="Y1yvefh8ziF8" indentLevel="1" text=" Settings::GeneralState generalState;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_2" parent_id="CbeNZYPqt1IB" indentLevel="1" text=" Settings::UIState uiState;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_5" parent_id="KwpYGgmogkjK" indentLevel="1" text=" Settings::ClassState classState;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_8" parent_id="PRSM7gTJH7eo" indentLevel="1" text=" Settings::CodeViewerState codeViewerState;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_11" parent_id="d1dW3tfNpSu5" indentLevel="1" text=" Settings::CodeGenerationState codeGenerationState;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="OptionState ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="Y1yvefh8ziF8" writeOutText="false" indentLevel="1" classfield_id="Y1yvefh8ziF8" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="Y1yvefh8ziF8" writeOutText="false" indentLevel="1" classfield_id="Y1yvefh8ziF8" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_3" accessType="0" parent_id="CbeNZYPqt1IB" writeOutText="false" indentLevel="1" classfield_id="CbeNZYPqt1IB" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_4" accessType="1" parent_id="CbeNZYPqt1IB" writeOutText="false" indentLevel="1" classfield_id="CbeNZYPqt1IB" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_6" accessType="0" parent_id="KwpYGgmogkjK" writeOutText="false" indentLevel="1" classfield_id="KwpYGgmogkjK" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_7" accessType="1" parent_id="KwpYGgmogkjK" writeOutText="false" indentLevel="1" classfield_id="KwpYGgmogkjK" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_9" accessType="0" parent_id="PRSM7gTJH7eo" writeOutText="false" indentLevel="1" classfield_id="PRSM7gTJH7eo" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_10" accessType="1" parent_id="PRSM7gTJH7eo" writeOutText="false" indentLevel="1" classfield_id="PRSM7gTJH7eo" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_12" accessType="0" parent_id="d1dW3tfNpSu5" writeOutText="false" indentLevel="1" classfield_id="d1dW3tfNpSu5" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_13" accessType="1" parent_id="d1dW3tfNpSu5" writeOutText="false" indentLevel="1" classfield_id="d1dW3tfNpSu5" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OPTIONSTATE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        OptionState.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:18&amp;#010;The original location of this file is Settings&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="Y1yvefh8ziF8" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="tblock_0" parent_id="Y1yvefh8ziF8" indentLevel="1" text=" Settings::GeneralState generalState;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="Y1yvefh8ziF8" writeOutText="false" indentLevel="1" classfield_id="Y1yvefh8ziF8" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="Y1yvefh8ziF8" writeOutText="false" indentLevel="1" classfield_id="Y1yvefh8ziF8" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="CbeNZYPqt1IB" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_2" parent_id="CbeNZYPqt1IB" indentLevel="1" text=" Settings::UIState uiState;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_3" accessType="0" parent_id="CbeNZYPqt1IB" writeOutText="false" indentLevel="1" classfield_id="CbeNZYPqt1IB" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_4" accessType="1" parent_id="CbeNZYPqt1IB" writeOutText="false" indentLevel="1" classfield_id="CbeNZYPqt1IB" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="KwpYGgmogkjK" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_5" parent_id="KwpYGgmogkjK" indentLevel="1" text=" Settings::ClassState classState;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_6" accessType="0" parent_id="KwpYGgmogkjK" writeOutText="false" indentLevel="1" classfield_id="KwpYGgmogkjK" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_7" accessType="1" parent_id="KwpYGgmogkjK" writeOutText="false" indentLevel="1" classfield_id="KwpYGgmogkjK" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="PRSM7gTJH7eo" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_8" parent_id="PRSM7gTJH7eo" indentLevel="1" text=" Settings::CodeViewerState codeViewerState;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_9" accessType="0" parent_id="PRSM7gTJH7eo" writeOutText="false" indentLevel="1" classfield_id="PRSM7gTJH7eo" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_10" accessType="1" parent_id="PRSM7gTJH7eo" writeOutText="false" indentLevel="1" classfield_id="PRSM7gTJH7eo" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="d1dW3tfNpSu5" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_11" parent_id="d1dW3tfNpSu5" indentLevel="1" text=" Settings::CodeGenerationState codeGenerationState;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_12" accessType="0" parent_id="d1dW3tfNpSu5" writeOutText="false" indentLevel="1" classfield_id="d1dW3tfNpSu5" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_13" accessType="1" parent_id="d1dW3tfNpSu5" writeOutText="false" indentLevel="1" classfield_id="d1dW3tfNpSu5" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="9gsnRb7o0Y97" id="cppheader9gsnRb7o0Y97" fileName="UMLView" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLView.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:19&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="EcOTh0GL2tr5" id="cppheaderEcOTh0GL2tr5" fileName="UMLObject" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef UMLOBJECT_H&amp;#010;#define UMLOBJECT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;qobject.h&quot;&amp;#010;#include &quot;idtype.h&quot;&amp;#010;#include &quot;object_type.h&quot;&amp;#010;#include &quot;qstring.h&quot;&amp;#010;#include &quot;visibility.h&quot;&amp;#010;#include &quot;association_type.h&quot;&amp;#010;#include &quot;qdomelement.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="EcOTh0GL2tr5" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" text="Class UMLObject&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="UMLObject ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation tag="operation_pAZ0HPbYxlPH" parent_id="pAZ0HPbYxlPH" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Forces the emission of the modified signal.  Useful when&amp;#010;updating several attributes at a time: you can block the&amp;#010;signals, update all atts, and then force the signal." />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock tag="tblock_0" parent_id="SUftgAPjxnkZ" indentLevel="1" text=" Uml::IDType m_nId;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The object's id." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_2" parent_id="6yPuwQu3p6U3" indentLevel="1" text=" QString m_Doc;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The object's documentation." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_5" parent_id="r5XrCCpehSYL" indentLevel="1" text=" UMLPackage* m_pUMLPackage;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The package the object belongs to if applicable." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_8" parent_id="cv4Yjo7nlUhh" indentLevel="1" text=" UMLStereotype* m_pStereotype;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The stereotype of the object if applicable." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_11" parent_id="tbjifDmWHHMT" indentLevel="1" text=" QString m_Name;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The objects name." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_14" parent_id="S989ceSCXXiG" indentLevel="1" text=" Uml::Object_Type m_BaseType;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The objects type." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_17" parent_id="Ln14IimBITtv" indentLevel="1" text=" Uml::Visibility m_Vis;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The objects visibility." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_20" parent_id="edSvtmPLvVSV" indentLevel="1" text=" bool m_bAbstract;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The state of whether the object is abstract or not." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_23" parent_id="9uigROvlCupU" indentLevel="1" text=" bool m_bStatic;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="This attribute holds whether the UMLObject has instance scope&amp;#010;(false - the default) or classifier scope (true)." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_26" parent_id="dZft0Wof8Ea1" indentLevel="1" text=" bool m_bInPaste;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Caller sets this true when in paste operation." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_29" parent_id="yxMuQoPXg5C8" indentLevel="1" text=" bool m_bCreationWasSignalled;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Auxiliary to maybeSignalObjectCreated()." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_32" parent_id="U5rezg8cElTE" indentLevel="1" text=" UMLObject* m_pSecondary;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Pointer to an associated object.&amp;#010;Only a few of the classes inheriting from UMLObject use this.&amp;#010;However, it needs to be here because of inheritance graph&amp;#010;disjunctness." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_35" parent_id="HGtPSSORNkLo" indentLevel="1" text=" QString m_SecondaryId;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="xmi.id of the secondary object for intermediate use during&amp;#010;loading.  The secondary ID is resolved to the m_pSecondary&amp;#010;in the course of resolveRef() at the end of loading." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_38" parent_id="WiLDmVJEaAsa" indentLevel="1" text=" QString m_SecondaryFallback;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Last-chance backup for when m_SecondaryId is not found.&amp;#010;Used by Rose import: MDL files specify both a &quot;quidu&quot;&amp;#010;(which corresponds to m_SecondaryId) and the human readable&amp;#010;fully qualified target name of a reference.&amp;#010;In case the quidu is not found, the human readable name is&amp;#010;used which we store in m_SecondaryFallback." />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="SUftgAPjxnkZ" writeOutText="false" indentLevel="1" classfield_id="SUftgAPjxnkZ" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of m_nId&amp;#010;The object's id.&amp;#010;@return the value of m_nId" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="SUftgAPjxnkZ" writeOutText="false" indentLevel="1" classfield_id="SUftgAPjxnkZ" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of m_nId&amp;#010;The object's id.&amp;#010;@param value the value of m_nId" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_3" accessType="0" parent_id="6yPuwQu3p6U3" writeOutText="false" indentLevel="1" classfield_id="6yPuwQu3p6U3" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of m_Doc&amp;#010;The object's documentation.&amp;#010;@return the value of m_Doc" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_4" accessType="1" parent_id="6yPuwQu3p6U3" writeOutText="false" indentLevel="1" classfield_id="6yPuwQu3p6U3" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of m_Doc&amp;#010;The object's documentation.&amp;#010;@param value the value of m_Doc" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_6" accessType="0" parent_id="r5XrCCpehSYL" writeOutText="false" indentLevel="1" classfield_id="r5XrCCpehSYL" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of m_pUMLPackage&amp;#010;The package the object belongs to if applicable.&amp;#010;@return the value of m_pUMLPackage" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_7" accessType="1" parent_id="r5XrCCpehSYL" writeOutText="false" indentLevel="1" classfield_id="r5XrCCpehSYL" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of m_pUMLPackage&amp;#010;The package the object belongs to if applicable.&amp;#010;@param value the value of m_pUMLPackage" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_9" accessType="0" parent_id="cv4Yjo7nlUhh" writeOutText="false" indentLevel="1" classfield_id="cv4Yjo7nlUhh" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of m_pStereotype&amp;#010;The stereotype of the object if applicable.&amp;#010;@return the value of m_pStereotype" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_10" accessType="1" parent_id="cv4Yjo7nlUhh" writeOutText="false" indentLevel="1" classfield_id="cv4Yjo7nlUhh" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of m_pStereotype&amp;#010;The stereotype of the object if applicable.&amp;#010;@param value the value of m_pStereotype" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_12" accessType="0" parent_id="tbjifDmWHHMT" writeOutText="false" indentLevel="1" classfield_id="tbjifDmWHHMT" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of m_Name&amp;#010;The objects name.&amp;#010;@return the value of m_Name" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_13" accessType="1" parent_id="tbjifDmWHHMT" writeOutText="false" indentLevel="1" classfield_id="tbjifDmWHHMT" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of m_Name&amp;#010;The objects name.&amp;#010;@param value the value of m_Name" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_15" accessType="0" parent_id="S989ceSCXXiG" writeOutText="false" indentLevel="1" classfield_id="S989ceSCXXiG" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of m_BaseType&amp;#010;The objects type.&amp;#010;@return the value of m_BaseType" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_16" accessType="1" parent_id="S989ceSCXXiG" writeOutText="false" indentLevel="1" classfield_id="S989ceSCXXiG" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of m_BaseType&amp;#010;The objects type.&amp;#010;@param value the value of m_BaseType" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_18" accessType="0" parent_id="Ln14IimBITtv" writeOutText="false" indentLevel="1" classfield_id="Ln14IimBITtv" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of m_Vis&amp;#010;The objects visibility.&amp;#010;@return the value of m_Vis" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_19" accessType="1" parent_id="Ln14IimBITtv" writeOutText="false" indentLevel="1" classfield_id="Ln14IimBITtv" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of m_Vis&amp;#010;The objects visibility.&amp;#010;@param value the value of m_Vis" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_21" accessType="0" parent_id="edSvtmPLvVSV" writeOutText="false" indentLevel="1" classfield_id="edSvtmPLvVSV" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of m_bAbstract&amp;#010;The state of whether the object is abstract or not.&amp;#010;@return the value of m_bAbstract" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_22" accessType="1" parent_id="edSvtmPLvVSV" writeOutText="false" indentLevel="1" classfield_id="edSvtmPLvVSV" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of m_bAbstract&amp;#010;The state of whether the object is abstract or not.&amp;#010;@param value the value of m_bAbstract" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_24" accessType="0" parent_id="9uigROvlCupU" writeOutText="false" indentLevel="1" classfield_id="9uigROvlCupU" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of m_bStatic&amp;#010;This attribute holds whether the UMLObject has instance scope&amp;#010;(false - the default) or classifier scope (true).&amp;#010;@return the value of m_bStatic" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_25" accessType="1" parent_id="9uigROvlCupU" writeOutText="false" indentLevel="1" classfield_id="9uigROvlCupU" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of m_bStatic&amp;#010;This attribute holds whether the UMLObject has instance scope&amp;#010;(false - the default) or classifier scope (true).&amp;#010;@param value the value of m_bStatic" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_27" accessType="0" parent_id="dZft0Wof8Ea1" writeOutText="false" indentLevel="1" classfield_id="dZft0Wof8Ea1" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of m_bInPaste&amp;#010;Caller sets this true when in paste operation.&amp;#010;@return the value of m_bInPaste" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_28" accessType="1" parent_id="dZft0Wof8Ea1" writeOutText="false" indentLevel="1" classfield_id="dZft0Wof8Ea1" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of m_bInPaste&amp;#010;Caller sets this true when in paste operation.&amp;#010;@param value the value of m_bInPaste" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_30" accessType="0" parent_id="yxMuQoPXg5C8" writeOutText="false" indentLevel="1" classfield_id="yxMuQoPXg5C8" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of m_bCreationWasSignalled&amp;#010;Auxiliary to maybeSignalObjectCreated().&amp;#010;@return the value of m_bCreationWasSignalled" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_31" accessType="1" parent_id="yxMuQoPXg5C8" writeOutText="false" indentLevel="1" classfield_id="yxMuQoPXg5C8" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of m_bCreationWasSignalled&amp;#010;Auxiliary to maybeSignalObjectCreated().&amp;#010;@param value the value of m_bCreationWasSignalled" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_33" accessType="0" parent_id="U5rezg8cElTE" writeOutText="false" indentLevel="1" classfield_id="U5rezg8cElTE" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of m_pSecondary&amp;#010;Pointer to an associated object.&amp;#010;Only a few of the classes inheriting from UMLObject use this.&amp;#010;However, it needs to be here because of inheritance graph&amp;#010;disjunctness.&amp;#010;@return the value of m_pSecondary" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_34" accessType="1" parent_id="U5rezg8cElTE" writeOutText="false" indentLevel="1" classfield_id="U5rezg8cElTE" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of m_pSecondary&amp;#010;Pointer to an associated object.&amp;#010;Only a few of the classes inheriting from UMLObject use this.&amp;#010;However, it needs to be here because of inheritance graph&amp;#010;disjunctness.&amp;#010;@param value the value of m_pSecondary" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_36" accessType="0" parent_id="HGtPSSORNkLo" writeOutText="false" indentLevel="1" classfield_id="HGtPSSORNkLo" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of m_SecondaryId&amp;#010;xmi.id of the secondary object for intermediate use during&amp;#010;loading.  The secondary ID is resolved to the m_pSecondary&amp;#010;in the course of resolveRef() at the end of loading.&amp;#010;@return the value of m_SecondaryId" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_37" accessType="1" parent_id="HGtPSSORNkLo" writeOutText="false" indentLevel="1" classfield_id="HGtPSSORNkLo" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of m_SecondaryId&amp;#010;xmi.id of the secondary object for intermediate use during&amp;#010;loading.  The secondary ID is resolved to the m_pSecondary&amp;#010;in the course of resolveRef() at the end of loading.&amp;#010;@param value the value of m_SecondaryId" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_39" accessType="0" parent_id="WiLDmVJEaAsa" writeOutText="false" indentLevel="1" classfield_id="WiLDmVJEaAsa" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of m_SecondaryFallback&amp;#010;Last-chance backup for when m_SecondaryId is not found.&amp;#010;Used by Rose import: MDL files specify both a &quot;quidu&quot;&amp;#010;(which corresponds to m_SecondaryId) and the human readable&amp;#010;fully qualified target name of a reference.&amp;#010;In case the quidu is not found, the human readable name is&amp;#010;used which we store in m_SecondaryFallback.&amp;#010;@return the value of m_SecondaryFallback" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_40" accessType="1" parent_id="WiLDmVJEaAsa" writeOutText="false" indentLevel="1" classfield_id="WiLDmVJEaAsa" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of m_SecondaryFallback&amp;#010;Last-chance backup for when m_SecondaryId is not found.&amp;#010;Used by Rose import: MDL files specify both a &quot;quidu&quot;&amp;#010;(which corresponds to m_SecondaryId) and the human readable&amp;#010;fully qualified target name of a reference.&amp;#010;In case the quidu is not found, the human readable name is&amp;#010;used which we store in m_SecondaryFallback.&amp;#010;@param value the value of m_SecondaryFallback" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation tag="operation_uFRSmPiS1ina" parent_id="uFRSmPiS1ina" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Emitted when the UMLObject has changed. Note that some objects emit&amp;#010;this signal when one of its children changes, for example, a UMLClass&amp;#010;emits a modified() signal when one of its operation changes while the Operation&amp;#010;itself emits the corresponding signal as well." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_j8Qs6qIuyquD" parent_id="j8Qs6qIuyquD" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Initializes key variables of the class." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_FVlAG9S9Mrb8" parent_id="FVlAG9S9Mrb8" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Calls UMLDoc::signalUMLObjectCreated() if m_BaseType affords&amp;#010;doing so." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_EHaFxLphREXW" parent_id="EHaFxLphREXW" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Auxiliary to loadFromXMI.&amp;#010;This method is usually overridden by child classes.&amp;#010;It is responsible for loading the specific XMI structure&amp;#010;of the child class." />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeoperation tag="operation_fixZTztXAoe1" parent_id="fixZTztXAoe1" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param parent &amp;#010;@param name &amp;#010;@param id " />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_zmg4JEsZdgiz" parent_id="zmg4JEsZdgiz" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Creates a UMLObject.&amp;#010;&amp;#010;@param   parent   The parent of the object." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_aUhbBgDASuCl" parent_id="aUhbBgDASuCl" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Creates a UMLObject with a given name and unique ID.&amp;#010;&amp;#010;@param   name   The name of the object.&amp;#010;@param   id     The unique ID of the object." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_qNl8vzvXPnhk" parent_id="qNl8vzvXPnhk" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Standard deconstructor." />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation tag="operation_arr3j3mp63Yo" parent_id="arr3j3mp63Yo" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Overloaded '==' operator" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_LaejIZp4Flsy" parent_id="LaejIZp4Flsy" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Copy the internal presentation of this object into the new&amp;#010;object." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_HXagLFOeq3N6" parent_id="HXagLFOeq3N6" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Make a clone of this object.&amp;#010;To be implemented by inheriting classes." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_FYkNpMO6twkE" parent_id="FYkNpMO6twkE" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Returns the type of the object.&amp;#010;&amp;#010;@return  Returns the type of the object." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_FJNhmMt2ubNk" parent_id="FJNhmMt2ubNk" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Set the type of the object.&amp;#010;&amp;#010;@param ot The Uml::Object_Type to set." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_6wYSA6jNO43A" parent_id="6wYSA6jNO43A" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Returns the ID of the object.&amp;#010;&amp;#010;@return  Returns the ID of the object." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_QIo6AewEaTei" parent_id="QIo6AewEaTei" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Sets the documentation for the object.&amp;#010;&amp;#010;@param d The documentation for the object." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_oEx65B4WRscZ" parent_id="oEx65B4WRscZ" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Returns the documentation for the object.&amp;#010;&amp;#010;@return  Returns the documentation for the object." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_zX11nAWbMTgR" parent_id="zX11nAWbMTgR" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Returns the visibility of the object.&amp;#010;&amp;#010;@return  Returns the visibility of the object." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_ruUblvmiSlhG" parent_id="ruUblvmiSlhG" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Sets the visibility of the object.&amp;#010;&amp;#010;@param s   The visibility of the object." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_63p5Sv4KoYtX" parent_id="63p5Sv4KoYtX" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Method used by setVisibility: its called by  cmdSetVisibility, Don't use it!" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_RABdiYOmbEr3" parent_id="RABdiYOmbEr3" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Sets the classes stereotype name.&amp;#010;Internally uses setUMLStereotype().&amp;#010;&amp;#010;@param _name     Sets the classes stereotype name." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_dxWkt2aKBjvt" parent_id="dxWkt2aKBjvt" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Method used by setStereotype: its called by  cmdSetStereotype, Don't use it!" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_UznJfZZIW52N" parent_id="UznJfZZIW52N" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Sets the class' UMLStereotype. Adjusts the reference counts&amp;#010;at the previously set stereotype and at the new stereotype.&amp;#010;If the previously set UMLStereotype's reference count drops&amp;#010;to zero then the UMLStereotype is removed at the UMLDoc and&amp;#010;it is then physically deleted.&amp;#010;&amp;#010;@param s Sets the classes UMLStereotype." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_usVPwWm05SFN" parent_id="usVPwWm05SFN" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Sets the classes Package.&amp;#010;DEPRECATED - use SetUMLPackage instead.&amp;#010;&amp;#010;@param _name   The classes Package name." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_wf8T0QgsICFC" parent_id="wf8T0QgsICFC" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Sets the UMLPackage in which this class is located.&amp;#010;&amp;#010;@param pPkg   Pointer to the class' UMLPackage." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_bBjsLz211DkT" parent_id="bBjsLz211DkT" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Returns the classes UMLStereotype object.&amp;#010;&amp;#010;@return   Returns the classes UMLStereotype object." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_0jCzuuQVjMkX" parent_id="0jCzuuQVjMkX" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Returns the classes stereotype name.&amp;#010;Returns an empty string if no stereotype object is set.&amp;#010;&amp;#010;@param includeAdornments Include surrounding angled brackets&amp;#010;                         &quot;«&quot; and &quot;»&quot;.&amp;#010;@return  Returns the classes stereotype name." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_9ebs1MNj91XB" parent_id="9ebs1MNj91XB" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Return the package(s) in which this UMLObject is contained&amp;#010;as a text.&amp;#010;&amp;#010;@param separator Separator string for joining together the&amp;#010;                 individual package prefixes (optional.)&amp;#010;                 If no separator is given then the separator&amp;#010;                 of the currently selected language is used.&amp;#010;@param includeRoot  Whether to prefix the root folder name.&amp;#010;                    Default: false.&amp;#010;@return  The UMLObject's enclosing package(s) as a text." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_igcetErbpJXf" parent_id="igcetErbpJXf" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Return a list of the packages in which this class is embedded.&amp;#010;The outermost package is first in the list.&amp;#010;&amp;#010;@param includeRoot  Whether to prefix the root folder name.&amp;#010;                    Default: false.&amp;#010;@return  UMLPackageList of the containing packages." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_sg3ixZNu90AJ" parent_id="sg3ixZNu90AJ" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Returns the UMLPackage that this class is located in.&amp;#010;&amp;#010;@return  Pointer to the UMLPackage of this class." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_OfqzKgRCKUuI" parent_id="OfqzKgRCKUuI" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Assigns a new Id to the object" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_YUliwNNL0BKK" parent_id="YUliwNNL0BKK" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Returns a copy of m_Name" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_tpTuh6FGY0yV" parent_id="tpTuh6FGY0yV" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Set the UMLObject's name" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_VqJ8QhyHWPCD" parent_id="VqJ8QhyHWPCD" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Method used by setName: its called by  cmdSetName, Don't use it!" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_UdRNlrQEhjK5" parent_id="UdRNlrQEhjK5" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Returns the fully qualified name, i.e. all package prefixes and then m_Name.&amp;#010;&amp;#010;@param separator  The separator string to use (optional.)&amp;#010;                  If not given then the separator is chosen according&amp;#010;                  to the currently selected active programming language&amp;#010;                  of import and code generation.&amp;#010;@param includeRoot  Whether to prefix the root folder name to the FQN.&amp;#010;                    See UMLDoc::getRootFolder(). Default: false.&amp;#010;@return  The fully qualified name of this UMLObject." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_fN5drHykz3H6" parent_id="fN5drHykz3H6" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Returns the abstract state of the object." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_wURBaj7F4Asv" parent_id="wURBaj7F4Asv" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Sets the paste state of the object." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_i50e1idxC26n" parent_id="i50e1idxC26n" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Sets the abstract state of the object." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_Cea3nOxWUw8V" parent_id="Cea3nOxWUw8V" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="This method is called if you wish to see the properties of a&amp;#010;UMLObject.  A dialog box will be displayed from which you&amp;#010;can change the object's properties.&amp;#010;&amp;#010;@param page    The page to show.&amp;#010;@param assoc   Whether to show association page.&amp;#010;@return        True if we modified the object." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_XO2CyMERP1aj" parent_id="XO2CyMERP1aj" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Resolve referenced objects (if any.)&amp;#010;Needs to be called after all UML objects are loaded from file.&amp;#010;This needs to be done after all model objects are loaded because&amp;#010;some of the xmi.id's might be forward references, i.e. they may&amp;#010;identify model objects which were not yet loaded at the point of&amp;#010;reference.&amp;#010;The default implementation attempts resolution of the m_SecondaryId.&amp;#010;&amp;#010;@return   True for success." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_j0hQ1WvWvwit" parent_id="j0hQ1WvWvwit" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="This method saves the XMI attributes of each specific model class.&amp;#010;It needs to be implemented by each child class.&amp;#010;For creating the QDomElement and saving the common XMI parts,&amp;#010;it can use the save() method." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_a0pVwVNCQgpJ" parent_id="a0pVwVNCQgpJ" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="This method loads the generic parts of the XMI common to most model&amp;#010;classes.  It is not usually reimplemented by child classes.&amp;#010;Instead, it invokes the load() method which implements the loading&amp;#010;of the specifics of each child class.&amp;#010;&amp;#010;@param element   The QDomElement from which to load." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_lgW9MMQuVYaI" parent_id="lgW9MMQuVYaI" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Analyzes the given QDomElement for a reference to a stereotype.&amp;#010;&amp;#010;@param element   QDomElement to analyze.&amp;#010;@return          True if a stereotype reference was found, else false." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_aIg6qGOpHpVk" parent_id="aIg6qGOpHpVk" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Returns true if this UMLObject has classifier scope,&amp;#010;otherwise false (the default)." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_alh11ZnapTgf" parent_id="alh11ZnapTgf" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Sets the value for m_bStatic." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_xlqwWpv4Yd5a" parent_id="xlqwWpv4Yd5a" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="This should be reimplemented by subclasses if they wish to&amp;#010;accept certain types of associations. Note that this only&amp;#010;tells if this UMLObject can accept the association&amp;#010;type. When creating an association another check is made to&amp;#010;see if the association is valid. For example a UMLClass&amp;#010;(UMLClassifier) can accept generalizations and should&amp;#010;return true. If while creating a generalization the&amp;#010;superclass is already subclassed from this, the association&amp;#010;is not valid and will not be created.  The default accepts&amp;#010;nothing (returns false)" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_hALFlPnvGvsa" parent_id="hALFlPnvGvsa" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Return secondary ID. Required by resolveRef()." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_eLtQD8fuGz71" parent_id="eLtQD8fuGz71" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Set the secondary ID.&amp;#010;Currently only required by petalTree2Uml(); all other setting of the&amp;#010;m_SecondaryID is internal to the UMLObject class hierarchy." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_K6FZiYANt4l6" parent_id="K6FZiYANt4l6" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Return secondary ID fallback.&amp;#010;Required by resolveRef() for imported model files." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_5aJJLJ1eNHD6" parent_id="5aJJLJ1eNHD6" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Set the secondary ID fallback.&amp;#010;Currently only used by petalTree2Uml()." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_rQjqh7emhx30" parent_id="rQjqh7emhx30" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Auxiliary to saveToXMI.&amp;#010;Create a QDomElement with the given tag, and save the XMI attributes&amp;#010;that are common to all child classes to the newly created element.&amp;#010;This method does not need to be overridden by child classes." />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //UMLOBJECT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLObject.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:40&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield role_id="0" listClassName="" field_type="99" parent_id="EmjEGhNonv09" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="EmjEGhNonv09" writeOutText="false" indentLevel="1" text=" RefactoringAssistant ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="" accessType="0" parent_id="EmjEGhNonv09" writeOutText="false" indentLevel="1" classfield_id="EmjEGhNonv09" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="1" parent_id="EmjEGhNonv09" writeOutText="false" indentLevel="1" classfield_id="EmjEGhNonv09" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="2" parent_id="EmjEGhNonv09" writeOutText="false" indentLevel="1" classfield_id="EmjEGhNonv09" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="3" parent_id="EmjEGhNonv09" writeOutText="false" indentLevel="1" classfield_id="EmjEGhNonv09" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="4" parent_id="EmjEGhNonv09" writeOutText="false" indentLevel="1" classfield_id="EmjEGhNonv09" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="99" parent_id="CA4eXi7Ywm3J" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="CA4eXi7Ywm3J" writeOutText="false" indentLevel="1" text=" QObject ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="CA4eXi7Ywm3J" writeOutText="false" indentLevel="1" classfield_id="CA4eXi7Ywm3J" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="CA4eXi7Ywm3J" writeOutText="false" indentLevel="1" classfield_id="CA4eXi7Ywm3J" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="CA4eXi7Ywm3J" writeOutText="false" indentLevel="1" classfield_id="CA4eXi7Ywm3J" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="CA4eXi7Ywm3J" writeOutText="false" indentLevel="1" classfield_id="CA4eXi7Ywm3J" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="CA4eXi7Ywm3J" writeOutText="false" indentLevel="1" classfield_id="CA4eXi7Ywm3J" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="SUftgAPjxnkZ" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="tblock_0" parent_id="SUftgAPjxnkZ" indentLevel="1" text=" Uml::IDType m_nId;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The object's id." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="SUftgAPjxnkZ" writeOutText="false" indentLevel="1" classfield_id="SUftgAPjxnkZ" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of m_nId&amp;#010;The object's id.&amp;#010;@return the value of m_nId" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="SUftgAPjxnkZ" writeOutText="false" indentLevel="1" classfield_id="SUftgAPjxnkZ" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of m_nId&amp;#010;The object's id.&amp;#010;@param value the value of m_nId" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="6yPuwQu3p6U3" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_2" parent_id="6yPuwQu3p6U3" indentLevel="1" text=" QString m_Doc;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The object's documentation." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_3" accessType="0" parent_id="6yPuwQu3p6U3" writeOutText="false" indentLevel="1" classfield_id="6yPuwQu3p6U3" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of m_Doc&amp;#010;The object's documentation.&amp;#010;@return the value of m_Doc" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_4" accessType="1" parent_id="6yPuwQu3p6U3" writeOutText="false" indentLevel="1" classfield_id="6yPuwQu3p6U3" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of m_Doc&amp;#010;The object's documentation.&amp;#010;@param value the value of m_Doc" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="r5XrCCpehSYL" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_5" parent_id="r5XrCCpehSYL" indentLevel="1" text=" UMLPackage* m_pUMLPackage;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The package the object belongs to if applicable." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_6" accessType="0" parent_id="r5XrCCpehSYL" writeOutText="false" indentLevel="1" classfield_id="r5XrCCpehSYL" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of m_pUMLPackage&amp;#010;The package the object belongs to if applicable.&amp;#010;@return the value of m_pUMLPackage" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_7" accessType="1" parent_id="r5XrCCpehSYL" writeOutText="false" indentLevel="1" classfield_id="r5XrCCpehSYL" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of m_pUMLPackage&amp;#010;The package the object belongs to if applicable.&amp;#010;@param value the value of m_pUMLPackage" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="cv4Yjo7nlUhh" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_8" parent_id="cv4Yjo7nlUhh" indentLevel="1" text=" UMLStereotype* m_pStereotype;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The stereotype of the object if applicable." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_9" accessType="0" parent_id="cv4Yjo7nlUhh" writeOutText="false" indentLevel="1" classfield_id="cv4Yjo7nlUhh" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of m_pStereotype&amp;#010;The stereotype of the object if applicable.&amp;#010;@return the value of m_pStereotype" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_10" accessType="1" parent_id="cv4Yjo7nlUhh" writeOutText="false" indentLevel="1" classfield_id="cv4Yjo7nlUhh" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of m_pStereotype&amp;#010;The stereotype of the object if applicable.&amp;#010;@param value the value of m_pStereotype" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="tbjifDmWHHMT" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_11" parent_id="tbjifDmWHHMT" indentLevel="1" text=" QString m_Name;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The objects name." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_12" accessType="0" parent_id="tbjifDmWHHMT" writeOutText="false" indentLevel="1" classfield_id="tbjifDmWHHMT" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of m_Name&amp;#010;The objects name.&amp;#010;@return the value of m_Name" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_13" accessType="1" parent_id="tbjifDmWHHMT" writeOutText="false" indentLevel="1" classfield_id="tbjifDmWHHMT" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of m_Name&amp;#010;The objects name.&amp;#010;@param value the value of m_Name" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="S989ceSCXXiG" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_14" parent_id="S989ceSCXXiG" indentLevel="1" text=" Uml::Object_Type m_BaseType;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The objects type." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_15" accessType="0" parent_id="S989ceSCXXiG" writeOutText="false" indentLevel="1" classfield_id="S989ceSCXXiG" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of m_BaseType&amp;#010;The objects type.&amp;#010;@return the value of m_BaseType" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_16" accessType="1" parent_id="S989ceSCXXiG" writeOutText="false" indentLevel="1" classfield_id="S989ceSCXXiG" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of m_BaseType&amp;#010;The objects type.&amp;#010;@param value the value of m_BaseType" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="Ln14IimBITtv" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_17" parent_id="Ln14IimBITtv" indentLevel="1" text=" Uml::Visibility m_Vis;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The objects visibility." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_18" accessType="0" parent_id="Ln14IimBITtv" writeOutText="false" indentLevel="1" classfield_id="Ln14IimBITtv" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of m_Vis&amp;#010;The objects visibility.&amp;#010;@return the value of m_Vis" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_19" accessType="1" parent_id="Ln14IimBITtv" writeOutText="false" indentLevel="1" classfield_id="Ln14IimBITtv" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of m_Vis&amp;#010;The objects visibility.&amp;#010;@param value the value of m_Vis" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="edSvtmPLvVSV" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_20" parent_id="edSvtmPLvVSV" indentLevel="1" text=" bool m_bAbstract;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The state of whether the object is abstract or not." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_21" accessType="0" parent_id="edSvtmPLvVSV" writeOutText="false" indentLevel="1" classfield_id="edSvtmPLvVSV" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of m_bAbstract&amp;#010;The state of whether the object is abstract or not.&amp;#010;@return the value of m_bAbstract" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_22" accessType="1" parent_id="edSvtmPLvVSV" writeOutText="false" indentLevel="1" classfield_id="edSvtmPLvVSV" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of m_bAbstract&amp;#010;The state of whether the object is abstract or not.&amp;#010;@param value the value of m_bAbstract" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="9uigROvlCupU" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_23" parent_id="9uigROvlCupU" indentLevel="1" text=" bool m_bStatic;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="This attribute holds whether the UMLObject has instance scope&amp;#010;(false - the default) or classifier scope (true)." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_24" accessType="0" parent_id="9uigROvlCupU" writeOutText="false" indentLevel="1" classfield_id="9uigROvlCupU" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of m_bStatic&amp;#010;This attribute holds whether the UMLObject has instance scope&amp;#010;(false - the default) or classifier scope (true).&amp;#010;@return the value of m_bStatic" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_25" accessType="1" parent_id="9uigROvlCupU" writeOutText="false" indentLevel="1" classfield_id="9uigROvlCupU" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of m_bStatic&amp;#010;This attribute holds whether the UMLObject has instance scope&amp;#010;(false - the default) or classifier scope (true).&amp;#010;@param value the value of m_bStatic" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="dZft0Wof8Ea1" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_26" parent_id="dZft0Wof8Ea1" indentLevel="1" text=" bool m_bInPaste;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Caller sets this true when in paste operation." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_27" accessType="0" parent_id="dZft0Wof8Ea1" writeOutText="false" indentLevel="1" classfield_id="dZft0Wof8Ea1" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of m_bInPaste&amp;#010;Caller sets this true when in paste operation.&amp;#010;@return the value of m_bInPaste" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_28" accessType="1" parent_id="dZft0Wof8Ea1" writeOutText="false" indentLevel="1" classfield_id="dZft0Wof8Ea1" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of m_bInPaste&amp;#010;Caller sets this true when in paste operation.&amp;#010;@param value the value of m_bInPaste" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="yxMuQoPXg5C8" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_29" parent_id="yxMuQoPXg5C8" indentLevel="1" text=" bool m_bCreationWasSignalled;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Auxiliary to maybeSignalObjectCreated()." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_30" accessType="0" parent_id="yxMuQoPXg5C8" writeOutText="false" indentLevel="1" classfield_id="yxMuQoPXg5C8" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of m_bCreationWasSignalled&amp;#010;Auxiliary to maybeSignalObjectCreated().&amp;#010;@return the value of m_bCreationWasSignalled" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_31" accessType="1" parent_id="yxMuQoPXg5C8" writeOutText="false" indentLevel="1" classfield_id="yxMuQoPXg5C8" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of m_bCreationWasSignalled&amp;#010;Auxiliary to maybeSignalObjectCreated().&amp;#010;@param value the value of m_bCreationWasSignalled" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="U5rezg8cElTE" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_32" parent_id="U5rezg8cElTE" indentLevel="1" text=" UMLObject* m_pSecondary;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Pointer to an associated object.&amp;#010;Only a few of the classes inheriting from UMLObject use this.&amp;#010;However, it needs to be here because of inheritance graph&amp;#010;disjunctness." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_33" accessType="0" parent_id="U5rezg8cElTE" writeOutText="false" indentLevel="1" classfield_id="U5rezg8cElTE" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of m_pSecondary&amp;#010;Pointer to an associated object.&amp;#010;Only a few of the classes inheriting from UMLObject use this.&amp;#010;However, it needs to be here because of inheritance graph&amp;#010;disjunctness.&amp;#010;@return the value of m_pSecondary" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_34" accessType="1" parent_id="U5rezg8cElTE" writeOutText="false" indentLevel="1" classfield_id="U5rezg8cElTE" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of m_pSecondary&amp;#010;Pointer to an associated object.&amp;#010;Only a few of the classes inheriting from UMLObject use this.&amp;#010;However, it needs to be here because of inheritance graph&amp;#010;disjunctness.&amp;#010;@param value the value of m_pSecondary" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="HGtPSSORNkLo" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_35" parent_id="HGtPSSORNkLo" indentLevel="1" text=" QString m_SecondaryId;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="xmi.id of the secondary object for intermediate use during&amp;#010;loading.  The secondary ID is resolved to the m_pSecondary&amp;#010;in the course of resolveRef() at the end of loading." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_36" accessType="0" parent_id="HGtPSSORNkLo" writeOutText="false" indentLevel="1" classfield_id="HGtPSSORNkLo" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of m_SecondaryId&amp;#010;xmi.id of the secondary object for intermediate use during&amp;#010;loading.  The secondary ID is resolved to the m_pSecondary&amp;#010;in the course of resolveRef() at the end of loading.&amp;#010;@return the value of m_SecondaryId" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_37" accessType="1" parent_id="HGtPSSORNkLo" writeOutText="false" indentLevel="1" classfield_id="HGtPSSORNkLo" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of m_SecondaryId&amp;#010;xmi.id of the secondary object for intermediate use during&amp;#010;loading.  The secondary ID is resolved to the m_pSecondary&amp;#010;in the course of resolveRef() at the end of loading.&amp;#010;@param value the value of m_SecondaryId" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="WiLDmVJEaAsa" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_38" parent_id="WiLDmVJEaAsa" indentLevel="1" text=" QString m_SecondaryFallback;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Last-chance backup for when m_SecondaryId is not found.&amp;#010;Used by Rose import: MDL files specify both a &quot;quidu&quot;&amp;#010;(which corresponds to m_SecondaryId) and the human readable&amp;#010;fully qualified target name of a reference.&amp;#010;In case the quidu is not found, the human readable name is&amp;#010;used which we store in m_SecondaryFallback." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_39" accessType="0" parent_id="WiLDmVJEaAsa" writeOutText="false" indentLevel="1" classfield_id="WiLDmVJEaAsa" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of m_SecondaryFallback&amp;#010;Last-chance backup for when m_SecondaryId is not found.&amp;#010;Used by Rose import: MDL files specify both a &quot;quidu&quot;&amp;#010;(which corresponds to m_SecondaryId) and the human readable&amp;#010;fully qualified target name of a reference.&amp;#010;In case the quidu is not found, the human readable name is&amp;#010;used which we store in m_SecondaryFallback.&amp;#010;@return the value of m_SecondaryFallback" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_40" accessType="1" parent_id="WiLDmVJEaAsa" writeOutText="false" indentLevel="1" classfield_id="WiLDmVJEaAsa" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of m_SecondaryFallback&amp;#010;Last-chance backup for when m_SecondaryId is not found.&amp;#010;Used by Rose import: MDL files specify both a &quot;quidu&quot;&amp;#010;(which corresponds to m_SecondaryId) and the human readable&amp;#010;fully qualified target name of a reference.&amp;#010;In case the quidu is not found, the human readable name is&amp;#010;used which we store in m_SecondaryFallback.&amp;#010;@param value the value of m_SecondaryFallback" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="6619242" parent_id="o0A2leF0s6OK" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="o0A2leF0s6OK" writeOutText="false" indentLevel="1" text=" UMLClassifierListItem ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="" accessType="0" parent_id="o0A2leF0s6OK" writeOutText="false" indentLevel="1" classfield_id="o0A2leF0s6OK" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="1" parent_id="o0A2leF0s6OK" writeOutText="false" indentLevel="1" classfield_id="o0A2leF0s6OK" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="2" parent_id="o0A2leF0s6OK" writeOutText="false" indentLevel="1" classfield_id="o0A2leF0s6OK" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="3" parent_id="o0A2leF0s6OK" writeOutText="false" indentLevel="1" classfield_id="o0A2leF0s6OK" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="4" parent_id="o0A2leF0s6OK" writeOutText="false" indentLevel="1" classfield_id="o0A2leF0s6OK" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="6619242" parent_id="uXRI8STL1XSj" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="uXRI8STL1XSj" writeOutText="false" indentLevel="1" text=" UMLCanvasObject ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="" accessType="0" parent_id="uXRI8STL1XSj" writeOutText="false" indentLevel="1" classfield_id="uXRI8STL1XSj" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="1" parent_id="uXRI8STL1XSj" writeOutText="false" indentLevel="1" classfield_id="uXRI8STL1XSj" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="2" parent_id="uXRI8STL1XSj" writeOutText="false" indentLevel="1" classfield_id="uXRI8STL1XSj" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="3" parent_id="uXRI8STL1XSj" writeOutText="false" indentLevel="1" classfield_id="uXRI8STL1XSj" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="4" parent_id="uXRI8STL1XSj" writeOutText="false" indentLevel="1" classfield_id="uXRI8STL1XSj" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="mXQazKd6zVtQ" id="cppheadermXQazKd6zVtQ" fileName="WidgetBase" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef WIDGETBASE_H&amp;#010;#define WIDGETBASE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;qobject.h&quot;&amp;#010;#include &quot;widget_type.h&quot;&amp;#010;#include &quot;qstring.h&quot;&amp;#010;#include &quot;uint.h&quot;&amp;#010;#include &quot;qcolor.h&quot;&amp;#010;#include &quot;idtype.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="mXQazKd6zVtQ" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class WidgetBase&amp;#010;@short       Common base class for UMLWidget and AssociationWidget&amp;#010;@author      Oliver Kellogg &lt;okellogg@users.sourceforge.net>&amp;#010;Bugs and comments to umbrello-devel@kde.org or http://bugs.kde.org" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="WidgetBase ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock tag="tblock_0" parent_id="mPsSBgOFn3dL" indentLevel="1" text=" Uml::Widget_Type m_Type;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Type of widget." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_2" parent_id="hzbB8vwBT8Mi" indentLevel="1" text=" UMLView* m_pView;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_5" parent_id="bHUFpmIcC84L" indentLevel="1" text=" UMLObject* m_pObject;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_8" parent_id="pQaaSBt9BSIH" indentLevel="1" text=" QString m_Doc;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_11" parent_id="OFSpNnXw4zAt" indentLevel="1" text=" Uml::IDType m_nId;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="This ID is only used when the widget does not have a&amp;#010;corresponding UMLObject (i.e. the m_pObject pointer is NULL.)&amp;#010;For UMLObjects, the ID from the UMLObject is used." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_14" parent_id="lQVvYYELymtQ" indentLevel="1" text=" QColor m_LineColour;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Color of the lines of the widget. Is saved to XMI." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_17" parent_id="wlX7DqOZ3qMO" indentLevel="1" text=" uint m_LineWidth;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Width of the lines of the widget. Is saved to XMI." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_20" parent_id="dtIfsSZcs4VP" indentLevel="1" text=" bool m_bUsesDiagramLineColour;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="true by default, false if the colours have&amp;#010;been explicitly set for this widget.&amp;#010;These are saved to XMI." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_23" parent_id="ciiZSazOLVTW" indentLevel="1" text=" bool m_bUsesDiagramLineWidth;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="mPsSBgOFn3dL" writeOutText="false" indentLevel="1" classfield_id="mPsSBgOFn3dL" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of m_Type&amp;#010;Type of widget.&amp;#010;@return the value of m_Type" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="mPsSBgOFn3dL" writeOutText="false" indentLevel="1" classfield_id="mPsSBgOFn3dL" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of m_Type&amp;#010;Type of widget.&amp;#010;@param value the value of m_Type" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_3" accessType="0" parent_id="hzbB8vwBT8Mi" writeOutText="false" indentLevel="1" classfield_id="hzbB8vwBT8Mi" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_4" accessType="1" parent_id="hzbB8vwBT8Mi" writeOutText="false" indentLevel="1" classfield_id="hzbB8vwBT8Mi" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_6" accessType="0" parent_id="bHUFpmIcC84L" writeOutText="false" indentLevel="1" classfield_id="bHUFpmIcC84L" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_7" accessType="1" parent_id="bHUFpmIcC84L" writeOutText="false" indentLevel="1" classfield_id="bHUFpmIcC84L" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_9" accessType="0" parent_id="pQaaSBt9BSIH" writeOutText="false" indentLevel="1" classfield_id="pQaaSBt9BSIH" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_10" accessType="1" parent_id="pQaaSBt9BSIH" writeOutText="false" indentLevel="1" classfield_id="pQaaSBt9BSIH" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_12" accessType="0" parent_id="OFSpNnXw4zAt" writeOutText="false" indentLevel="1" classfield_id="OFSpNnXw4zAt" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of m_nId&amp;#010;This ID is only used when the widget does not have a&amp;#010;corresponding UMLObject (i.e. the m_pObject pointer is NULL.)&amp;#010;For UMLObjects, the ID from the UMLObject is used.&amp;#010;@return the value of m_nId" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_13" accessType="1" parent_id="OFSpNnXw4zAt" writeOutText="false" indentLevel="1" classfield_id="OFSpNnXw4zAt" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of m_nId&amp;#010;This ID is only used when the widget does not have a&amp;#010;corresponding UMLObject (i.e. the m_pObject pointer is NULL.)&amp;#010;For UMLObjects, the ID from the UMLObject is used.&amp;#010;@param value the value of m_nId" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_15" accessType="0" parent_id="lQVvYYELymtQ" writeOutText="false" indentLevel="1" classfield_id="lQVvYYELymtQ" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of m_LineColour&amp;#010;Color of the lines of the widget. Is saved to XMI.&amp;#010;@return the value of m_LineColour" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_16" accessType="1" parent_id="lQVvYYELymtQ" writeOutText="false" indentLevel="1" classfield_id="lQVvYYELymtQ" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of m_LineColour&amp;#010;Color of the lines of the widget. Is saved to XMI.&amp;#010;@param value the value of m_LineColour" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_18" accessType="0" parent_id="wlX7DqOZ3qMO" writeOutText="false" indentLevel="1" classfield_id="wlX7DqOZ3qMO" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of m_LineWidth&amp;#010;Width of the lines of the widget. Is saved to XMI.&amp;#010;@return the value of m_LineWidth" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_19" accessType="1" parent_id="wlX7DqOZ3qMO" writeOutText="false" indentLevel="1" classfield_id="wlX7DqOZ3qMO" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of m_LineWidth&amp;#010;Width of the lines of the widget. Is saved to XMI.&amp;#010;@param value the value of m_LineWidth" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_21" accessType="0" parent_id="dtIfsSZcs4VP" writeOutText="false" indentLevel="1" classfield_id="dtIfsSZcs4VP" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of m_bUsesDiagramLineColour&amp;#010;true by default, false if the colours have&amp;#010;been explicitly set for this widget.&amp;#010;These are saved to XMI.&amp;#010;@return the value of m_bUsesDiagramLineColour" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_22" accessType="1" parent_id="dtIfsSZcs4VP" writeOutText="false" indentLevel="1" classfield_id="dtIfsSZcs4VP" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of m_bUsesDiagramLineColour&amp;#010;true by default, false if the colours have&amp;#010;been explicitly set for this widget.&amp;#010;These are saved to XMI.&amp;#010;@param value the value of m_bUsesDiagramLineColour" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_24" accessType="0" parent_id="ciiZSazOLVTW" writeOutText="false" indentLevel="1" classfield_id="ciiZSazOLVTW" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_25" accessType="1" parent_id="ciiZSazOLVTW" writeOutText="false" indentLevel="1" classfield_id="ciiZSazOLVTW" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation tag="operation_VEeYOE7sglov" parent_id="VEeYOE7sglov" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Initialize members." />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeoperation tag="operation_XDJpEv7Y9Sts" parent_id="XDJpEv7Y9Sts" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param view " />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_2maBCR3q0hhS" parent_id="2maBCR3q0hhS" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation tag="operation_CC7g8wggViBq" parent_id="CC7g8wggViBq" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Write property of m_Type." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_6D86unW40dl8" parent_id="6D86unW40dl8" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Read property of m_Type." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_rhwwO6EUJMZB" parent_id="rhwwO6EUJMZB" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Returns the @ref UMLObject set to represent.&amp;#010;&amp;#010;@return the UMLObject to represent." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_fj4x3d8AjOGQ" parent_id="fj4x3d8AjOGQ" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_Kwi1JyPgO4Qn" parent_id="Kwi1JyPgO4Qn" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Sets the @ref UMLObject to represent.&amp;#010;&amp;#010;@param o The object to represent." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_3Qpc7dAPXsPq" parent_id="3Qpc7dAPXsPq" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Used by some child classes to get documentation.&amp;#010;&amp;#010;@return  The documentation from the UMLObject (if m_pObject is set.)" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_CmIzz3x0RmcW" parent_id="CmIzz3x0RmcW" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Used by some child classes to set documentation.&amp;#010;&amp;#010;@param doc       The documentation to be set in the UMLObject&amp;#010;         (if m_pObject is set.)" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_7eliigFtQVqO" parent_id="7eliigFtQVqO" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Sets the line colour&amp;#010;&amp;#010;@param colour the new line colour" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_BkdZFTxlCKjh" parent_id="BkdZFTxlCKjh" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Sets the line width&amp;#010;&amp;#010;@param width the new line width" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_duKhPpSYZ56m" parent_id="duKhPpSYZ56m" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_I2T6DcbpXtUu" parent_id="I2T6DcbpXtUu" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_nfYGeDOwDr0P" parent_id="nfYGeDOwDr0P" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_tMAUtOOg4uxg" parent_id="tMAUtOOg4uxg" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_bVjEp7rjTzBM" parent_id="bVjEp7rjTzBM" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param usesDiagramLineColour " />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_HX2RQd2z8mDy" parent_id="HX2RQd2z8mDy" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param usesDiagramLineWidth " />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_atIpb7CqeEI2" parent_id="atIpb7CqeEI2" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Write property of m_nId." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_PpakRMV1Fnop" parent_id="PpakRMV1Fnop" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Read property of m_nId." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_lyAvXK7v9fda" parent_id="lyAvXK7v9fda" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param qDoc &amp;#010;@param qElement " />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_CAYrilws3Cca" parent_id="CAYrilws3Cca" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param qElement " />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //WIDGETBASE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        WidgetBase.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:23&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield role_id="1" listClassName="" field_type="99" parent_id="YQyYJnd4K3cI" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="YQyYJnd4K3cI" writeOutText="false" indentLevel="1" text=" QObject ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="YQyYJnd4K3cI" writeOutText="false" indentLevel="1" classfield_id="YQyYJnd4K3cI" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="YQyYJnd4K3cI" writeOutText="false" indentLevel="1" classfield_id="YQyYJnd4K3cI" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="YQyYJnd4K3cI" writeOutText="false" indentLevel="1" classfield_id="YQyYJnd4K3cI" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="YQyYJnd4K3cI" writeOutText="false" indentLevel="1" classfield_id="YQyYJnd4K3cI" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="YQyYJnd4K3cI" writeOutText="false" indentLevel="1" classfield_id="YQyYJnd4K3cI" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="mPsSBgOFn3dL" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="tblock_0" parent_id="mPsSBgOFn3dL" indentLevel="1" text=" Uml::Widget_Type m_Type;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Type of widget." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="mPsSBgOFn3dL" writeOutText="false" indentLevel="1" classfield_id="mPsSBgOFn3dL" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of m_Type&amp;#010;Type of widget.&amp;#010;@return the value of m_Type" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="mPsSBgOFn3dL" writeOutText="false" indentLevel="1" classfield_id="mPsSBgOFn3dL" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of m_Type&amp;#010;Type of widget.&amp;#010;@param value the value of m_Type" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="hzbB8vwBT8Mi" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_2" parent_id="hzbB8vwBT8Mi" indentLevel="1" text=" UMLView* m_pView;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_3" accessType="0" parent_id="hzbB8vwBT8Mi" writeOutText="false" indentLevel="1" classfield_id="hzbB8vwBT8Mi" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_4" accessType="1" parent_id="hzbB8vwBT8Mi" writeOutText="false" indentLevel="1" classfield_id="hzbB8vwBT8Mi" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="bHUFpmIcC84L" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_5" parent_id="bHUFpmIcC84L" indentLevel="1" text=" UMLObject* m_pObject;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_6" accessType="0" parent_id="bHUFpmIcC84L" writeOutText="false" indentLevel="1" classfield_id="bHUFpmIcC84L" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_7" accessType="1" parent_id="bHUFpmIcC84L" writeOutText="false" indentLevel="1" classfield_id="bHUFpmIcC84L" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="pQaaSBt9BSIH" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_8" parent_id="pQaaSBt9BSIH" indentLevel="1" text=" QString m_Doc;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_9" accessType="0" parent_id="pQaaSBt9BSIH" writeOutText="false" indentLevel="1" classfield_id="pQaaSBt9BSIH" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_10" accessType="1" parent_id="pQaaSBt9BSIH" writeOutText="false" indentLevel="1" classfield_id="pQaaSBt9BSIH" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="OFSpNnXw4zAt" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_11" parent_id="OFSpNnXw4zAt" indentLevel="1" text=" Uml::IDType m_nId;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="This ID is only used when the widget does not have a&amp;#010;corresponding UMLObject (i.e. the m_pObject pointer is NULL.)&amp;#010;For UMLObjects, the ID from the UMLObject is used." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_12" accessType="0" parent_id="OFSpNnXw4zAt" writeOutText="false" indentLevel="1" classfield_id="OFSpNnXw4zAt" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of m_nId&amp;#010;This ID is only used when the widget does not have a&amp;#010;corresponding UMLObject (i.e. the m_pObject pointer is NULL.)&amp;#010;For UMLObjects, the ID from the UMLObject is used.&amp;#010;@return the value of m_nId" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_13" accessType="1" parent_id="OFSpNnXw4zAt" writeOutText="false" indentLevel="1" classfield_id="OFSpNnXw4zAt" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of m_nId&amp;#010;This ID is only used when the widget does not have a&amp;#010;corresponding UMLObject (i.e. the m_pObject pointer is NULL.)&amp;#010;For UMLObjects, the ID from the UMLObject is used.&amp;#010;@param value the value of m_nId" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="lQVvYYELymtQ" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_14" parent_id="lQVvYYELymtQ" indentLevel="1" text=" QColor m_LineColour;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Color of the lines of the widget. Is saved to XMI." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_15" accessType="0" parent_id="lQVvYYELymtQ" writeOutText="false" indentLevel="1" classfield_id="lQVvYYELymtQ" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of m_LineColour&amp;#010;Color of the lines of the widget. Is saved to XMI.&amp;#010;@return the value of m_LineColour" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_16" accessType="1" parent_id="lQVvYYELymtQ" writeOutText="false" indentLevel="1" classfield_id="lQVvYYELymtQ" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of m_LineColour&amp;#010;Color of the lines of the widget. Is saved to XMI.&amp;#010;@param value the value of m_LineColour" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="wlX7DqOZ3qMO" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_17" parent_id="wlX7DqOZ3qMO" indentLevel="1" text=" uint m_LineWidth;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Width of the lines of the widget. Is saved to XMI." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_18" accessType="0" parent_id="wlX7DqOZ3qMO" writeOutText="false" indentLevel="1" classfield_id="wlX7DqOZ3qMO" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of m_LineWidth&amp;#010;Width of the lines of the widget. Is saved to XMI.&amp;#010;@return the value of m_LineWidth" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_19" accessType="1" parent_id="wlX7DqOZ3qMO" writeOutText="false" indentLevel="1" classfield_id="wlX7DqOZ3qMO" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of m_LineWidth&amp;#010;Width of the lines of the widget. Is saved to XMI.&amp;#010;@param value the value of m_LineWidth" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="dtIfsSZcs4VP" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_20" parent_id="dtIfsSZcs4VP" indentLevel="1" text=" bool m_bUsesDiagramLineColour;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="true by default, false if the colours have&amp;#010;been explicitly set for this widget.&amp;#010;These are saved to XMI." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_21" accessType="0" parent_id="dtIfsSZcs4VP" writeOutText="false" indentLevel="1" classfield_id="dtIfsSZcs4VP" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of m_bUsesDiagramLineColour&amp;#010;true by default, false if the colours have&amp;#010;been explicitly set for this widget.&amp;#010;These are saved to XMI.&amp;#010;@return the value of m_bUsesDiagramLineColour" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_22" accessType="1" parent_id="dtIfsSZcs4VP" writeOutText="false" indentLevel="1" classfield_id="dtIfsSZcs4VP" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of m_bUsesDiagramLineColour&amp;#010;true by default, false if the colours have&amp;#010;been explicitly set for this widget.&amp;#010;These are saved to XMI.&amp;#010;@param value the value of m_bUsesDiagramLineColour" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="ciiZSazOLVTW" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_23" parent_id="ciiZSazOLVTW" indentLevel="1" text=" bool m_bUsesDiagramLineWidth;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_24" accessType="0" parent_id="ciiZSazOLVTW" writeOutText="false" indentLevel="1" classfield_id="ciiZSazOLVTW" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_25" accessType="1" parent_id="ciiZSazOLVTW" writeOutText="false" indentLevel="1" classfield_id="ciiZSazOLVTW" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="4325492" parent_id="hJTk1XEbNcXg" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="hJTk1XEbNcXg" writeOutText="false" indentLevel="1" text=" UMLWidget ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="" accessType="0" parent_id="hJTk1XEbNcXg" writeOutText="false" indentLevel="1" classfield_id="hJTk1XEbNcXg" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="1" parent_id="hJTk1XEbNcXg" writeOutText="false" indentLevel="1" classfield_id="hJTk1XEbNcXg" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="2" parent_id="hJTk1XEbNcXg" writeOutText="false" indentLevel="1" classfield_id="hJTk1XEbNcXg" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="3" parent_id="hJTk1XEbNcXg" writeOutText="false" indentLevel="1" classfield_id="hJTk1XEbNcXg" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="4" parent_id="hJTk1XEbNcXg" writeOutText="false" indentLevel="1" classfield_id="hJTk1XEbNcXg" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="5zC3XL9jxXAd" id="cppheader5zC3XL9jxXAd" fileName="QObject" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef QOBJECT_H&amp;#010;#define QOBJECT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="5zC3XL9jxXAd" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" text="Class QObject&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="QObject ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //QOBJECT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QObject.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:25&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield role_id="0" listClassName="" field_type="99" parent_id="YQyYJnd4K3cI" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="YQyYJnd4K3cI" writeOutText="false" indentLevel="1" text=" WidgetBase ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="" accessType="0" parent_id="YQyYJnd4K3cI" writeOutText="false" indentLevel="1" classfield_id="YQyYJnd4K3cI" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="1" parent_id="YQyYJnd4K3cI" writeOutText="false" indentLevel="1" classfield_id="YQyYJnd4K3cI" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="2" parent_id="YQyYJnd4K3cI" writeOutText="false" indentLevel="1" classfield_id="YQyYJnd4K3cI" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="3" parent_id="YQyYJnd4K3cI" writeOutText="false" indentLevel="1" classfield_id="YQyYJnd4K3cI" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="4" parent_id="YQyYJnd4K3cI" writeOutText="false" indentLevel="1" classfield_id="YQyYJnd4K3cI" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="99" parent_id="CA4eXi7Ywm3J" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="CA4eXi7Ywm3J" writeOutText="false" indentLevel="1" text=" UMLObject ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="" accessType="0" parent_id="CA4eXi7Ywm3J" writeOutText="false" indentLevel="1" classfield_id="CA4eXi7Ywm3J" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="1" parent_id="CA4eXi7Ywm3J" writeOutText="false" indentLevel="1" classfield_id="CA4eXi7Ywm3J" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="2" parent_id="CA4eXi7Ywm3J" writeOutText="false" indentLevel="1" classfield_id="CA4eXi7Ywm3J" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="3" parent_id="CA4eXi7Ywm3J" writeOutText="false" indentLevel="1" classfield_id="CA4eXi7Ywm3J" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="4" parent_id="CA4eXi7Ywm3J" writeOutText="false" indentLevel="1" classfield_id="CA4eXi7Ywm3J" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="gagrSVXhWyp2" id="cppheadergagrSVXhWyp2" fileName="UMLView_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLView_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:19&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="75G7jzEHQyIY" id="cppheader75G7jzEHQyIY" fileName="UMLObject_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLObject_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:20&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="NSfmQxIJ7H4o" id="cppheaderNSfmQxIJ7H4o" fileName="const_UMLView_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        const_UMLView_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:20&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="YlO0XzWsjQmM" id="cppheaderYlO0XzWsjQmM" fileName="const_QColor_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        const_QColor_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:21&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="18ZEvL3pLhMY" id="cppheader18ZEvL3pLhMY" fileName="QDomDocument" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QDomDocument.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:21&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="ctbqRd7AbF66" id="cppheaderctbqRd7AbF66" fileName="QDomDocument_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QDomDocument_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:21&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="67URooyOfZF7" id="cppheader67URooyOfZF7" fileName="QDomElement" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QDomElement.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:21&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="CKFlXJq4UrkK" id="cppheaderCKFlXJq4UrkK" fileName="QDomElement_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QDomElement_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:21&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="Jr6MgSkHK0xA" id="cppheaderJr6MgSkHK0xA" fileName="UMLWidgetController" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLWidgetController.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:22&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="TUkJYGg9wPgO" id="cppheaderTUkJYGg9wPgO" fileName="UMLDoc" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLDoc.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:22&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="zdlI8EoP4sli" id="cppheaderzdlI8EoP4sli" fileName="ListPopupMenu" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        ListPopupMenu.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:22&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="JTzdUulvMWEt" id="cppheaderJTzdUulvMWEt" fileName="IDChangeLog" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        IDChangeLog.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:22&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="kv2gIi2FLnXS" id="cppheaderkv2gIi2FLnXS" fileName="QPainter" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QPainter.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:22&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="0Jr4CbkT2j4U" id="cppheader0Jr4CbkT2j4U" fileName="QMoveEvent" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QMoveEvent.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:23&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="cpPyLcr5Vrjn" id="cppheadercpPyLcr5Vrjn" fileName="QFontMetrics" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QFontMetrics.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:23&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="Xm2rXXJVq8Z0" id="cppheaderXm2rXXJVq8Z0" fileName="UMLWidget" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef UMLWIDGET_H&amp;#010;#define UMLWIDGET_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;widgetbase.h&quot;&amp;#010;#include &quot;q3canvasrectangle.h&quot;&amp;#010;#include &quot;idtype.h&quot;&amp;#010;#include &quot;uint.h&quot;&amp;#010;#include &quot;qcolor.h&quot;&amp;#010;#include &quot;qfont.h&quot;&amp;#010;#include &quot;qstring.h&quot;&amp;#010;#include &quot;widget_type.h&quot;&amp;#010;#include &quot;qsize.h&quot;&amp;#010;#include &quot;fonttype.h&quot;&amp;#010;#include &quot;qfontmetrics.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="Xm2rXXJVq8Z0" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class UMLWidget&amp;#010;This is the base class for nearly all graphical widgets.&amp;#010;&amp;#010;@short The base class for graphical UML objects.&amp;#010;@author  Paul Hensgen &lt;phensgen@techie.com>&amp;#010;Bugs and comments to umbrello-devel@kde.org or http://bugs.kde.org" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="UMLWidget ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation tag="operation_lsqCQc8vIYt7" parent_id="lsqCQc8vIYt7" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_atN2EjNFsOn3" parent_id="atN2EjNFsOn3" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_fG2fgnfReTb4" parent_id="fG2fgnfReTb4" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_iuUNhJHGTNh1" parent_id="iuUNhJHGTNh1" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_6bjZT8F90kUi" parent_id="6bjZT8F90kUi" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_qs3UCg6GGnph" parent_id="qs3UCg6GGnph" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_BlYtUH8I79kJ" parent_id="BlYtUH8I79kJ" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_qrY6eNlaQbUD" parent_id="qrY6eNlaQbUD" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock tag="tblock_0" parent_id="XH0hZY7fykf7" indentLevel="1" text=" bool m_bUseFillColour;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_2" parent_id="c7MhbhRihy4I" indentLevel="1" text=" bool m_bUsesDiagramFillColour;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_5" parent_id="jSZk5uFc9FJi" indentLevel="1" text=" bool m_bUsesDiagramUseFillColour;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_8" parent_id="mOLk8ysi5CNf" indentLevel="1" text=" QColor m_FillColour;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_11" parent_id="tpNanPqUrPCu" indentLevel="1" text=" AssociationWidgetList m_Assocs;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_14" parent_id="HRWPen5Q9RBH" indentLevel="1" text=" QString m_Text;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_17" parent_id="P1yTDL64ATcv" indentLevel="1" text=" QFont m_Font;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_20" parent_id="qSNhqZZ705Ud" indentLevel="1" text=" bool m_bIsInstance;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_23" parent_id="qa1zzCGMBEnO" indentLevel="1" text=" QString m_instanceName;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_26" parent_id="atSiK4cAXzrN" indentLevel="1" text=" bool m_bShowStereotype;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_29" parent_id="XOSXTv8JVAGS" indentLevel="1" text=" bool m_bSelected;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_32" parent_id="KXmWjauHTLyo" indentLevel="1" text=" bool m_bStartMove;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_35" parent_id="NYysXoF2Cgae" indentLevel="1" text=" int m_nPosX;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_38" parent_id="bgv4qCUBhGfO" indentLevel="1" text=" int m_origZ;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_41" parent_id="qZgIsc6GA28f" indentLevel="1" text=" ListPopupMenu* m_pMenu;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_44" parent_id="g7uLNZkC6OUz" indentLevel="1" text=" UMLDoc* m_pDoc;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_47" parent_id="0YDAYLnLfVKf" indentLevel="1" text=" bool m_bResizable;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_50" parent_id="s7UyVyvVU8d2" indentLevel="1" text=" QFontMetrics* m_pFontMetrics;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_53" parent_id="SRN7ufneY1Kw" indentLevel="1" text=" bool m_bActivated;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_56" parent_id="rjyn0L5qTZmw" indentLevel="1" text=" bool m_bIgnoreSnapToGrid;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_59" parent_id="ViQzo30GSNON" indentLevel="1" text=" bool m_bIgnoreSnapComponentSizeToGrid;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_62" parent_id="191ZAJT10Rn0" indentLevel="1" text=" UMLWidgetController* m_widgetController;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="XH0hZY7fykf7" writeOutText="false" indentLevel="1" classfield_id="XH0hZY7fykf7" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="XH0hZY7fykf7" writeOutText="false" indentLevel="1" classfield_id="XH0hZY7fykf7" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_3" accessType="0" parent_id="c7MhbhRihy4I" writeOutText="false" indentLevel="1" classfield_id="c7MhbhRihy4I" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_4" accessType="1" parent_id="c7MhbhRihy4I" writeOutText="false" indentLevel="1" classfield_id="c7MhbhRihy4I" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_6" accessType="0" parent_id="jSZk5uFc9FJi" writeOutText="false" indentLevel="1" classfield_id="jSZk5uFc9FJi" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_7" accessType="1" parent_id="jSZk5uFc9FJi" writeOutText="false" indentLevel="1" classfield_id="jSZk5uFc9FJi" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_9" accessType="0" parent_id="mOLk8ysi5CNf" writeOutText="false" indentLevel="1" classfield_id="mOLk8ysi5CNf" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_10" accessType="1" parent_id="mOLk8ysi5CNf" writeOutText="false" indentLevel="1" classfield_id="mOLk8ysi5CNf" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_12" accessType="0" parent_id="tpNanPqUrPCu" writeOutText="false" indentLevel="1" classfield_id="tpNanPqUrPCu" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_13" accessType="1" parent_id="tpNanPqUrPCu" writeOutText="false" indentLevel="1" classfield_id="tpNanPqUrPCu" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_15" accessType="0" parent_id="HRWPen5Q9RBH" writeOutText="false" indentLevel="1" classfield_id="HRWPen5Q9RBH" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_16" accessType="1" parent_id="HRWPen5Q9RBH" writeOutText="false" indentLevel="1" classfield_id="HRWPen5Q9RBH" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_18" accessType="0" parent_id="P1yTDL64ATcv" writeOutText="false" indentLevel="1" classfield_id="P1yTDL64ATcv" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_19" accessType="1" parent_id="P1yTDL64ATcv" writeOutText="false" indentLevel="1" classfield_id="P1yTDL64ATcv" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_21" accessType="0" parent_id="qSNhqZZ705Ud" writeOutText="false" indentLevel="1" classfield_id="qSNhqZZ705Ud" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_22" accessType="1" parent_id="qSNhqZZ705Ud" writeOutText="false" indentLevel="1" classfield_id="qSNhqZZ705Ud" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_24" accessType="0" parent_id="qa1zzCGMBEnO" writeOutText="false" indentLevel="1" classfield_id="qa1zzCGMBEnO" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_25" accessType="1" parent_id="qa1zzCGMBEnO" writeOutText="false" indentLevel="1" classfield_id="qa1zzCGMBEnO" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_27" accessType="0" parent_id="atSiK4cAXzrN" writeOutText="false" indentLevel="1" classfield_id="atSiK4cAXzrN" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_28" accessType="1" parent_id="atSiK4cAXzrN" writeOutText="false" indentLevel="1" classfield_id="atSiK4cAXzrN" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_30" accessType="0" parent_id="XOSXTv8JVAGS" writeOutText="false" indentLevel="1" classfield_id="XOSXTv8JVAGS" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_31" accessType="1" parent_id="XOSXTv8JVAGS" writeOutText="false" indentLevel="1" classfield_id="XOSXTv8JVAGS" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_33" accessType="0" parent_id="KXmWjauHTLyo" writeOutText="false" indentLevel="1" classfield_id="KXmWjauHTLyo" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_34" accessType="1" parent_id="KXmWjauHTLyo" writeOutText="false" indentLevel="1" classfield_id="KXmWjauHTLyo" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_36" accessType="0" parent_id="NYysXoF2Cgae" writeOutText="false" indentLevel="1" classfield_id="NYysXoF2Cgae" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_37" accessType="1" parent_id="NYysXoF2Cgae" writeOutText="false" indentLevel="1" classfield_id="NYysXoF2Cgae" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_39" accessType="0" parent_id="bgv4qCUBhGfO" writeOutText="false" indentLevel="1" classfield_id="bgv4qCUBhGfO" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_40" accessType="1" parent_id="bgv4qCUBhGfO" writeOutText="false" indentLevel="1" classfield_id="bgv4qCUBhGfO" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_42" accessType="0" parent_id="qZgIsc6GA28f" writeOutText="false" indentLevel="1" classfield_id="qZgIsc6GA28f" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_43" accessType="1" parent_id="qZgIsc6GA28f" writeOutText="false" indentLevel="1" classfield_id="qZgIsc6GA28f" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_45" accessType="0" parent_id="g7uLNZkC6OUz" writeOutText="false" indentLevel="1" classfield_id="g7uLNZkC6OUz" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_46" accessType="1" parent_id="g7uLNZkC6OUz" writeOutText="false" indentLevel="1" classfield_id="g7uLNZkC6OUz" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_48" accessType="0" parent_id="0YDAYLnLfVKf" writeOutText="false" indentLevel="1" classfield_id="0YDAYLnLfVKf" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_49" accessType="1" parent_id="0YDAYLnLfVKf" writeOutText="false" indentLevel="1" classfield_id="0YDAYLnLfVKf" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_51" accessType="0" parent_id="s7UyVyvVU8d2" writeOutText="false" indentLevel="1" classfield_id="s7UyVyvVU8d2" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_52" accessType="1" parent_id="s7UyVyvVU8d2" writeOutText="false" indentLevel="1" classfield_id="s7UyVyvVU8d2" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_54" accessType="0" parent_id="SRN7ufneY1Kw" writeOutText="false" indentLevel="1" classfield_id="SRN7ufneY1Kw" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_55" accessType="1" parent_id="SRN7ufneY1Kw" writeOutText="false" indentLevel="1" classfield_id="SRN7ufneY1Kw" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_57" accessType="0" parent_id="rjyn0L5qTZmw" writeOutText="false" indentLevel="1" classfield_id="rjyn0L5qTZmw" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_58" accessType="1" parent_id="rjyn0L5qTZmw" writeOutText="false" indentLevel="1" classfield_id="rjyn0L5qTZmw" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_60" accessType="0" parent_id="ViQzo30GSNON" writeOutText="false" indentLevel="1" classfield_id="ViQzo30GSNON" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_61" accessType="1" parent_id="ViQzo30GSNON" writeOutText="false" indentLevel="1" classfield_id="ViQzo30GSNON" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_63" accessType="0" parent_id="191ZAJT10Rn0" writeOutText="false" indentLevel="1" classfield_id="191ZAJT10Rn0" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_64" accessType="1" parent_id="191ZAJT10Rn0" writeOutText="false" indentLevel="1" classfield_id="191ZAJT10Rn0" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation tag="operation_sT1IQSpqUY56" parent_id="sT1IQSpqUY56" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_dJN086d7n0v9" parent_id="dJN086d7n0v9" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_ddbqLtu1ARkl" parent_id="ddbqLtu1ARkl" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_jHl00VDd7mRS" parent_id="jHl00VDd7mRS" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_pZ1k4fplBWP5" parent_id="pZ1k4fplBWP5" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_AYmMBoJzLKjP" parent_id="AYmMBoJzLKjP" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param fontType &amp;#010;@param painter " />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_HvoaGWzD27M3" parent_id="HvoaGWzD27M3" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_OOASOldZ52Pp" parent_id="OOASOldZ52Pp" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param fontType &amp;#010;@param fm " />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_1GP4GouHujCU" parent_id="1GP4GouHujCU" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param font &amp;#010;@param fontType " />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_82YMblQG1fLX" parent_id="82YMblQG1fLX" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_t6zyeH7n1deT" parent_id="t6zyeH7n1deT" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeoperation tag="operation_o3GhKGZP85aK" parent_id="o3GhKGZP85aK" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_7U23SiJhuy3E" parent_id="7U23SiJhuy3E" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_w3iG3s0QJtfw" parent_id="w3iG3s0QJtfw" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_VxcaHN9HPLCP" parent_id="VxcaHN9HPLCP" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation tag="operation_o9SBVcb4wBZr" parent_id="o9SBVcb4wBZr" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_hvWeEQVY9roJ" parent_id="hvWeEQVY9roJ" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_vnc2cQMoecWi" parent_id="vnc2cQMoecWi" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_ld9yur77ay9m" parent_id="ld9yur77ay9m" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_dDldq7YcjhYb" parent_id="dDldq7YcjhYb" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_m5zKqluTwf4l" parent_id="m5zKqluTwf4l" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_UorWXSSKWRcM" parent_id="UorWXSSKWRcM" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_7Mcg3XsVJh1q" parent_id="7Mcg3XsVJh1q" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_cuG36ZnBvNry" parent_id="cuG36ZnBvNry" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_o7l1spMUjaVn" parent_id="o7l1spMUjaVn" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_vgNokUWYbHYT" parent_id="vgNokUWYbHYT" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_Kfsn7Xe2Bzov" parent_id="Kfsn7Xe2Bzov" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_pyxXUasmGiYL" parent_id="pyxXUasmGiYL" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_kChcc6xS4tzX" parent_id="kChcc6xS4tzX" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_ZTm3ET5wfmZG" parent_id="ZTm3ET5wfmZG" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_WZgWyqhWHTXT" parent_id="WZgWyqhWHTXT" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_5WfVBCThj7Dg" parent_id="5WfVBCThj7Dg" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_zYnS0rH4LuZW" parent_id="zYnS0rH4LuZW" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param _select " />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_LrncsWDs4yI3" parent_id="LrncsWDs4yI3" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_DoiTSw1nmmNe" parent_id="DoiTSw1nmmNe" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_cCIxbhhdkyFa" parent_id="cCIxbhhdkyFa" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_BbjQajFHPhd1" parent_id="BbjQajFHPhd1" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_KpAuoN5VqSaz" parent_id="KpAuoN5VqSaz" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_GrgvBCGU2OMo" parent_id="GrgvBCGU2OMo" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_hJk1QPmfHRaQ" parent_id="hJk1QPmfHRaQ" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_d5u87OapfKo5" parent_id="d5u87OapfKo5" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_XgFBSni3saC0" parent_id="XgFBSni3saC0" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_e5kiLyzqfEz5" parent_id="e5kiLyzqfEz5" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_EPnLkTSMYC4t" parent_id="EPnLkTSMYC4t" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_GtlEUVHgs32c" parent_id="GtlEUVHgs32c" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_GVRaUTCiMvxp" parent_id="GVRaUTCiMvxp" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_qePqE12TUS3w" parent_id="qePqE12TUS3w" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_5jj3ZVeO73CK" parent_id="5jj3ZVeO73CK" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_gudSSRSVBCXi" parent_id="gudSSRSVBCXi" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_eFheLUk1MMTo" parent_id="eFheLUk1MMTo" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_bMkxiBmV34S7" parent_id="bMkxiBmV34S7" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_ZTDxZogAAO6q" parent_id="ZTDxZogAAO6q" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_nVGbtGmShxPG" parent_id="nVGbtGmShxPG" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_iwGPrddbh2W8" parent_id="iwGPrddbh2W8" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_tFeaF8glNmXh" parent_id="tFeaF8glNmXh" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_EuLQ9uR095aP" parent_id="EuLQ9uR095aP" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_dT8kXg9jxFGy" parent_id="dT8kXg9jxFGy" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_uqQsXRx8u3sP" parent_id="uqQsXRx8u3sP" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_ykZMW08OpWGM" parent_id="ykZMW08OpWGM" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param usesDiagramFillColour " />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_jHeZGoxCXWY1" parent_id="jHeZGoxCXWY1" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param usesDiagramUseFillColour " />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_QBzjXcHErvo5" parent_id="QBzjXcHErvo5" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param isInstance " />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_Heg5ic79n7qL" parent_id="Heg5ic79n7qL" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_b841k5Z1hF7Q" parent_id="b841k5Z1hF7Q" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param instanceName " />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_o69vw2FY8HXt" parent_id="o69vw2FY8HXt" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_KgSm9yCx5Jqz" parent_id="KgSm9yCx5Jqz" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_D5VN2ErKuJ41" parent_id="D5VN2ErKuJ41" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_qglxuQK6WoRW" parent_id="qglxuQK6WoRW" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_2GruavvoCp7l" parent_id="2GruavvoCp7l" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_gHbA53g5JXzr" parent_id="gHbA53g5JXzr" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_u8LXNI31ae9d" parent_id="u8LXNI31ae9d" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_AiVGg9abFv6a" parent_id="AiVGg9abFv6a" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_BYtQR01f9bPv" parent_id="BYtQR01f9bPv" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_87aHizD0kYoa" parent_id="87aHizD0kYoa" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_Qtf9PUjcxtgj" parent_id="Qtf9PUjcxtgj" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_BlfACLpdETmd" parent_id="BlfACLpdETmd" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_xTFsKucHyNkU" parent_id="xTFsKucHyNkU" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_2Ze0uOSxevsB" parent_id="2Ze0uOSxevsB" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_E0tKikZoRT5Y" parent_id="E0tKikZoRT5Y" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_yZEN1Jv6JWFP" parent_id="yZEN1Jv6JWFP" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_jzPRDPt9w5Ux" parent_id="jzPRDPt9w5Ux" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_y8HuDlsa8uG2" parent_id="y8HuDlsa8uG2" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param qDoc &amp;#010;@param qElement " />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_TFHb7VeEqbLp" parent_id="TFHb7VeEqbLp" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param qElement " />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_S2lGd43FL51z" parent_id="S2lGd43FL51z" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //UMLWIDGET_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLWidget.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:23&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield role_id="1" listClassName="" field_type="99" parent_id="hJTk1XEbNcXg" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="hJTk1XEbNcXg" writeOutText="false" indentLevel="1" text=" WidgetBase ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="hJTk1XEbNcXg" writeOutText="false" indentLevel="1" classfield_id="hJTk1XEbNcXg" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="hJTk1XEbNcXg" writeOutText="false" indentLevel="1" classfield_id="hJTk1XEbNcXg" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="hJTk1XEbNcXg" writeOutText="false" indentLevel="1" classfield_id="hJTk1XEbNcXg" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="hJTk1XEbNcXg" writeOutText="false" indentLevel="1" classfield_id="hJTk1XEbNcXg" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="hJTk1XEbNcXg" writeOutText="false" indentLevel="1" classfield_id="hJTk1XEbNcXg" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="99" parent_id="6fUJ932AvJ2s" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="6fUJ932AvJ2s" writeOutText="false" indentLevel="1" text=" Q3CanvasRectangle ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="6fUJ932AvJ2s" writeOutText="false" indentLevel="1" classfield_id="6fUJ932AvJ2s" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="6fUJ932AvJ2s" writeOutText="false" indentLevel="1" classfield_id="6fUJ932AvJ2s" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="6fUJ932AvJ2s" writeOutText="false" indentLevel="1" classfield_id="6fUJ932AvJ2s" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="6fUJ932AvJ2s" writeOutText="false" indentLevel="1" classfield_id="6fUJ932AvJ2s" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="6fUJ932AvJ2s" writeOutText="false" indentLevel="1" classfield_id="6fUJ932AvJ2s" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="XH0hZY7fykf7" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="tblock_0" parent_id="XH0hZY7fykf7" indentLevel="1" text=" bool m_bUseFillColour;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="XH0hZY7fykf7" writeOutText="false" indentLevel="1" classfield_id="XH0hZY7fykf7" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="XH0hZY7fykf7" writeOutText="false" indentLevel="1" classfield_id="XH0hZY7fykf7" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="c7MhbhRihy4I" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_2" parent_id="c7MhbhRihy4I" indentLevel="1" text=" bool m_bUsesDiagramFillColour;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_3" accessType="0" parent_id="c7MhbhRihy4I" writeOutText="false" indentLevel="1" classfield_id="c7MhbhRihy4I" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_4" accessType="1" parent_id="c7MhbhRihy4I" writeOutText="false" indentLevel="1" classfield_id="c7MhbhRihy4I" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="jSZk5uFc9FJi" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_5" parent_id="jSZk5uFc9FJi" indentLevel="1" text=" bool m_bUsesDiagramUseFillColour;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_6" accessType="0" parent_id="jSZk5uFc9FJi" writeOutText="false" indentLevel="1" classfield_id="jSZk5uFc9FJi" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_7" accessType="1" parent_id="jSZk5uFc9FJi" writeOutText="false" indentLevel="1" classfield_id="jSZk5uFc9FJi" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="mOLk8ysi5CNf" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_8" parent_id="mOLk8ysi5CNf" indentLevel="1" text=" QColor m_FillColour;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_9" accessType="0" parent_id="mOLk8ysi5CNf" writeOutText="false" indentLevel="1" classfield_id="mOLk8ysi5CNf" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_10" accessType="1" parent_id="mOLk8ysi5CNf" writeOutText="false" indentLevel="1" classfield_id="mOLk8ysi5CNf" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="tpNanPqUrPCu" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_11" parent_id="tpNanPqUrPCu" indentLevel="1" text=" AssociationWidgetList m_Assocs;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_12" accessType="0" parent_id="tpNanPqUrPCu" writeOutText="false" indentLevel="1" classfield_id="tpNanPqUrPCu" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_13" accessType="1" parent_id="tpNanPqUrPCu" writeOutText="false" indentLevel="1" classfield_id="tpNanPqUrPCu" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="HRWPen5Q9RBH" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_14" parent_id="HRWPen5Q9RBH" indentLevel="1" text=" QString m_Text;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_15" accessType="0" parent_id="HRWPen5Q9RBH" writeOutText="false" indentLevel="1" classfield_id="HRWPen5Q9RBH" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_16" accessType="1" parent_id="HRWPen5Q9RBH" writeOutText="false" indentLevel="1" classfield_id="HRWPen5Q9RBH" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="P1yTDL64ATcv" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_17" parent_id="P1yTDL64ATcv" indentLevel="1" text=" QFont m_Font;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_18" accessType="0" parent_id="P1yTDL64ATcv" writeOutText="false" indentLevel="1" classfield_id="P1yTDL64ATcv" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_19" accessType="1" parent_id="P1yTDL64ATcv" writeOutText="false" indentLevel="1" classfield_id="P1yTDL64ATcv" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="qSNhqZZ705Ud" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_20" parent_id="qSNhqZZ705Ud" indentLevel="1" text=" bool m_bIsInstance;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_21" accessType="0" parent_id="qSNhqZZ705Ud" writeOutText="false" indentLevel="1" classfield_id="qSNhqZZ705Ud" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_22" accessType="1" parent_id="qSNhqZZ705Ud" writeOutText="false" indentLevel="1" classfield_id="qSNhqZZ705Ud" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="qa1zzCGMBEnO" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_23" parent_id="qa1zzCGMBEnO" indentLevel="1" text=" QString m_instanceName;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_24" accessType="0" parent_id="qa1zzCGMBEnO" writeOutText="false" indentLevel="1" classfield_id="qa1zzCGMBEnO" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_25" accessType="1" parent_id="qa1zzCGMBEnO" writeOutText="false" indentLevel="1" classfield_id="qa1zzCGMBEnO" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="atSiK4cAXzrN" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_26" parent_id="atSiK4cAXzrN" indentLevel="1" text=" bool m_bShowStereotype;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_27" accessType="0" parent_id="atSiK4cAXzrN" writeOutText="false" indentLevel="1" classfield_id="atSiK4cAXzrN" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_28" accessType="1" parent_id="atSiK4cAXzrN" writeOutText="false" indentLevel="1" classfield_id="atSiK4cAXzrN" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="XOSXTv8JVAGS" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_29" parent_id="XOSXTv8JVAGS" indentLevel="1" text=" bool m_bSelected;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_30" accessType="0" parent_id="XOSXTv8JVAGS" writeOutText="false" indentLevel="1" classfield_id="XOSXTv8JVAGS" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_31" accessType="1" parent_id="XOSXTv8JVAGS" writeOutText="false" indentLevel="1" classfield_id="XOSXTv8JVAGS" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="KXmWjauHTLyo" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_32" parent_id="KXmWjauHTLyo" indentLevel="1" text=" bool m_bStartMove;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_33" accessType="0" parent_id="KXmWjauHTLyo" writeOutText="false" indentLevel="1" classfield_id="KXmWjauHTLyo" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_34" accessType="1" parent_id="KXmWjauHTLyo" writeOutText="false" indentLevel="1" classfield_id="KXmWjauHTLyo" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="NYysXoF2Cgae" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_35" parent_id="NYysXoF2Cgae" indentLevel="1" text=" int m_nPosX;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_36" accessType="0" parent_id="NYysXoF2Cgae" writeOutText="false" indentLevel="1" classfield_id="NYysXoF2Cgae" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_37" accessType="1" parent_id="NYysXoF2Cgae" writeOutText="false" indentLevel="1" classfield_id="NYysXoF2Cgae" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="bgv4qCUBhGfO" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_38" parent_id="bgv4qCUBhGfO" indentLevel="1" text=" int m_origZ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_39" accessType="0" parent_id="bgv4qCUBhGfO" writeOutText="false" indentLevel="1" classfield_id="bgv4qCUBhGfO" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_40" accessType="1" parent_id="bgv4qCUBhGfO" writeOutText="false" indentLevel="1" classfield_id="bgv4qCUBhGfO" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="qZgIsc6GA28f" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_41" parent_id="qZgIsc6GA28f" indentLevel="1" text=" ListPopupMenu* m_pMenu;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_42" accessType="0" parent_id="qZgIsc6GA28f" writeOutText="false" indentLevel="1" classfield_id="qZgIsc6GA28f" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_43" accessType="1" parent_id="qZgIsc6GA28f" writeOutText="false" indentLevel="1" classfield_id="qZgIsc6GA28f" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="g7uLNZkC6OUz" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_44" parent_id="g7uLNZkC6OUz" indentLevel="1" text=" UMLDoc* m_pDoc;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_45" accessType="0" parent_id="g7uLNZkC6OUz" writeOutText="false" indentLevel="1" classfield_id="g7uLNZkC6OUz" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_46" accessType="1" parent_id="g7uLNZkC6OUz" writeOutText="false" indentLevel="1" classfield_id="g7uLNZkC6OUz" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="0YDAYLnLfVKf" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_47" parent_id="0YDAYLnLfVKf" indentLevel="1" text=" bool m_bResizable;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_48" accessType="0" parent_id="0YDAYLnLfVKf" writeOutText="false" indentLevel="1" classfield_id="0YDAYLnLfVKf" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_49" accessType="1" parent_id="0YDAYLnLfVKf" writeOutText="false" indentLevel="1" classfield_id="0YDAYLnLfVKf" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="s7UyVyvVU8d2" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_50" parent_id="s7UyVyvVU8d2" indentLevel="1" text=" QFontMetrics* m_pFontMetrics;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_51" accessType="0" parent_id="s7UyVyvVU8d2" writeOutText="false" indentLevel="1" classfield_id="s7UyVyvVU8d2" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_52" accessType="1" parent_id="s7UyVyvVU8d2" writeOutText="false" indentLevel="1" classfield_id="s7UyVyvVU8d2" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="SRN7ufneY1Kw" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_53" parent_id="SRN7ufneY1Kw" indentLevel="1" text=" bool m_bActivated;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_54" accessType="0" parent_id="SRN7ufneY1Kw" writeOutText="false" indentLevel="1" classfield_id="SRN7ufneY1Kw" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_55" accessType="1" parent_id="SRN7ufneY1Kw" writeOutText="false" indentLevel="1" classfield_id="SRN7ufneY1Kw" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="rjyn0L5qTZmw" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_56" parent_id="rjyn0L5qTZmw" indentLevel="1" text=" bool m_bIgnoreSnapToGrid;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_57" accessType="0" parent_id="rjyn0L5qTZmw" writeOutText="false" indentLevel="1" classfield_id="rjyn0L5qTZmw" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_58" accessType="1" parent_id="rjyn0L5qTZmw" writeOutText="false" indentLevel="1" classfield_id="rjyn0L5qTZmw" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="ViQzo30GSNON" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_59" parent_id="ViQzo30GSNON" indentLevel="1" text=" bool m_bIgnoreSnapComponentSizeToGrid;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_60" accessType="0" parent_id="ViQzo30GSNON" writeOutText="false" indentLevel="1" classfield_id="ViQzo30GSNON" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_61" accessType="1" parent_id="ViQzo30GSNON" writeOutText="false" indentLevel="1" classfield_id="ViQzo30GSNON" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="191ZAJT10Rn0" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_62" parent_id="191ZAJT10Rn0" indentLevel="1" text=" UMLWidgetController* m_widgetController;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_63" accessType="0" parent_id="191ZAJT10Rn0" writeOutText="false" indentLevel="1" classfield_id="191ZAJT10Rn0" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_64" accessType="1" parent_id="191ZAJT10Rn0" writeOutText="false" indentLevel="1" classfield_id="191ZAJT10Rn0" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="rcdCEBsSYc9k" id="cppheaderrcdCEBsSYc9k" fileName="Q3CanvasRectangle" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef Q3CANVASRECTANGLE_H&amp;#010;#define Q3CANVASRECTANGLE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="rcdCEBsSYc9k" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" text="Class Q3CanvasRectangle&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="Q3CanvasRectangle ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //Q3CANVASRECTANGLE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        Q3CanvasRectangle.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:23&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield role_id="0" listClassName="" field_type="99" parent_id="6fUJ932AvJ2s" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="6fUJ932AvJ2s" writeOutText="false" indentLevel="1" text=" UMLWidget ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="" accessType="0" parent_id="6fUJ932AvJ2s" writeOutText="false" indentLevel="1" classfield_id="6fUJ932AvJ2s" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="1" parent_id="6fUJ932AvJ2s" writeOutText="false" indentLevel="1" classfield_id="6fUJ932AvJ2s" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="2" parent_id="6fUJ932AvJ2s" writeOutText="false" indentLevel="1" classfield_id="6fUJ932AvJ2s" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="3" parent_id="6fUJ932AvJ2s" writeOutText="false" indentLevel="1" classfield_id="6fUJ932AvJ2s" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="4" parent_id="6fUJ932AvJ2s" writeOutText="false" indentLevel="1" classfield_id="6fUJ932AvJ2s" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="FEfNJDfJy0pc" id="cppheaderFEfNJDfJy0pc" fileName="UMLWidgetController_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLWidgetController_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:23&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="bJaVxv3ryl7z" id="cppheaderbJaVxv3ryl7z" fileName="const_UMLWidget_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        const_UMLWidget_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:24&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="MlMHCMSzWsA1" id="cppheaderMlMHCMSzWsA1" fileName="UMLWidget_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLWidget_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:24&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="3DFEv8HDDIiB" id="cppheader3DFEv8HDDIiB" fileName="QMouseEvent" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QMouseEvent.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:24&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="Djq4E868vjAX" id="cppheaderDjq4E868vjAX" fileName="QMouseEvent_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QMouseEvent_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:24&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="IYULWnMIKRRm" id="cppheaderIYULWnMIKRRm" fileName="IDChangeLog_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        IDChangeLog_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:25&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="YZbub5iXYIGl" id="cppheaderYZbub5iXYIGl" fileName="QPoint" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QPoint.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:25&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="EdGiS5i5Fz0r" id="cppheaderEdGiS5i5Fz0r" fileName="const_QPoint_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        const_QPoint_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:25&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="PaBf5DVgvqku" id="cppheaderPaBf5DVgvqku" fileName="QPainter_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QPainter_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:25&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="VF5oKdz9stpb" id="cppheaderVF5oKdz9stpb" fileName="AssociationWidget_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        AssociationWidget_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:26&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="CH8Z3fFOA3cZ" id="cppheaderCH8Z3fFOA3cZ" fileName="AssociationWidgetList_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        AssociationWidgetList_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:26&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="E9cmojNRX4Mr" id="cppheaderE9cmojNRX4Mr" fileName="ListPopupMenu_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        ListPopupMenu_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:27&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="50d88YYA5C8x" id="cppheader50d88YYA5C8x" fileName="QPainter_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QPainter_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:27&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="OP2guF5w0f4t" id="cppheaderOP2guF5w0f4t" fileName="QMoveEvent_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QMoveEvent_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:28&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="c8JyELv7Nrlc" id="cppheaderc8JyELv7Nrlc" fileName="int_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        int_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:28&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="fLSokCZ5xXd4" id="cppheaderfLSokCZ5xXd4" fileName="QSize" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QSize.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:28&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Xm2rXXJVq8Z0" fileExt=".h" parent_class="eoUlavDDEd1y" id="cppheadereoUlavDDEd1y" fileName="FontType" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        FontType.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:29&amp;#010;The original location of this file is UMLWidget&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="CJPsm1i1vUbB" id="cppheaderCJPsm1i1vUbB" fileName="QFontMetrics_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QFontMetrics_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:29&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="7F26fejoFbC4" id="cppheader7F26fejoFbC4" fileName="QFont_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QFont_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:29&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="oMiz0GbbwUdl" id="cppheaderoMiz0GbbwUdl" fileName="UMLDoc_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLDoc_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:30&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="ltEgNrP4wJNK" id="cppheaderltEgNrP4wJNK" fileName="QFontMetrics_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QFontMetrics_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:30&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="6hxMGqTohpou" id="cppheader6hxMGqTohpou" fileName="QAction" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QAction.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:30&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="YC7RYuSE9Stn" id="cppheaderYC7RYuSE9Stn" fileName="QAction_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QAction_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:30&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="BXYb60nz4mvi" id="cppheaderBXYb60nz4mvi" fileName="AlignToolBar" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        AlignToolBar.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:32&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="23T1g7UXrEXj" id="cppheader23T1g7UXrEXj" fileName="CodeDocument" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        CodeDocument.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:32&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="jmP4cB2lgYKm" id="cppheaderjmP4cB2lgYKm" fileName="CodeGenerator" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        CodeGenerator.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:32&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="Y7mcsfIsijtN" id="cppheaderY7mcsfIsijtN" fileName="CodeGenPolicyExt" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        CodeGenPolicyExt.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:32&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="qNugaPNJBnNl" id="cppheaderqNugaPNJBnNl" fileName="DocWindow" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        DocWindow.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:32&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="wOWdwrNVw75o" id="cppheaderwOWdwrNVw75o" fileName="UMLClassifier" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef UMLCLASSIFIER_H&amp;#010;#define UMLCLASSIFIER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;umlpackage.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="wOWdwrNVw75o" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class UMLClassifier&amp;#010;This class defines the non-graphical information required for a&amp;#010;UML Classifier (ie a class or interface).&amp;#010;This class inherits from @ref UMLPackage which allows classifiers&amp;#010;to also act as namespaces, i.e. it allows classifiers to nest.&amp;#010;&amp;#010;NOTE: There is a unit test available for this class.&amp;#010;      Please, use and adapt it when necessary.&amp;#010;&amp;#010;@short Information for a non-graphical Concept/Class.&amp;#010;@author Paul Hensgen &lt;phensgen@techie.com>&amp;#010;Bugs and comments to umbrello-devel@kde.org or http://bugs.kde.org" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="UMLClassifier ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //UMLCLASSIFIER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLClassifier.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:54&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield role_id="1" listClassName="" field_type="99" parent_id="hHQtcEd7mnhT" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="hHQtcEd7mnhT" writeOutText="false" indentLevel="1" text=" UMLPackage ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="hHQtcEd7mnhT" writeOutText="false" indentLevel="1" classfield_id="hHQtcEd7mnhT" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="hHQtcEd7mnhT" writeOutText="false" indentLevel="1" classfield_id="hHQtcEd7mnhT" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="hHQtcEd7mnhT" writeOutText="false" indentLevel="1" classfield_id="hHQtcEd7mnhT" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="hHQtcEd7mnhT" writeOutText="false" indentLevel="1" classfield_id="hHQtcEd7mnhT" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="hHQtcEd7mnhT" writeOutText="false" indentLevel="1" classfield_id="hHQtcEd7mnhT" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="nMgV5ZqwviaV" id="cppheadernMgV5ZqwviaV" fileName="UMLListView" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLListView.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:33&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="7xmHi72fVXGS" id="cppheader7xmHi72fVXGS" fileName="WorkToolBar" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        WorkToolBar.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:33&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="MdvIly5WKjzQ" id="cppheaderMdvIly5WKjzQ" fileName="SettingsDlg" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        SettingsDlg.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:33&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="HqKCYsfepPvW" id="cppheaderHqKCYsfepPvW" fileName="UMLViewImageExporterAll" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLViewImageExporterAll.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:33&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="Wv90SPQm0L5j" id="cppheaderWv90SPQm0L5j" fileName="RefactoringAssistant" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef REFACTORINGASSISTANT_H&amp;#010;#define REFACTORINGASSISTANT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;qtreewidget.h&quot;&amp;#010;#include &quot;.h&quot;&amp;#010;#include &quot;qtreewidgetitem.h&quot;&amp;#010;#include &quot;umlobject.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="Wv90SPQm0L5j" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" text="Class RefactoringAssistant&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="RefactoringAssistant ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation tag="operation_tUqa7HzOopR1" parent_id="tUqa7HzOopR1" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_tvOqDgs3fBkH" parent_id="tvOqDgs3fBkH" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_3EsOvp9mHxLP" parent_id="3EsOvp9mHxLP" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_DKl17D008NrJ" parent_id="DKl17D008NrJ" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_3hNgs7xvJnJC" parent_id="3hNgs7xvJnJC" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_dQyuMJHXb3Yi" parent_id="dQyuMJHXb3Yi" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_EZhKwYexD1d3" parent_id="EZhKwYexD1d3" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_6bwNMDZzeVuy" parent_id="6bwNMDZzeVuy" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param obj " />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_hMyJrqHezk1A" parent_id="hMyJrqHezk1A" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param listItem " />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_et3be4lQAKk2" parent_id="et3be4lQAKk2" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param listItem " />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_yl4YZgxBZ0mD" parent_id="yl4YZgxBZ0mD" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param listItem " />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_M4bOnU8lDAHk" parent_id="M4bOnU8lDAHk" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param listItem " />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_SnXIIGtcKU05" parent_id="SnXIIGtcKU05" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param item &amp;#010;@param column " />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock tag="tblock_0" parent_id="wDZQJR1FBwnQ" indentLevel="1" text=" UMLClassifier* m_umlObject;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_2" parent_id="RlyfhYfR3Dnb" indentLevel="1" text=" UMLDoc* m_doc;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_5" parent_id="nJ5dckFWvmuF" indentLevel="1" text=" QMenu* m_menu;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_8" parent_id="VJGrXKIuvU1n" indentLevel="1" text=" QMap&lt; QTreeWidgetItem *, UMLObject * > m_umlObjectMap;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="wDZQJR1FBwnQ" writeOutText="false" indentLevel="1" classfield_id="wDZQJR1FBwnQ" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="wDZQJR1FBwnQ" writeOutText="false" indentLevel="1" classfield_id="wDZQJR1FBwnQ" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_3" accessType="0" parent_id="RlyfhYfR3Dnb" writeOutText="false" indentLevel="1" classfield_id="RlyfhYfR3Dnb" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_4" accessType="1" parent_id="RlyfhYfR3Dnb" writeOutText="false" indentLevel="1" classfield_id="RlyfhYfR3Dnb" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_6" accessType="0" parent_id="nJ5dckFWvmuF" writeOutText="false" indentLevel="1" classfield_id="nJ5dckFWvmuF" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_7" accessType="1" parent_id="nJ5dckFWvmuF" writeOutText="false" indentLevel="1" classfield_id="nJ5dckFWvmuF" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_9" accessType="0" parent_id="VJGrXKIuvU1n" writeOutText="false" indentLevel="1" classfield_id="VJGrXKIuvU1n" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_10" accessType="1" parent_id="VJGrXKIuvU1n" writeOutText="false" indentLevel="1" classfield_id="VJGrXKIuvU1n" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation tag="operation_ceVhqN4H710J" parent_id="ceVhqN4H710J" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param  " />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_Zg5OPA9wmEGf" parent_id="Zg5OPA9wmEGf" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param obj " />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_ziJjwXOE0UIB" parent_id="ziJjwXOE0UIB" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param obj " />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_Q5RNu0irizac" parent_id="Q5RNu0irizac" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param item &amp;#010;@param obj " />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_59xl6YNcSB4t" parent_id="59xl6YNcSB4t" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param classifier &amp;#010;@param parent &amp;#010;@param addSuper &amp;#010;@param addSub &amp;#010;@param recurse " />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_oCqkmJVsIo9d" parent_id="oCqkmJVsIo9d" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param event " />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_DsXGnuAXf6sz" parent_id="DsXGnuAXf6sz" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param event " />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_yDmDngYwT8sb" parent_id="yDmDngYwT8sb" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param item &amp;#010;@param obj " />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeoperation tag="operation_W13Ujpb5cFSp" parent_id="W13Ujpb5cFSp" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param doc &amp;#010;@param obj &amp;#010;@param parent &amp;#010;@param name " />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_zTFOPCU8hfRQ" parent_id="zTFOPCU8hfRQ" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation tag="operation_JZq5C6WNxHJ3" parent_id="JZq5C6WNxHJ3" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param obj " />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_ScY0kSgsiim3" parent_id="ScY0kSgsiim3" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param  " />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_c3TYVSJy5swn" parent_id="c3TYVSJy5swn" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param text &amp;#010;@param method &amp;#010;@param icon " />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //REFACTORINGASSISTANT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        RefactoringAssistant.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 22:17:58&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield role_id="1" listClassName="" field_type="99" parent_id="H7HBUneS0ho7" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="H7HBUneS0ho7" writeOutText="false" indentLevel="1" text=" QTreeWidget ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="H7HBUneS0ho7" writeOutText="false" indentLevel="1" classfield_id="H7HBUneS0ho7" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="H7HBUneS0ho7" writeOutText="false" indentLevel="1" classfield_id="H7HBUneS0ho7" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="H7HBUneS0ho7" writeOutText="false" indentLevel="1" classfield_id="H7HBUneS0ho7" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="H7HBUneS0ho7" writeOutText="false" indentLevel="1" classfield_id="H7HBUneS0ho7" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="H7HBUneS0ho7" writeOutText="false" indentLevel="1" classfield_id="H7HBUneS0ho7" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="wDZQJR1FBwnQ" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="tblock_0" parent_id="wDZQJR1FBwnQ" indentLevel="1" text=" UMLClassifier* m_umlObject;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="wDZQJR1FBwnQ" writeOutText="false" indentLevel="1" classfield_id="wDZQJR1FBwnQ" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="wDZQJR1FBwnQ" writeOutText="false" indentLevel="1" classfield_id="wDZQJR1FBwnQ" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="RlyfhYfR3Dnb" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_2" parent_id="RlyfhYfR3Dnb" indentLevel="1" text=" UMLDoc* m_doc;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_3" accessType="0" parent_id="RlyfhYfR3Dnb" writeOutText="false" indentLevel="1" classfield_id="RlyfhYfR3Dnb" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_4" accessType="1" parent_id="RlyfhYfR3Dnb" writeOutText="false" indentLevel="1" classfield_id="RlyfhYfR3Dnb" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="nJ5dckFWvmuF" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_5" parent_id="nJ5dckFWvmuF" indentLevel="1" text=" QMenu* m_menu;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_6" accessType="0" parent_id="nJ5dckFWvmuF" writeOutText="false" indentLevel="1" classfield_id="nJ5dckFWvmuF" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_7" accessType="1" parent_id="nJ5dckFWvmuF" writeOutText="false" indentLevel="1" classfield_id="nJ5dckFWvmuF" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="7667826" parent_id="hNGcAApJ4Igv" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="hNGcAApJ4Igv" writeOutText="false" indentLevel="1" text="  ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="hNGcAApJ4Igv" writeOutText="false" indentLevel="1" classfield_id="hNGcAApJ4Igv" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="hNGcAApJ4Igv" writeOutText="false" indentLevel="1" classfield_id="hNGcAApJ4Igv" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="hNGcAApJ4Igv" writeOutText="false" indentLevel="1" classfield_id="hNGcAApJ4Igv" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="hNGcAApJ4Igv" writeOutText="false" indentLevel="1" classfield_id="hNGcAApJ4Igv" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="hNGcAApJ4Igv" writeOutText="false" indentLevel="1" classfield_id="hNGcAApJ4Igv" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="7667826" parent_id="LhwQzaJU0Uy9" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="LhwQzaJU0Uy9" writeOutText="false" indentLevel="1" text=" QTreeWidgetItem ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="LhwQzaJU0Uy9" writeOutText="false" indentLevel="1" classfield_id="LhwQzaJU0Uy9" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="LhwQzaJU0Uy9" writeOutText="false" indentLevel="1" classfield_id="LhwQzaJU0Uy9" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="LhwQzaJU0Uy9" writeOutText="false" indentLevel="1" classfield_id="LhwQzaJU0Uy9" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="LhwQzaJU0Uy9" writeOutText="false" indentLevel="1" classfield_id="LhwQzaJU0Uy9" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="LhwQzaJU0Uy9" writeOutText="false" indentLevel="1" classfield_id="LhwQzaJU0Uy9" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="7667826" parent_id="EmjEGhNonv09" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="EmjEGhNonv09" writeOutText="false" indentLevel="1" text=" UMLObject ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="EmjEGhNonv09" writeOutText="false" indentLevel="1" classfield_id="EmjEGhNonv09" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="EmjEGhNonv09" writeOutText="false" indentLevel="1" classfield_id="EmjEGhNonv09" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="EmjEGhNonv09" writeOutText="false" indentLevel="1" classfield_id="EmjEGhNonv09" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="EmjEGhNonv09" writeOutText="false" indentLevel="1" classfield_id="EmjEGhNonv09" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="EmjEGhNonv09" writeOutText="false" indentLevel="1" classfield_id="EmjEGhNonv09" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="7667826" parent_id="lupZpngyME4T" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="lupZpngyME4T" writeOutText="false" indentLevel="1" text="  ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="lupZpngyME4T" writeOutText="false" indentLevel="1" classfield_id="lupZpngyME4T" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="lupZpngyME4T" writeOutText="false" indentLevel="1" classfield_id="lupZpngyME4T" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="lupZpngyME4T" writeOutText="false" indentLevel="1" classfield_id="lupZpngyME4T" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="lupZpngyME4T" writeOutText="false" indentLevel="1" classfield_id="lupZpngyME4T" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="lupZpngyME4T" writeOutText="false" indentLevel="1" classfield_id="lupZpngyME4T" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="VJGrXKIuvU1n" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_8" parent_id="VJGrXKIuvU1n" indentLevel="1" text=" QMap&lt; QTreeWidgetItem *, UMLObject * > m_umlObjectMap;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_9" accessType="0" parent_id="VJGrXKIuvU1n" writeOutText="false" indentLevel="1" classfield_id="VJGrXKIuvU1n" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_10" accessType="1" parent_id="VJGrXKIuvU1n" writeOutText="false" indentLevel="1" classfield_id="VJGrXKIuvU1n" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="H8FcrF283KIZ" id="cppheaderH8FcrF283KIZ" fileName="KPlayerPopupSliderAction" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        KPlayerPopupSliderAction.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:34&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="CxBzM6Vr0crS" id="cppheaderCxBzM6Vr0crS" fileName="XhtmlGenerator" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        XhtmlGenerator.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:34&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="1HF0aIhrQxTF" id="cppheader1HF0aIhrQxTF" fileName="KActionMenu" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        KActionMenu.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:34&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="ATOBlgixcuxw" id="cppheaderATOBlgixcuxw" fileName="KRecentFilesAction" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        KRecentFilesAction.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:34&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="yQny3cR2re0R" id="cppheaderyQny3cR2re0R" fileName="KToggleAction" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        KToggleAction.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:34&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="uiHIdkXlCtwx" id="cppheaderuiHIdkXlCtwx" fileName="KTabWidget" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        KTabWidget.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:35&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="YctAWo4VEqTF" id="cppheaderYctAWo4VEqTF" fileName="KMenu" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        KMenu.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:35&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="SsGKUGjOy0eZ" id="cppheaderSsGKUGjOy0eZ" fileName="KMenuBar" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        KMenuBar.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:35&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="jCKv3EqbrhjL" id="cppheaderjCKv3EqbrhjL" fileName="KUndoStack" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        KUndoStack.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:35&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="VoqieIx68BOd" id="cppheaderVoqieIx68BOd" fileName="QStackedWidget" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QStackedWidget.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:35&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="S8zO8eyroGkr" id="cppheaderS8zO8eyroGkr" fileName="QToolButton" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QToolButton.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:35&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="TZRKGAfkyUSc" id="cppheaderTZRKGAfkyUSc" fileName="QCustomEvent" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QCustomEvent.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:36&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="kNhsZ3Tz9TNI" id="cppheaderkNhsZ3Tz9TNI" fileName="QDockWidget" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QDockWidget.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:36&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="5J7tYqi1P9Jd" id="cppheader5J7tYqi1P9Jd" fileName="QVBoxLayout" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QVBoxLayout.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:36&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="KwNIOnt8BY1i" id="cppheaderKwNIOnt8BY1i" fileName="QKeyEvent" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QKeyEvent.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:36&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="bUhlv210K6rs" id="cppheaderbUhlv210K6rs" fileName="QMenu" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QMenu.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:36&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="watJjAv16IKT" id="cppheaderwatJjAv16IKT" fileName="QMimeData" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QMimeData.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:37&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="4BbFjaxI3c1y" id="cppheader4BbFjaxI3c1y" fileName="QUndoCommand" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QUndoCommand.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:37&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="e2xy7oq1OhJ6" id="cppheadere2xy7oq1OhJ6" fileName="QUndoView" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QUndoView.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:37&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="pE7uURNYaylH" id="cppheaderpE7uURNYaylH" fileName="UMLApp" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef UMLAPP_H&amp;#010;#define UMLAPP_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;kxmlguiwindow.h&quot;&amp;#010;#include &quot;programming_language.h&quot;&amp;#010;#include &quot;qstring.h&quot;&amp;#010;#include &quot;ksharedconfigptr.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="pE7uURNYaylH" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class UMLApp&amp;#010;The base class for UML application windows. It sets up the main&amp;#010;window and reads the config file as well as providing a menubar, toolbar&amp;#010;and statusbar. A list of UMLView instances creates the center views, which are connected&amp;#010;to the window's Doc object. The handling of views is realized with two different widgets:&amp;#010;  - stack widget&amp;#010;  - tab widget&amp;#010;The current view handling is set as an option. &amp;#010;UMLApp reimplements the methods that KMainWindow provides for main window handling and supports&amp;#010;full session management as well as using KActions.&amp;#010;&amp;#010;@see KMainWindow&amp;#010;@see KApplication&amp;#010;@see KConfig&amp;#010;&amp;#010;@author Paul Hensgen &lt;phensgen@techie.com>&amp;#010;Bugs and comments to umbrello-devel@kde.org or http://bugs.kde.org" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="UMLApp ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation tag="operation_suboqqcusaDY" parent_id="suboqqcusaDY" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_W4ur5oWMce75" parent_id="W4ur5oWMce75" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_o4lmSi2Lae7O" parent_id="o4lmSi2Lae7O" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_UhGKHRrmVjbb" parent_id="UhGKHRrmVjbb" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_Y5x8j3BW7xIa" parent_id="Y5x8j3BW7xIa" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_GahlJIMpOIv5" parent_id="GahlJIMpOIv5" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_L7bQ4tyhErsA" parent_id="L7bQ4tyhErsA" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_LZzhrsnAzOa3" parent_id="LZzhrsnAzOa3" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_GZiSOZcCx9dC" parent_id="GZiSOZcCx9dC" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_RzfJ2sTLRQ3I" parent_id="RzfJ2sTLRQ3I" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_IqSGC0HSX0sw" parent_id="IqSGC0HSX0sw" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_XV6Uchf4gINg" parent_id="XV6Uchf4gINg" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_Ao1ZC4rTsHj3" parent_id="Ao1ZC4rTsHj3" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_GyTnwMhTpnwR" parent_id="GyTnwMhTpnwR" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_SbV8rrm0doZq" parent_id="SbV8rrm0doZq" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_sPHjg0muwFit" parent_id="sPHjg0muwFit" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_CWhqKEeBdvuI" parent_id="CWhqKEeBdvuI" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_teCptuiTI3tT" parent_id="teCptuiTI3tT" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_Lj4B5oqFJV5b" parent_id="Lj4B5oqFJV5b" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_jhkNcefVGrJ8" parent_id="jhkNcefVGrJ8" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_k1b24UTOCXXF" parent_id="k1b24UTOCXXF" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_KNUbsYCZFxws" parent_id="KNUbsYCZFxws" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_ZZLoPew9gX9i" parent_id="ZZLoPew9gX9i" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_za6B5dQPytyo" parent_id="za6B5dQPytyo" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_R9Og6KYdssRH" parent_id="R9Og6KYdssRH" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_WNOCsXvs7z1C" parent_id="WNOCsXvs7z1C" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_bQaZJWOkfmOl" parent_id="bQaZJWOkfmOl" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_4vNwnmDJAbU0" parent_id="4vNwnmDJAbU0" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_6NsBMuMxKuXb" parent_id="6NsBMuMxKuXb" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_QtJ6fhpjaCeN" parent_id="QtJ6fhpjaCeN" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_zrf7R97VUyhq" parent_id="zrf7R97VUyhq" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_s3mAxHjNA2Tn" parent_id="s3mAxHjNA2Tn" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_hHUIT8fQyKXP" parent_id="hHUIT8fQyKXP" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_RduvbZkRaWbX" parent_id="RduvbZkRaWbX" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_lItvKKg1bAJ3" parent_id="lItvKKg1bAJ3" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_JxTFHzehcWcD" parent_id="JxTFHzehcWcD" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_6KcgqBCbT3Un" parent_id="6KcgqBCbT3Un" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_NAoxL60c3RrI" parent_id="NAoxL60c3RrI" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_QTz2xaD3upij" parent_id="QTz2xaD3upij" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_0sITvnEGv1BE" parent_id="0sITvnEGv1BE" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_wF5q3nX3dqVW" parent_id="wF5q3nX3dqVW" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_FMiLikPeyVS1" parent_id="FMiLikPeyVS1" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_4gl8GenTyVmg" parent_id="4gl8GenTyVmg" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_h8wuFrpHWYPk" parent_id="h8wuFrpHWYPk" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_rBeaMN53T1xh" parent_id="rBeaMN53T1xh" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_rlyLJM5WWIgA" parent_id="rlyLJM5WWIgA" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_FW0Pe29UBn4Y" parent_id="FW0Pe29UBn4Y" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_B8Ze7VJwGGHX" parent_id="B8Ze7VJwGGHX" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_aM26ciFsCFFq" parent_id="aM26ciFsCFFq" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_GOIRCNxNTVza" parent_id="GOIRCNxNTVza" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_yHXEXoj79lBl" parent_id="yHXEXoj79lBl" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_RQbdeqSuFkJP" parent_id="RQbdeqSuFkJP" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_5FkYkh9iyguV" parent_id="5FkYkh9iyguV" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_SbcbLoLmCuOq" parent_id="SbcbLoLmCuOq" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_lqiyY2NeH7Az" parent_id="lqiyY2NeH7Az" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_oJfnxXGO8rxT" parent_id="oJfnxXGO8rxT" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_MFcdKna64Dr0" parent_id="MFcdKna64Dr0" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_81hYMXXim7K4" parent_id="81hYMXXim7K4" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_uuAx62xq8Lf5" parent_id="uuAx62xq8Lf5" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_eyfEU0zd2e9O" parent_id="eyfEU0zd2e9O" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_8aDGttLYrymL" parent_id="8aDGttLYrymL" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_nRF4ZqTfRfvK" parent_id="nRF4ZqTfRfvK" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_hPHRolycADgh" parent_id="hPHRolycADgh" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_EIlZtqJYGay2" parent_id="EIlZtqJYGay2" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_JwcT7HA8PWb8" parent_id="JwcT7HA8PWb8" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_lKPEv1rAHdh9" parent_id="lKPEv1rAHdh9" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_R0hfZfisbIKi" parent_id="R0hfZfisbIKi" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_ZSpwzO4iiTxd" parent_id="ZSpwzO4iiTxd" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_DU9e3ZdFiS29" parent_id="DU9e3ZdFiS29" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_CuO8g0StUZVV" parent_id="CuO8g0StUZVV" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_76kpYny7H5I7" parent_id="76kpYny7H5I7" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_83bA1TfBN1H1" parent_id="83bA1TfBN1H1" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_1isUFNzMSiB0" parent_id="1isUFNzMSiB0" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_T76kDOpJPRTQ" parent_id="T76kDOpJPRTQ" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_a5pBBSzf49YN" parent_id="a5pBBSzf49YN" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock tag="tblock_0" parent_id="EpREJUyNvvEq" indentLevel="1" text=" CodeGenerationPolicy* m_commoncodegenpolicy;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="EpREJUyNvvEq" writeOutText="false" indentLevel="1" classfield_id="EpREJUyNvvEq" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="EpREJUyNvvEq" writeOutText="false" indentLevel="1" classfield_id="EpREJUyNvvEq" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation tag="operation_KI9kGUGbugMt" parent_id="KI9kGUGbugMt" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param e " />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_28XwptnHFD9k" parent_id="28XwptnHFD9k" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param e " />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_9Uxq4pm4xJyk" parent_id="9Uxq4pm4xJyk" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_TyRcYSLjzLrG" parent_id="TyRcYSLjzLrG" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_sAYFUPWxLxZs" parent_id="sAYFUPWxLxZs" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_NsbMBQcaCGam" parent_id="NsbMBQcaCGam" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_691vOp4HzcWT" parent_id="691vOp4HzcWT" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_z2OIxvAKnlew" parent_id="z2OIxvAKnlew" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_CEWMS48YE7Uc" parent_id="CEWMS48YE7Uc" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_wWtt6NM5NkLK" parent_id="wWtt6NM5NkLK" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_wsRAzvkuPcnV" parent_id="wsRAzvkuPcnV" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_WF2z5mt1eK9b" parent_id="WF2z5mt1eK9b" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_CCmZmamF2U3j" parent_id="CCmZmamF2U3j" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_62xJgwtOL1wg" parent_id="62xJgwtOL1wg" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_1YsmMuLcWYHZ" parent_id="1YsmMuLcWYHZ" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock tag="_2" parent_id="zUFUfJKCCqo5" indentLevel="1" text=" UMLApp* s_instance;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_5" parent_id="EllVr0lTSw43" indentLevel="1" text=" QMenu* m_langSelect;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_8" parent_id="LJolmjOjDdBq" indentLevel="1" text=" QMenu* m_zoomSelect;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_11" parent_id="tPQceJ4Db5Bw" indentLevel="1" text=" Uml::Programming_Language m_activeLanguage;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_14" parent_id="jJ9xGbbpvLvH" indentLevel="1" text=" CodeGenerator* m_codegen;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_17" parent_id="IPs41a2sxRVa" indentLevel="1" text=" CodeGenPolicyExt* m_policyext;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_20" parent_id="mUTsRNSspwjz" indentLevel="1" text=" KSharedConfigPtr m_config;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_23" parent_id="Et3K0WfiaP3B" indentLevel="1" text=" UMLView* m_view;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_26" parent_id="RlpNRpCDJf3l" indentLevel="1" text=" UMLDoc* m_doc;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_29" parent_id="0UboOIncBpvC" indentLevel="1" text=" UMLListView* m_listView;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_32" parent_id="mwI3aJoYlNM9" indentLevel="1" text=" QDockWidget* m_mainDock;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_35" parent_id="f8mrvf1GDrBB" indentLevel="1" text=" QDockWidget* m_listDock;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_38" parent_id="lGZODLSzGk0q" indentLevel="1" text=" QDockWidget* m_documentationDock;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_41" parent_id="2nOnAjvqpffk" indentLevel="1" text=" QDockWidget* m_cmdHistoryDock;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_44" parent_id="Ke0XV9hGQGeb" indentLevel="1" text=" QDockWidget* m_propertyDock;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_47" parent_id="Z7YppYfrL2dW" indentLevel="1" text=" DocWindow* m_pDocWindow;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_50" parent_id="NjNlxzMX6uMu" indentLevel="1" text=" QUndoView* m_pQUndoView;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_53" parent_id="ZXYAlZH6GcsE" indentLevel="1" text=" RefactoringAssistant* m_refactoringAssist;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_56" parent_id="cfsUH9Ypg4zP" indentLevel="1" text=" KRecentFilesAction* fileOpenRecent;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_59" parent_id="dEWsoO6Oap0f" indentLevel="1" text=" QAction* filePrint;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_62" parent_id="wYF2na9PF0uU" indentLevel="1" text=" QAction* editCut;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_65" parent_id="9QJoSHD4TjwI" indentLevel="1" text=" QAction* editCopy;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_68" parent_id="50eepeJjAXlv" indentLevel="1" text=" QAction* editPaste;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_71" parent_id="7tLKrDm0d4o3" indentLevel="1" text=" QAction* editUndo;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_74" parent_id="L07oj14n1iPq" indentLevel="1" text=" QAction* editRedo;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_77" parent_id="uN2VRoYmoeYW" indentLevel="1" text=" KActionMenu* newDiagram;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_80" parent_id="fbJhHgXcM52a" indentLevel="1" text=" QAction* viewClearDiagram;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_83" parent_id="P11EfXiK8z1Q" indentLevel="1" text=" KToggleAction* viewSnapToGrid;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_86" parent_id="fX01c2b1RSZW" indentLevel="1" text=" KToggleAction* viewShowGrid;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_89" parent_id="vAUjly0AzzMe" indentLevel="1" text=" QAction* viewExportImage;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_92" parent_id="W4xf1y3gT3g6" indentLevel="1" text=" QAction* viewProperties;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_95" parent_id="5F5UhezaoTJZ" indentLevel="1" text=" QAction* zoom100Action;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_98" parent_id="tRlMURQXgW0M" indentLevel="1" text=" KPlayerPopupSliderAction* zoomAction;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_101" parent_id="AzwxQEUnTCAi" indentLevel="1" text=" QAction* m_langAct;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_104" parent_id="DARI4nOxC7Ie" indentLevel="1" text=" QAction* deleteSelectedWidget;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_107" parent_id="Yi9DC9ZN6TIW" indentLevel="1" text=" QAction* deleteDiagram;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_110" parent_id="zoaBuspSZwdl" indentLevel="1" text=" QToolButton* m_newSessionButton;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_113" parent_id="RFG2RghQSHbK" indentLevel="1" text=" KMenu* m_diagramMenu;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_116" parent_id="8OlhLOQPZXbD" indentLevel="1" text=" KToggleAction* viewToolBar;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_119" parent_id="vGU4Fv8h8Mja" indentLevel="1" text=" KToggleAction* viewStatusBar;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_122" parent_id="0OyRdYljuWQF" indentLevel="1" text=" WorkToolBar* toolsbar;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_125" parent_id="D0n8WBLP0wrK" indentLevel="1" text=" QTimer* m_clipTimer;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_128" parent_id="8WaYesEeIbl3" indentLevel="1" text=" QTimer* m_copyTimer;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_131" parent_id="3jv4fnOnHwLt" indentLevel="1" text=" AlignToolBar* m_alignToolBar;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_134" parent_id="oYY59H6nkvsq" indentLevel="1" text=" bool m_loading;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_137" parent_id="7LeOGxG4Vm7f" indentLevel="1" text=" QStackedWidget* m_viewStack;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_140" parent_id="3EQn7Ib4Ghz7" indentLevel="1" text=" KTabWidget* m_tabWidget;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_143" parent_id="qVZKHhxKtN60" indentLevel="1" text=" QVBoxLayout* m_layout;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_146" parent_id="df3tM21WR1uD" indentLevel="1" text=" QString m_imageMimeType;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_149" parent_id="16JsRPr42syN" indentLevel="1" text=" SettingsDlg* m_dlg;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_152" parent_id="ounYFwWE2p7T" indentLevel="1" text=" UMLViewImageExporterAll* m_imageExporterAll;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_155" parent_id="HUGD0Q9mIwIX" indentLevel="1" text=" XhtmlGenerator* m_xhtmlGenerator;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_158" parent_id="GcFg5C1NeIYc" indentLevel="1" text=" KUndoStack* m_pUndoStack;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_161" parent_id="gfNwZfUPSCH5" indentLevel="1" text=" bool m_hasBegunMacro;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeoperation tag="operation_GGAT8HBSlQKB" parent_id="GGAT8HBSlQKB" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param parent " />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_U2lD46RvxSL6" parent_id="U2lD46RvxSL6" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod tag="hblock_tag_3" accessType="0" parent_id="zUFUfJKCCqo5" writeOutText="false" indentLevel="1" classfield_id="zUFUfJKCCqo5" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_4" accessType="1" parent_id="zUFUfJKCCqo5" writeOutText="false" indentLevel="1" classfield_id="zUFUfJKCCqo5" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod tag="hblock_tag_6" accessType="0" parent_id="EllVr0lTSw43" writeOutText="false" indentLevel="1" classfield_id="EllVr0lTSw43" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_7" accessType="1" parent_id="EllVr0lTSw43" writeOutText="false" indentLevel="1" classfield_id="EllVr0lTSw43" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_9" accessType="0" parent_id="LJolmjOjDdBq" writeOutText="false" indentLevel="1" classfield_id="LJolmjOjDdBq" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_10" accessType="1" parent_id="LJolmjOjDdBq" writeOutText="false" indentLevel="1" classfield_id="LJolmjOjDdBq" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_12" accessType="0" parent_id="tPQceJ4Db5Bw" writeOutText="false" indentLevel="1" classfield_id="tPQceJ4Db5Bw" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_13" accessType="1" parent_id="tPQceJ4Db5Bw" writeOutText="false" indentLevel="1" classfield_id="tPQceJ4Db5Bw" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_15" accessType="0" parent_id="jJ9xGbbpvLvH" writeOutText="false" indentLevel="1" classfield_id="jJ9xGbbpvLvH" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_16" accessType="1" parent_id="jJ9xGbbpvLvH" writeOutText="false" indentLevel="1" classfield_id="jJ9xGbbpvLvH" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_18" accessType="0" parent_id="IPs41a2sxRVa" writeOutText="false" indentLevel="1" classfield_id="IPs41a2sxRVa" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_19" accessType="1" parent_id="IPs41a2sxRVa" writeOutText="false" indentLevel="1" classfield_id="IPs41a2sxRVa" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_21" accessType="0" parent_id="mUTsRNSspwjz" writeOutText="false" indentLevel="1" classfield_id="mUTsRNSspwjz" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_22" accessType="1" parent_id="mUTsRNSspwjz" writeOutText="false" indentLevel="1" classfield_id="mUTsRNSspwjz" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_24" accessType="0" parent_id="Et3K0WfiaP3B" writeOutText="false" indentLevel="1" classfield_id="Et3K0WfiaP3B" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_25" accessType="1" parent_id="Et3K0WfiaP3B" writeOutText="false" indentLevel="1" classfield_id="Et3K0WfiaP3B" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_27" accessType="0" parent_id="RlpNRpCDJf3l" writeOutText="false" indentLevel="1" classfield_id="RlpNRpCDJf3l" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_28" accessType="1" parent_id="RlpNRpCDJf3l" writeOutText="false" indentLevel="1" classfield_id="RlpNRpCDJf3l" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_30" accessType="0" parent_id="0UboOIncBpvC" writeOutText="false" indentLevel="1" classfield_id="0UboOIncBpvC" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_31" accessType="1" parent_id="0UboOIncBpvC" writeOutText="false" indentLevel="1" classfield_id="0UboOIncBpvC" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_33" accessType="0" parent_id="mwI3aJoYlNM9" writeOutText="false" indentLevel="1" classfield_id="mwI3aJoYlNM9" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_34" accessType="1" parent_id="mwI3aJoYlNM9" writeOutText="false" indentLevel="1" classfield_id="mwI3aJoYlNM9" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_36" accessType="0" parent_id="f8mrvf1GDrBB" writeOutText="false" indentLevel="1" classfield_id="f8mrvf1GDrBB" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_37" accessType="1" parent_id="f8mrvf1GDrBB" writeOutText="false" indentLevel="1" classfield_id="f8mrvf1GDrBB" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_39" accessType="0" parent_id="lGZODLSzGk0q" writeOutText="false" indentLevel="1" classfield_id="lGZODLSzGk0q" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_40" accessType="1" parent_id="lGZODLSzGk0q" writeOutText="false" indentLevel="1" classfield_id="lGZODLSzGk0q" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_42" accessType="0" parent_id="2nOnAjvqpffk" writeOutText="false" indentLevel="1" classfield_id="2nOnAjvqpffk" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_43" accessType="1" parent_id="2nOnAjvqpffk" writeOutText="false" indentLevel="1" classfield_id="2nOnAjvqpffk" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_45" accessType="0" parent_id="Ke0XV9hGQGeb" writeOutText="false" indentLevel="1" classfield_id="Ke0XV9hGQGeb" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_46" accessType="1" parent_id="Ke0XV9hGQGeb" writeOutText="false" indentLevel="1" classfield_id="Ke0XV9hGQGeb" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_48" accessType="0" parent_id="Z7YppYfrL2dW" writeOutText="false" indentLevel="1" classfield_id="Z7YppYfrL2dW" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_49" accessType="1" parent_id="Z7YppYfrL2dW" writeOutText="false" indentLevel="1" classfield_id="Z7YppYfrL2dW" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_51" accessType="0" parent_id="NjNlxzMX6uMu" writeOutText="false" indentLevel="1" classfield_id="NjNlxzMX6uMu" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_52" accessType="1" parent_id="NjNlxzMX6uMu" writeOutText="false" indentLevel="1" classfield_id="NjNlxzMX6uMu" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_54" accessType="0" parent_id="ZXYAlZH6GcsE" writeOutText="false" indentLevel="1" classfield_id="ZXYAlZH6GcsE" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_55" accessType="1" parent_id="ZXYAlZH6GcsE" writeOutText="false" indentLevel="1" classfield_id="ZXYAlZH6GcsE" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_57" accessType="0" parent_id="cfsUH9Ypg4zP" writeOutText="false" indentLevel="1" classfield_id="cfsUH9Ypg4zP" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_58" accessType="1" parent_id="cfsUH9Ypg4zP" writeOutText="false" indentLevel="1" classfield_id="cfsUH9Ypg4zP" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_60" accessType="0" parent_id="dEWsoO6Oap0f" writeOutText="false" indentLevel="1" classfield_id="dEWsoO6Oap0f" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_61" accessType="1" parent_id="dEWsoO6Oap0f" writeOutText="false" indentLevel="1" classfield_id="dEWsoO6Oap0f" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_63" accessType="0" parent_id="wYF2na9PF0uU" writeOutText="false" indentLevel="1" classfield_id="wYF2na9PF0uU" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_64" accessType="1" parent_id="wYF2na9PF0uU" writeOutText="false" indentLevel="1" classfield_id="wYF2na9PF0uU" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_66" accessType="0" parent_id="9QJoSHD4TjwI" writeOutText="false" indentLevel="1" classfield_id="9QJoSHD4TjwI" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_67" accessType="1" parent_id="9QJoSHD4TjwI" writeOutText="false" indentLevel="1" classfield_id="9QJoSHD4TjwI" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_69" accessType="0" parent_id="50eepeJjAXlv" writeOutText="false" indentLevel="1" classfield_id="50eepeJjAXlv" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_70" accessType="1" parent_id="50eepeJjAXlv" writeOutText="false" indentLevel="1" classfield_id="50eepeJjAXlv" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_72" accessType="0" parent_id="7tLKrDm0d4o3" writeOutText="false" indentLevel="1" classfield_id="7tLKrDm0d4o3" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_73" accessType="1" parent_id="7tLKrDm0d4o3" writeOutText="false" indentLevel="1" classfield_id="7tLKrDm0d4o3" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_75" accessType="0" parent_id="L07oj14n1iPq" writeOutText="false" indentLevel="1" classfield_id="L07oj14n1iPq" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_76" accessType="1" parent_id="L07oj14n1iPq" writeOutText="false" indentLevel="1" classfield_id="L07oj14n1iPq" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_78" accessType="0" parent_id="uN2VRoYmoeYW" writeOutText="false" indentLevel="1" classfield_id="uN2VRoYmoeYW" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_79" accessType="1" parent_id="uN2VRoYmoeYW" writeOutText="false" indentLevel="1" classfield_id="uN2VRoYmoeYW" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_81" accessType="0" parent_id="fbJhHgXcM52a" writeOutText="false" indentLevel="1" classfield_id="fbJhHgXcM52a" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_82" accessType="1" parent_id="fbJhHgXcM52a" writeOutText="false" indentLevel="1" classfield_id="fbJhHgXcM52a" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_84" accessType="0" parent_id="P11EfXiK8z1Q" writeOutText="false" indentLevel="1" classfield_id="P11EfXiK8z1Q" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_85" accessType="1" parent_id="P11EfXiK8z1Q" writeOutText="false" indentLevel="1" classfield_id="P11EfXiK8z1Q" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_87" accessType="0" parent_id="fX01c2b1RSZW" writeOutText="false" indentLevel="1" classfield_id="fX01c2b1RSZW" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_88" accessType="1" parent_id="fX01c2b1RSZW" writeOutText="false" indentLevel="1" classfield_id="fX01c2b1RSZW" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_90" accessType="0" parent_id="vAUjly0AzzMe" writeOutText="false" indentLevel="1" classfield_id="vAUjly0AzzMe" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_91" accessType="1" parent_id="vAUjly0AzzMe" writeOutText="false" indentLevel="1" classfield_id="vAUjly0AzzMe" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_93" accessType="0" parent_id="W4xf1y3gT3g6" writeOutText="false" indentLevel="1" classfield_id="W4xf1y3gT3g6" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_94" accessType="1" parent_id="W4xf1y3gT3g6" writeOutText="false" indentLevel="1" classfield_id="W4xf1y3gT3g6" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_96" accessType="0" parent_id="5F5UhezaoTJZ" writeOutText="false" indentLevel="1" classfield_id="5F5UhezaoTJZ" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_97" accessType="1" parent_id="5F5UhezaoTJZ" writeOutText="false" indentLevel="1" classfield_id="5F5UhezaoTJZ" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_99" accessType="0" parent_id="tRlMURQXgW0M" writeOutText="false" indentLevel="1" classfield_id="tRlMURQXgW0M" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_100" accessType="1" parent_id="tRlMURQXgW0M" writeOutText="false" indentLevel="1" classfield_id="tRlMURQXgW0M" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_102" accessType="0" parent_id="AzwxQEUnTCAi" writeOutText="false" indentLevel="1" classfield_id="AzwxQEUnTCAi" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_103" accessType="1" parent_id="AzwxQEUnTCAi" writeOutText="false" indentLevel="1" classfield_id="AzwxQEUnTCAi" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_105" accessType="0" parent_id="DARI4nOxC7Ie" writeOutText="false" indentLevel="1" classfield_id="DARI4nOxC7Ie" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_106" accessType="1" parent_id="DARI4nOxC7Ie" writeOutText="false" indentLevel="1" classfield_id="DARI4nOxC7Ie" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_108" accessType="0" parent_id="Yi9DC9ZN6TIW" writeOutText="false" indentLevel="1" classfield_id="Yi9DC9ZN6TIW" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_109" accessType="1" parent_id="Yi9DC9ZN6TIW" writeOutText="false" indentLevel="1" classfield_id="Yi9DC9ZN6TIW" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_111" accessType="0" parent_id="zoaBuspSZwdl" writeOutText="false" indentLevel="1" classfield_id="zoaBuspSZwdl" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_112" accessType="1" parent_id="zoaBuspSZwdl" writeOutText="false" indentLevel="1" classfield_id="zoaBuspSZwdl" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_114" accessType="0" parent_id="RFG2RghQSHbK" writeOutText="false" indentLevel="1" classfield_id="RFG2RghQSHbK" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_115" accessType="1" parent_id="RFG2RghQSHbK" writeOutText="false" indentLevel="1" classfield_id="RFG2RghQSHbK" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_117" accessType="0" parent_id="8OlhLOQPZXbD" writeOutText="false" indentLevel="1" classfield_id="8OlhLOQPZXbD" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_118" accessType="1" parent_id="8OlhLOQPZXbD" writeOutText="false" indentLevel="1" classfield_id="8OlhLOQPZXbD" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_120" accessType="0" parent_id="vGU4Fv8h8Mja" writeOutText="false" indentLevel="1" classfield_id="vGU4Fv8h8Mja" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_121" accessType="1" parent_id="vGU4Fv8h8Mja" writeOutText="false" indentLevel="1" classfield_id="vGU4Fv8h8Mja" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_123" accessType="0" parent_id="0OyRdYljuWQF" writeOutText="false" indentLevel="1" classfield_id="0OyRdYljuWQF" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_124" accessType="1" parent_id="0OyRdYljuWQF" writeOutText="false" indentLevel="1" classfield_id="0OyRdYljuWQF" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_126" accessType="0" parent_id="D0n8WBLP0wrK" writeOutText="false" indentLevel="1" classfield_id="D0n8WBLP0wrK" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_127" accessType="1" parent_id="D0n8WBLP0wrK" writeOutText="false" indentLevel="1" classfield_id="D0n8WBLP0wrK" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_129" accessType="0" parent_id="8WaYesEeIbl3" writeOutText="false" indentLevel="1" classfield_id="8WaYesEeIbl3" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_130" accessType="1" parent_id="8WaYesEeIbl3" writeOutText="false" indentLevel="1" classfield_id="8WaYesEeIbl3" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_132" accessType="0" parent_id="3jv4fnOnHwLt" writeOutText="false" indentLevel="1" classfield_id="3jv4fnOnHwLt" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_133" accessType="1" parent_id="3jv4fnOnHwLt" writeOutText="false" indentLevel="1" classfield_id="3jv4fnOnHwLt" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_135" accessType="0" parent_id="oYY59H6nkvsq" writeOutText="false" indentLevel="1" classfield_id="oYY59H6nkvsq" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_136" accessType="1" parent_id="oYY59H6nkvsq" writeOutText="false" indentLevel="1" classfield_id="oYY59H6nkvsq" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_138" accessType="0" parent_id="7LeOGxG4Vm7f" writeOutText="false" indentLevel="1" classfield_id="7LeOGxG4Vm7f" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_139" accessType="1" parent_id="7LeOGxG4Vm7f" writeOutText="false" indentLevel="1" classfield_id="7LeOGxG4Vm7f" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_141" accessType="0" parent_id="3EQn7Ib4Ghz7" writeOutText="false" indentLevel="1" classfield_id="3EQn7Ib4Ghz7" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_142" accessType="1" parent_id="3EQn7Ib4Ghz7" writeOutText="false" indentLevel="1" classfield_id="3EQn7Ib4Ghz7" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_144" accessType="0" parent_id="qVZKHhxKtN60" writeOutText="false" indentLevel="1" classfield_id="qVZKHhxKtN60" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_145" accessType="1" parent_id="qVZKHhxKtN60" writeOutText="false" indentLevel="1" classfield_id="qVZKHhxKtN60" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_147" accessType="0" parent_id="df3tM21WR1uD" writeOutText="false" indentLevel="1" classfield_id="df3tM21WR1uD" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_148" accessType="1" parent_id="df3tM21WR1uD" writeOutText="false" indentLevel="1" classfield_id="df3tM21WR1uD" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_150" accessType="0" parent_id="16JsRPr42syN" writeOutText="false" indentLevel="1" classfield_id="16JsRPr42syN" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_151" accessType="1" parent_id="16JsRPr42syN" writeOutText="false" indentLevel="1" classfield_id="16JsRPr42syN" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_153" accessType="0" parent_id="ounYFwWE2p7T" writeOutText="false" indentLevel="1" classfield_id="ounYFwWE2p7T" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_154" accessType="1" parent_id="ounYFwWE2p7T" writeOutText="false" indentLevel="1" classfield_id="ounYFwWE2p7T" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_156" accessType="0" parent_id="HUGD0Q9mIwIX" writeOutText="false" indentLevel="1" classfield_id="HUGD0Q9mIwIX" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_157" accessType="1" parent_id="HUGD0Q9mIwIX" writeOutText="false" indentLevel="1" classfield_id="HUGD0Q9mIwIX" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_159" accessType="0" parent_id="GcFg5C1NeIYc" writeOutText="false" indentLevel="1" classfield_id="GcFg5C1NeIYc" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_160" accessType="1" parent_id="GcFg5C1NeIYc" writeOutText="false" indentLevel="1" classfield_id="GcFg5C1NeIYc" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_162" accessType="0" parent_id="gfNwZfUPSCH5" writeOutText="false" indentLevel="1" classfield_id="gfNwZfUPSCH5" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_163" accessType="1" parent_id="gfNwZfUPSCH5" writeOutText="false" indentLevel="1" classfield_id="gfNwZfUPSCH5" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation tag="operation_yhUiCLazNvUm" parent_id="yhUiCLazNvUm" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_Ypfti9fFNItO" parent_id="Ypfti9fFNItO" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_iErSnakE4YAl" parent_id="iErSnakE4YAl" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_XpyL85pdrZRr" parent_id="XpyL85pdrZRr" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_gZ3l8DUd0Tz9" parent_id="gZ3l8DUd0Tz9" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_t91uay36knT6" parent_id="t91uay36knT6" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_N9G7whBuKibo" parent_id="N9G7whBuKibo" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_22GdRMnoV2wP" parent_id="22GdRMnoV2wP" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_sUAY3mY4pofG" parent_id="sUAY3mY4pofG" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_B2msrXOi1WG3" parent_id="B2msrXOi1WG3" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_QJnSbzHkz3cq" parent_id="QJnSbzHkz3cq" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_zlfymFnLELvg" parent_id="zlfymFnLELvg" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_XS5sUXkUGPQ3" parent_id="XS5sUXkUGPQ3" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_9wbbSnfxFjpi" parent_id="9wbbSnfxFjpi" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_Bsuwl7tu4UWU" parent_id="Bsuwl7tu4UWU" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_t8Ef2dyBUq7F" parent_id="t8Ef2dyBUq7F" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_JCcn0j2wjAuB" parent_id="JCcn0j2wjAuB" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_CSbb7o2QyeDz" parent_id="CSbb7o2QyeDz" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_pZRmDdlYpeaD" parent_id="pZRmDdlYpeaD" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_rgikfDjSmBEx" parent_id="rgikfDjSmBEx" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_rBReMgb6d5hF" parent_id="rBReMgb6d5hF" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_6gBijqxqIFjq" parent_id="6gBijqxqIFjq" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_qybaOgfVLpB4" parent_id="qybaOgfVLpB4" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_zN0YbxgPtIzI" parent_id="zN0YbxgPtIzI" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_mltc87g5Ugb5" parent_id="mltc87g5Ugb5" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_QAdRMen6PfjX" parent_id="QAdRMen6PfjX" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_EuXJRJprTSIn" parent_id="EuXJRJprTSIn" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param mimeType " />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_g0SeaAeKBHWw" parent_id="g0SeaAeKBHWw" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_5AHLFJJwIlas" parent_id="5AHLFJJwIlas" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_VfWnQ4dKFnQi" parent_id="VfWnQ4dKFnQi" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_TbJiOhOo4bcK" parent_id="TbJiOhOo4bcK" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_aUR6vO4MzL4M" parent_id="aUR6vO4MzL4M" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_cAbZVfvU64X6" parent_id="cAbZVfvU64X6" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_vMIzQp5DfE1Q" parent_id="vMIzQp5DfE1Q" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_wKiHaB5UWNTw" parent_id="wKiHaB5UWNTw" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_AXApl9Fm5PQE" parent_id="AXApl9Fm5PQE" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_s7RSr7HnPz40" parent_id="s7RSr7HnPz40" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_99UfUvZeShRD" parent_id="99UfUvZeShRD" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_PyMqdo1SSzNW" parent_id="PyMqdo1SSzNW" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_EblT57BT3WHh" parent_id="EblT57BT3WHh" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_zeNWOCCzI18T" parent_id="zeNWOCCzI18T" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_R56TCdog3xdQ" parent_id="R56TCdog3xdQ" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_ZCAZleIjIdFf" parent_id="ZCAZleIjIdFf" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_nPe5OmXppbI1" parent_id="nPe5OmXppbI1" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_E7fG2IebVo9E" parent_id="E7fG2IebVo9E" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_QRxj2COpb0tx" parent_id="QRxj2COpb0tx" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_kOmZz3YC8EQA" parent_id="kOmZz3YC8EQA" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_U4jxqsCFH7wJ" parent_id="U4jxqsCFH7wJ" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_II7rI0p0ObZL" parent_id="II7rI0p0ObZL" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_c5XkHvsmzcho" parent_id="c5XkHvsmzcho" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_Sr3kzz1HH88X" parent_id="Sr3kzz1HH88X" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_8vXUV4q77NqP" parent_id="8vXUV4q77NqP" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_HiBGIq2li3Th" parent_id="HiBGIq2li3Th" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_0UwHb2mhyJCT" parent_id="0UwHb2mhyJCT" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_L2aTNOse71tN" parent_id="L2aTNOse71tN" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_pv6XzZEx2AFb" parent_id="pv6XzZEx2AFb" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_BzI9HUccUA3s" parent_id="BzI9HUccUA3s" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_ZtWesPziJ6FG" parent_id="ZtWesPziJ6FG" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_dSDdaQElQVuf" parent_id="dSDdaQElQVuf" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_wV07KmAWYv1N" parent_id="wV07KmAWYv1N" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_IXZSiKObQ4fA" parent_id="IXZSiKObQ4fA" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_vZrFScu6Y4HO" parent_id="vZrFScu6Y4HO" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_kZlLdwGMDPJT" parent_id="kZlLdwGMDPJT" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_smKRpr1PQSvQ" parent_id="smKRpr1PQSvQ" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_Q18utC0fWTeD" parent_id="Q18utC0fWTeD" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_C3wrlWfdJy48" parent_id="C3wrlWfdJy48" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_p4XDWRbvSjpJ" parent_id="p4XDWRbvSjpJ" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //UMLAPP_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLApp.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:37&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield role_id="1" listClassName="" field_type="99" parent_id="IkigP1mFDu9i" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="IkigP1mFDu9i" writeOutText="false" indentLevel="1" text=" KXmlGuiWindow ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="IkigP1mFDu9i" writeOutText="false" indentLevel="1" classfield_id="IkigP1mFDu9i" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="IkigP1mFDu9i" writeOutText="false" indentLevel="1" classfield_id="IkigP1mFDu9i" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="IkigP1mFDu9i" writeOutText="false" indentLevel="1" classfield_id="IkigP1mFDu9i" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="IkigP1mFDu9i" writeOutText="false" indentLevel="1" classfield_id="IkigP1mFDu9i" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="IkigP1mFDu9i" writeOutText="false" indentLevel="1" classfield_id="IkigP1mFDu9i" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="EpREJUyNvvEq" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="tblock_0" parent_id="EpREJUyNvvEq" indentLevel="1" text=" CodeGenerationPolicy* m_commoncodegenpolicy;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="EpREJUyNvvEq" writeOutText="false" indentLevel="1" classfield_id="EpREJUyNvvEq" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="EpREJUyNvvEq" writeOutText="false" indentLevel="1" classfield_id="EpREJUyNvvEq" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="zUFUfJKCCqo5" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_2" parent_id="zUFUfJKCCqo5" indentLevel="1" text=" UMLApp* s_instance;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_3" accessType="0" parent_id="zUFUfJKCCqo5" writeOutText="false" indentLevel="1" classfield_id="zUFUfJKCCqo5" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_4" accessType="1" parent_id="zUFUfJKCCqo5" writeOutText="false" indentLevel="1" classfield_id="zUFUfJKCCqo5" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="EllVr0lTSw43" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_5" parent_id="EllVr0lTSw43" indentLevel="1" text=" QMenu* m_langSelect;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_6" accessType="0" parent_id="EllVr0lTSw43" writeOutText="false" indentLevel="1" classfield_id="EllVr0lTSw43" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_7" accessType="1" parent_id="EllVr0lTSw43" writeOutText="false" indentLevel="1" classfield_id="EllVr0lTSw43" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="LJolmjOjDdBq" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_8" parent_id="LJolmjOjDdBq" indentLevel="1" text=" QMenu* m_zoomSelect;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_9" accessType="0" parent_id="LJolmjOjDdBq" writeOutText="false" indentLevel="1" classfield_id="LJolmjOjDdBq" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_10" accessType="1" parent_id="LJolmjOjDdBq" writeOutText="false" indentLevel="1" classfield_id="LJolmjOjDdBq" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="tPQceJ4Db5Bw" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_11" parent_id="tPQceJ4Db5Bw" indentLevel="1" text=" Uml::Programming_Language m_activeLanguage;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_12" accessType="0" parent_id="tPQceJ4Db5Bw" writeOutText="false" indentLevel="1" classfield_id="tPQceJ4Db5Bw" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_13" accessType="1" parent_id="tPQceJ4Db5Bw" writeOutText="false" indentLevel="1" classfield_id="tPQceJ4Db5Bw" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="jJ9xGbbpvLvH" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_14" parent_id="jJ9xGbbpvLvH" indentLevel="1" text=" CodeGenerator* m_codegen;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_15" accessType="0" parent_id="jJ9xGbbpvLvH" writeOutText="false" indentLevel="1" classfield_id="jJ9xGbbpvLvH" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_16" accessType="1" parent_id="jJ9xGbbpvLvH" writeOutText="false" indentLevel="1" classfield_id="jJ9xGbbpvLvH" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="IPs41a2sxRVa" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_17" parent_id="IPs41a2sxRVa" indentLevel="1" text=" CodeGenPolicyExt* m_policyext;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_18" accessType="0" parent_id="IPs41a2sxRVa" writeOutText="false" indentLevel="1" classfield_id="IPs41a2sxRVa" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_19" accessType="1" parent_id="IPs41a2sxRVa" writeOutText="false" indentLevel="1" classfield_id="IPs41a2sxRVa" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="mUTsRNSspwjz" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_20" parent_id="mUTsRNSspwjz" indentLevel="1" text=" KSharedConfigPtr m_config;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_21" accessType="0" parent_id="mUTsRNSspwjz" writeOutText="false" indentLevel="1" classfield_id="mUTsRNSspwjz" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_22" accessType="1" parent_id="mUTsRNSspwjz" writeOutText="false" indentLevel="1" classfield_id="mUTsRNSspwjz" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="Et3K0WfiaP3B" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_23" parent_id="Et3K0WfiaP3B" indentLevel="1" text=" UMLView* m_view;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_24" accessType="0" parent_id="Et3K0WfiaP3B" writeOutText="false" indentLevel="1" classfield_id="Et3K0WfiaP3B" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_25" accessType="1" parent_id="Et3K0WfiaP3B" writeOutText="false" indentLevel="1" classfield_id="Et3K0WfiaP3B" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="RlpNRpCDJf3l" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_26" parent_id="RlpNRpCDJf3l" indentLevel="1" text=" UMLDoc* m_doc;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_27" accessType="0" parent_id="RlpNRpCDJf3l" writeOutText="false" indentLevel="1" classfield_id="RlpNRpCDJf3l" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_28" accessType="1" parent_id="RlpNRpCDJf3l" writeOutText="false" indentLevel="1" classfield_id="RlpNRpCDJf3l" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="0UboOIncBpvC" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_29" parent_id="0UboOIncBpvC" indentLevel="1" text=" UMLListView* m_listView;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_30" accessType="0" parent_id="0UboOIncBpvC" writeOutText="false" indentLevel="1" classfield_id="0UboOIncBpvC" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_31" accessType="1" parent_id="0UboOIncBpvC" writeOutText="false" indentLevel="1" classfield_id="0UboOIncBpvC" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="mwI3aJoYlNM9" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_32" parent_id="mwI3aJoYlNM9" indentLevel="1" text=" QDockWidget* m_mainDock;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_33" accessType="0" parent_id="mwI3aJoYlNM9" writeOutText="false" indentLevel="1" classfield_id="mwI3aJoYlNM9" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_34" accessType="1" parent_id="mwI3aJoYlNM9" writeOutText="false" indentLevel="1" classfield_id="mwI3aJoYlNM9" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="f8mrvf1GDrBB" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_35" parent_id="f8mrvf1GDrBB" indentLevel="1" text=" QDockWidget* m_listDock;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_36" accessType="0" parent_id="f8mrvf1GDrBB" writeOutText="false" indentLevel="1" classfield_id="f8mrvf1GDrBB" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_37" accessType="1" parent_id="f8mrvf1GDrBB" writeOutText="false" indentLevel="1" classfield_id="f8mrvf1GDrBB" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="lGZODLSzGk0q" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_38" parent_id="lGZODLSzGk0q" indentLevel="1" text=" QDockWidget* m_documentationDock;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_39" accessType="0" parent_id="lGZODLSzGk0q" writeOutText="false" indentLevel="1" classfield_id="lGZODLSzGk0q" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_40" accessType="1" parent_id="lGZODLSzGk0q" writeOutText="false" indentLevel="1" classfield_id="lGZODLSzGk0q" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="2nOnAjvqpffk" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_41" parent_id="2nOnAjvqpffk" indentLevel="1" text=" QDockWidget* m_cmdHistoryDock;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_42" accessType="0" parent_id="2nOnAjvqpffk" writeOutText="false" indentLevel="1" classfield_id="2nOnAjvqpffk" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_43" accessType="1" parent_id="2nOnAjvqpffk" writeOutText="false" indentLevel="1" classfield_id="2nOnAjvqpffk" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="Ke0XV9hGQGeb" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_44" parent_id="Ke0XV9hGQGeb" indentLevel="1" text=" QDockWidget* m_propertyDock;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_45" accessType="0" parent_id="Ke0XV9hGQGeb" writeOutText="false" indentLevel="1" classfield_id="Ke0XV9hGQGeb" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_46" accessType="1" parent_id="Ke0XV9hGQGeb" writeOutText="false" indentLevel="1" classfield_id="Ke0XV9hGQGeb" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="Z7YppYfrL2dW" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_47" parent_id="Z7YppYfrL2dW" indentLevel="1" text=" DocWindow* m_pDocWindow;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_48" accessType="0" parent_id="Z7YppYfrL2dW" writeOutText="false" indentLevel="1" classfield_id="Z7YppYfrL2dW" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_49" accessType="1" parent_id="Z7YppYfrL2dW" writeOutText="false" indentLevel="1" classfield_id="Z7YppYfrL2dW" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="NjNlxzMX6uMu" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_50" parent_id="NjNlxzMX6uMu" indentLevel="1" text=" QUndoView* m_pQUndoView;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_51" accessType="0" parent_id="NjNlxzMX6uMu" writeOutText="false" indentLevel="1" classfield_id="NjNlxzMX6uMu" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_52" accessType="1" parent_id="NjNlxzMX6uMu" writeOutText="false" indentLevel="1" classfield_id="NjNlxzMX6uMu" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="ZXYAlZH6GcsE" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_53" parent_id="ZXYAlZH6GcsE" indentLevel="1" text=" RefactoringAssistant* m_refactoringAssist;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_54" accessType="0" parent_id="ZXYAlZH6GcsE" writeOutText="false" indentLevel="1" classfield_id="ZXYAlZH6GcsE" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_55" accessType="1" parent_id="ZXYAlZH6GcsE" writeOutText="false" indentLevel="1" classfield_id="ZXYAlZH6GcsE" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="cfsUH9Ypg4zP" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_56" parent_id="cfsUH9Ypg4zP" indentLevel="1" text=" KRecentFilesAction* fileOpenRecent;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_57" accessType="0" parent_id="cfsUH9Ypg4zP" writeOutText="false" indentLevel="1" classfield_id="cfsUH9Ypg4zP" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_58" accessType="1" parent_id="cfsUH9Ypg4zP" writeOutText="false" indentLevel="1" classfield_id="cfsUH9Ypg4zP" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="dEWsoO6Oap0f" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_59" parent_id="dEWsoO6Oap0f" indentLevel="1" text=" QAction* filePrint;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_60" accessType="0" parent_id="dEWsoO6Oap0f" writeOutText="false" indentLevel="1" classfield_id="dEWsoO6Oap0f" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_61" accessType="1" parent_id="dEWsoO6Oap0f" writeOutText="false" indentLevel="1" classfield_id="dEWsoO6Oap0f" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="wYF2na9PF0uU" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_62" parent_id="wYF2na9PF0uU" indentLevel="1" text=" QAction* editCut;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_63" accessType="0" parent_id="wYF2na9PF0uU" writeOutText="false" indentLevel="1" classfield_id="wYF2na9PF0uU" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_64" accessType="1" parent_id="wYF2na9PF0uU" writeOutText="false" indentLevel="1" classfield_id="wYF2na9PF0uU" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="9QJoSHD4TjwI" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_65" parent_id="9QJoSHD4TjwI" indentLevel="1" text=" QAction* editCopy;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_66" accessType="0" parent_id="9QJoSHD4TjwI" writeOutText="false" indentLevel="1" classfield_id="9QJoSHD4TjwI" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_67" accessType="1" parent_id="9QJoSHD4TjwI" writeOutText="false" indentLevel="1" classfield_id="9QJoSHD4TjwI" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="50eepeJjAXlv" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_68" parent_id="50eepeJjAXlv" indentLevel="1" text=" QAction* editPaste;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_69" accessType="0" parent_id="50eepeJjAXlv" writeOutText="false" indentLevel="1" classfield_id="50eepeJjAXlv" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_70" accessType="1" parent_id="50eepeJjAXlv" writeOutText="false" indentLevel="1" classfield_id="50eepeJjAXlv" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="7tLKrDm0d4o3" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_71" parent_id="7tLKrDm0d4o3" indentLevel="1" text=" QAction* editUndo;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_72" accessType="0" parent_id="7tLKrDm0d4o3" writeOutText="false" indentLevel="1" classfield_id="7tLKrDm0d4o3" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_73" accessType="1" parent_id="7tLKrDm0d4o3" writeOutText="false" indentLevel="1" classfield_id="7tLKrDm0d4o3" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="L07oj14n1iPq" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_74" parent_id="L07oj14n1iPq" indentLevel="1" text=" QAction* editRedo;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_75" accessType="0" parent_id="L07oj14n1iPq" writeOutText="false" indentLevel="1" classfield_id="L07oj14n1iPq" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_76" accessType="1" parent_id="L07oj14n1iPq" writeOutText="false" indentLevel="1" classfield_id="L07oj14n1iPq" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="uN2VRoYmoeYW" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_77" parent_id="uN2VRoYmoeYW" indentLevel="1" text=" KActionMenu* newDiagram;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_78" accessType="0" parent_id="uN2VRoYmoeYW" writeOutText="false" indentLevel="1" classfield_id="uN2VRoYmoeYW" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_79" accessType="1" parent_id="uN2VRoYmoeYW" writeOutText="false" indentLevel="1" classfield_id="uN2VRoYmoeYW" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="fbJhHgXcM52a" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_80" parent_id="fbJhHgXcM52a" indentLevel="1" text=" QAction* viewClearDiagram;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_81" accessType="0" parent_id="fbJhHgXcM52a" writeOutText="false" indentLevel="1" classfield_id="fbJhHgXcM52a" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_82" accessType="1" parent_id="fbJhHgXcM52a" writeOutText="false" indentLevel="1" classfield_id="fbJhHgXcM52a" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="P11EfXiK8z1Q" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_83" parent_id="P11EfXiK8z1Q" indentLevel="1" text=" KToggleAction* viewSnapToGrid;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_84" accessType="0" parent_id="P11EfXiK8z1Q" writeOutText="false" indentLevel="1" classfield_id="P11EfXiK8z1Q" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_85" accessType="1" parent_id="P11EfXiK8z1Q" writeOutText="false" indentLevel="1" classfield_id="P11EfXiK8z1Q" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="fX01c2b1RSZW" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_86" parent_id="fX01c2b1RSZW" indentLevel="1" text=" KToggleAction* viewShowGrid;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_87" accessType="0" parent_id="fX01c2b1RSZW" writeOutText="false" indentLevel="1" classfield_id="fX01c2b1RSZW" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_88" accessType="1" parent_id="fX01c2b1RSZW" writeOutText="false" indentLevel="1" classfield_id="fX01c2b1RSZW" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="vAUjly0AzzMe" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_89" parent_id="vAUjly0AzzMe" indentLevel="1" text=" QAction* viewExportImage;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_90" accessType="0" parent_id="vAUjly0AzzMe" writeOutText="false" indentLevel="1" classfield_id="vAUjly0AzzMe" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_91" accessType="1" parent_id="vAUjly0AzzMe" writeOutText="false" indentLevel="1" classfield_id="vAUjly0AzzMe" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="W4xf1y3gT3g6" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_92" parent_id="W4xf1y3gT3g6" indentLevel="1" text=" QAction* viewProperties;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_93" accessType="0" parent_id="W4xf1y3gT3g6" writeOutText="false" indentLevel="1" classfield_id="W4xf1y3gT3g6" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_94" accessType="1" parent_id="W4xf1y3gT3g6" writeOutText="false" indentLevel="1" classfield_id="W4xf1y3gT3g6" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="5F5UhezaoTJZ" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_95" parent_id="5F5UhezaoTJZ" indentLevel="1" text=" QAction* zoom100Action;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_96" accessType="0" parent_id="5F5UhezaoTJZ" writeOutText="false" indentLevel="1" classfield_id="5F5UhezaoTJZ" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_97" accessType="1" parent_id="5F5UhezaoTJZ" writeOutText="false" indentLevel="1" classfield_id="5F5UhezaoTJZ" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="tRlMURQXgW0M" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_98" parent_id="tRlMURQXgW0M" indentLevel="1" text=" KPlayerPopupSliderAction* zoomAction;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_99" accessType="0" parent_id="tRlMURQXgW0M" writeOutText="false" indentLevel="1" classfield_id="tRlMURQXgW0M" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_100" accessType="1" parent_id="tRlMURQXgW0M" writeOutText="false" indentLevel="1" classfield_id="tRlMURQXgW0M" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="AzwxQEUnTCAi" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_101" parent_id="AzwxQEUnTCAi" indentLevel="1" text=" QAction* m_langAct;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_102" accessType="0" parent_id="AzwxQEUnTCAi" writeOutText="false" indentLevel="1" classfield_id="AzwxQEUnTCAi" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_103" accessType="1" parent_id="AzwxQEUnTCAi" writeOutText="false" indentLevel="1" classfield_id="AzwxQEUnTCAi" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="DARI4nOxC7Ie" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_104" parent_id="DARI4nOxC7Ie" indentLevel="1" text=" QAction* deleteSelectedWidget;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_105" accessType="0" parent_id="DARI4nOxC7Ie" writeOutText="false" indentLevel="1" classfield_id="DARI4nOxC7Ie" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_106" accessType="1" parent_id="DARI4nOxC7Ie" writeOutText="false" indentLevel="1" classfield_id="DARI4nOxC7Ie" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="Yi9DC9ZN6TIW" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_107" parent_id="Yi9DC9ZN6TIW" indentLevel="1" text=" QAction* deleteDiagram;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_108" accessType="0" parent_id="Yi9DC9ZN6TIW" writeOutText="false" indentLevel="1" classfield_id="Yi9DC9ZN6TIW" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_109" accessType="1" parent_id="Yi9DC9ZN6TIW" writeOutText="false" indentLevel="1" classfield_id="Yi9DC9ZN6TIW" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="zoaBuspSZwdl" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_110" parent_id="zoaBuspSZwdl" indentLevel="1" text=" QToolButton* m_newSessionButton;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_111" accessType="0" parent_id="zoaBuspSZwdl" writeOutText="false" indentLevel="1" classfield_id="zoaBuspSZwdl" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_112" accessType="1" parent_id="zoaBuspSZwdl" writeOutText="false" indentLevel="1" classfield_id="zoaBuspSZwdl" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="RFG2RghQSHbK" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_113" parent_id="RFG2RghQSHbK" indentLevel="1" text=" KMenu* m_diagramMenu;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_114" accessType="0" parent_id="RFG2RghQSHbK" writeOutText="false" indentLevel="1" classfield_id="RFG2RghQSHbK" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_115" accessType="1" parent_id="RFG2RghQSHbK" writeOutText="false" indentLevel="1" classfield_id="RFG2RghQSHbK" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="8OlhLOQPZXbD" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_116" parent_id="8OlhLOQPZXbD" indentLevel="1" text=" KToggleAction* viewToolBar;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_117" accessType="0" parent_id="8OlhLOQPZXbD" writeOutText="false" indentLevel="1" classfield_id="8OlhLOQPZXbD" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_118" accessType="1" parent_id="8OlhLOQPZXbD" writeOutText="false" indentLevel="1" classfield_id="8OlhLOQPZXbD" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="vGU4Fv8h8Mja" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_119" parent_id="vGU4Fv8h8Mja" indentLevel="1" text=" KToggleAction* viewStatusBar;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_120" accessType="0" parent_id="vGU4Fv8h8Mja" writeOutText="false" indentLevel="1" classfield_id="vGU4Fv8h8Mja" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_121" accessType="1" parent_id="vGU4Fv8h8Mja" writeOutText="false" indentLevel="1" classfield_id="vGU4Fv8h8Mja" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="0OyRdYljuWQF" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_122" parent_id="0OyRdYljuWQF" indentLevel="1" text=" WorkToolBar* toolsbar;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_123" accessType="0" parent_id="0OyRdYljuWQF" writeOutText="false" indentLevel="1" classfield_id="0OyRdYljuWQF" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_124" accessType="1" parent_id="0OyRdYljuWQF" writeOutText="false" indentLevel="1" classfield_id="0OyRdYljuWQF" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="D0n8WBLP0wrK" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_125" parent_id="D0n8WBLP0wrK" indentLevel="1" text=" QTimer* m_clipTimer;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_126" accessType="0" parent_id="D0n8WBLP0wrK" writeOutText="false" indentLevel="1" classfield_id="D0n8WBLP0wrK" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_127" accessType="1" parent_id="D0n8WBLP0wrK" writeOutText="false" indentLevel="1" classfield_id="D0n8WBLP0wrK" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="8WaYesEeIbl3" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_128" parent_id="8WaYesEeIbl3" indentLevel="1" text=" QTimer* m_copyTimer;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_129" accessType="0" parent_id="8WaYesEeIbl3" writeOutText="false" indentLevel="1" classfield_id="8WaYesEeIbl3" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_130" accessType="1" parent_id="8WaYesEeIbl3" writeOutText="false" indentLevel="1" classfield_id="8WaYesEeIbl3" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="3jv4fnOnHwLt" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_131" parent_id="3jv4fnOnHwLt" indentLevel="1" text=" AlignToolBar* m_alignToolBar;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_132" accessType="0" parent_id="3jv4fnOnHwLt" writeOutText="false" indentLevel="1" classfield_id="3jv4fnOnHwLt" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_133" accessType="1" parent_id="3jv4fnOnHwLt" writeOutText="false" indentLevel="1" classfield_id="3jv4fnOnHwLt" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="oYY59H6nkvsq" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_134" parent_id="oYY59H6nkvsq" indentLevel="1" text=" bool m_loading;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_135" accessType="0" parent_id="oYY59H6nkvsq" writeOutText="false" indentLevel="1" classfield_id="oYY59H6nkvsq" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_136" accessType="1" parent_id="oYY59H6nkvsq" writeOutText="false" indentLevel="1" classfield_id="oYY59H6nkvsq" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="7LeOGxG4Vm7f" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_137" parent_id="7LeOGxG4Vm7f" indentLevel="1" text=" QStackedWidget* m_viewStack;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_138" accessType="0" parent_id="7LeOGxG4Vm7f" writeOutText="false" indentLevel="1" classfield_id="7LeOGxG4Vm7f" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_139" accessType="1" parent_id="7LeOGxG4Vm7f" writeOutText="false" indentLevel="1" classfield_id="7LeOGxG4Vm7f" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="3EQn7Ib4Ghz7" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_140" parent_id="3EQn7Ib4Ghz7" indentLevel="1" text=" KTabWidget* m_tabWidget;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_141" accessType="0" parent_id="3EQn7Ib4Ghz7" writeOutText="false" indentLevel="1" classfield_id="3EQn7Ib4Ghz7" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_142" accessType="1" parent_id="3EQn7Ib4Ghz7" writeOutText="false" indentLevel="1" classfield_id="3EQn7Ib4Ghz7" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="qVZKHhxKtN60" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_143" parent_id="qVZKHhxKtN60" indentLevel="1" text=" QVBoxLayout* m_layout;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_144" accessType="0" parent_id="qVZKHhxKtN60" writeOutText="false" indentLevel="1" classfield_id="qVZKHhxKtN60" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_145" accessType="1" parent_id="qVZKHhxKtN60" writeOutText="false" indentLevel="1" classfield_id="qVZKHhxKtN60" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="df3tM21WR1uD" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_146" parent_id="df3tM21WR1uD" indentLevel="1" text=" QString m_imageMimeType;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_147" accessType="0" parent_id="df3tM21WR1uD" writeOutText="false" indentLevel="1" classfield_id="df3tM21WR1uD" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_148" accessType="1" parent_id="df3tM21WR1uD" writeOutText="false" indentLevel="1" classfield_id="df3tM21WR1uD" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="16JsRPr42syN" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_149" parent_id="16JsRPr42syN" indentLevel="1" text=" SettingsDlg* m_dlg;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_150" accessType="0" parent_id="16JsRPr42syN" writeOutText="false" indentLevel="1" classfield_id="16JsRPr42syN" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_151" accessType="1" parent_id="16JsRPr42syN" writeOutText="false" indentLevel="1" classfield_id="16JsRPr42syN" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="ounYFwWE2p7T" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_152" parent_id="ounYFwWE2p7T" indentLevel="1" text=" UMLViewImageExporterAll* m_imageExporterAll;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_153" accessType="0" parent_id="ounYFwWE2p7T" writeOutText="false" indentLevel="1" classfield_id="ounYFwWE2p7T" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_154" accessType="1" parent_id="ounYFwWE2p7T" writeOutText="false" indentLevel="1" classfield_id="ounYFwWE2p7T" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="HUGD0Q9mIwIX" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_155" parent_id="HUGD0Q9mIwIX" indentLevel="1" text=" XhtmlGenerator* m_xhtmlGenerator;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_156" accessType="0" parent_id="HUGD0Q9mIwIX" writeOutText="false" indentLevel="1" classfield_id="HUGD0Q9mIwIX" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_157" accessType="1" parent_id="HUGD0Q9mIwIX" writeOutText="false" indentLevel="1" classfield_id="HUGD0Q9mIwIX" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="GcFg5C1NeIYc" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_158" parent_id="GcFg5C1NeIYc" indentLevel="1" text=" KUndoStack* m_pUndoStack;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_159" accessType="0" parent_id="GcFg5C1NeIYc" writeOutText="false" indentLevel="1" classfield_id="GcFg5C1NeIYc" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_160" accessType="1" parent_id="GcFg5C1NeIYc" writeOutText="false" indentLevel="1" classfield_id="GcFg5C1NeIYc" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="gfNwZfUPSCH5" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_161" parent_id="gfNwZfUPSCH5" indentLevel="1" text=" bool m_hasBegunMacro;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_162" accessType="0" parent_id="gfNwZfUPSCH5" writeOutText="false" indentLevel="1" classfield_id="gfNwZfUPSCH5" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_163" accessType="1" parent_id="gfNwZfUPSCH5" writeOutText="false" indentLevel="1" classfield_id="gfNwZfUPSCH5" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="XiaaIbYxcTvh" id="cppheaderXiaaIbYxcTvh" fileName="KXmlGuiWindow" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef KXMLGUIWINDOW_H&amp;#010;#define KXMLGUIWINDOW_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="XiaaIbYxcTvh" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" text="Class KXmlGuiWindow&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="KXmlGuiWindow ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //KXMLGUIWINDOW_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        KXmlGuiWindow.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:37&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield role_id="0" listClassName="" field_type="99" parent_id="IkigP1mFDu9i" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="IkigP1mFDu9i" writeOutText="false" indentLevel="1" text=" UMLApp ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="" accessType="0" parent_id="IkigP1mFDu9i" writeOutText="false" indentLevel="1" classfield_id="IkigP1mFDu9i" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="1" parent_id="IkigP1mFDu9i" writeOutText="false" indentLevel="1" classfield_id="IkigP1mFDu9i" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="2" parent_id="IkigP1mFDu9i" writeOutText="false" indentLevel="1" classfield_id="IkigP1mFDu9i" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="3" parent_id="IkigP1mFDu9i" writeOutText="false" indentLevel="1" classfield_id="IkigP1mFDu9i" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="4" parent_id="IkigP1mFDu9i" writeOutText="false" indentLevel="1" classfield_id="IkigP1mFDu9i" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="QT96Be7Ui3LE" id="cppheaderQT96Be7Ui3LE" fileName="QWidget" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QWidget.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:37&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="tt3Q9VNPmVtu" id="cppheadertt3Q9VNPmVtu" fileName="QWidget_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QWidget_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:38&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="XDcd3ZuYadje" id="cppheaderXDcd3ZuYadje" fileName="UMLApp_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLApp_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:38&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="pluNPd16lalK" id="cppheaderpluNPd16lalK" fileName="KUrl" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        KUrl.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:38&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="RUoyh1gFoL6W" id="cppheaderRUoyh1gFoL6W" fileName="const_KUrl_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        const_KUrl_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:38&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="YmkNLCCTosyV" id="cppheaderYmkNLCCTosyV" fileName="UMLListView_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLListView_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:39&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="xfXjVTCDe51v" id="cppheaderxfXjVTCDe51v" fileName="WorkToolBar_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        WorkToolBar_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:39&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="ayYaUmdlYiq6" id="cppheaderayYaUmdlYiq6" fileName="DocWindow_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        DocWindow_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:39&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="w0AySeShlrAc" id="cppheaderw0AySeShlrAc" fileName="CodeGenerator_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        CodeGenerator_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:39&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="6RKvazYnW00Q" id="cppheader6RKvazYnW00Q" fileName="UMLClassifier_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLClassifier_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:40&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="64uTjbyTyZiz" id="cppheader64uTjbyTyZiz" fileName="QString_const" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QString_const.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:40&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="m1fEmoDyikG7" id="cppheaderm1fEmoDyikG7" fileName="QString_const_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QString_const_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:40&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="SNDqFTdIatYX" id="cppheaderSNDqFTdIatYX" fileName="KTabWidget_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        KTabWidget_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:41&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="0SA32lL41vf8" id="cppheader0SA32lL41vf8" fileName="CodeGenerationPolicy_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        CodeGenerationPolicy_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:41&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="psAonpwmcEJ5" id="cppheaderpsAonpwmcEJ5" fileName="CodeGenPolicyExt_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        CodeGenPolicyExt_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:41&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="rgyu5O6wTXMI" id="cppheaderrgyu5O6wTXMI" fileName="QUndoCommand_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QUndoCommand_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:42&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="UOStU2tidcCj" id="cppheaderUOStU2tidcCj" fileName="QKeyEvent_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QKeyEvent_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:42&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="Al2Pw99A9a1j" id="cppheaderAl2Pw99A9a1j" fileName="QEvent" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QEvent.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:42&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="CZ28H5wQZrEd" id="cppheaderCZ28H5wQZrEd" fileName="QEvent_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QEvent_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:42&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="DrVaTH3TPboF" id="cppheaderDrVaTH3TPboF" fileName="KConfigGroup" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        KConfigGroup.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:43&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="TTjqjcRGpSDu" id="cppheaderTTjqjcRGpSDu" fileName="KConfigGroup_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        KConfigGroup_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:43&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="6TztvAo9Ffzc" id="cppheader6TztvAo9Ffzc" fileName="const_KConfigGroup_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        const_KConfigGroup_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:43&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="E8rnR9U0bJxY" id="cppheaderE8rnR9U0bJxY" fileName="QMenu_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QMenu_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:47&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="s8bF9sGBa8dq" id="cppheaders8bF9sGBa8dq" fileName="KConfig" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        KConfig.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:48&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="TcCvKMunT0Wg" id="cppheaderTcCvKMunT0Wg" fileName="KConfig_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        KConfig_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:48&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="0uHvDCCUZ2Ya" id="cppheader0uHvDCCUZ2Ya" fileName="const_QMimeData_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        const_QMimeData_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:50&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="unyOHbcTeYIO" id="cppheaderunyOHbcTeYIO" fileName="QStringList" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QStringList.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:50&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="5v1Mt4Ug6ztc" id="cppheader5v1Mt4Ug6ztc" fileName="QStringList_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QStringList_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:50&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="i4mKd2igxi0p" id="cppheaderi4mKd2igxi0p" fileName="KSharedConfigPtr" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        KSharedConfigPtr.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:51&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="LYsvyt7Pfwm6" id="cppheaderLYsvyt7Pfwm6" fileName="QDockWidget_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QDockWidget_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:51&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="jYKYDzGVbE26" id="cppheaderjYKYDzGVbE26" fileName="QUndoView_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QUndoView_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:51&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="T2lo2MIlscJ3" id="cppheaderT2lo2MIlscJ3" fileName="RefactoringAssistant_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        RefactoringAssistant_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:52&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="ZEle77Ya7HM7" id="cppheaderZEle77Ya7HM7" fileName="KRecentFilesAction_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        KRecentFilesAction_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:52&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="KiaSDJOIAjc1" id="cppheaderKiaSDJOIAjc1" fileName="KActionMenu_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        KActionMenu_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:52&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="POsZ5TbzqdUH" id="cppheaderPOsZ5TbzqdUH" fileName="KToggleAction_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        KToggleAction_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:53&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="PHiNE2zl5wO6" id="cppheaderPHiNE2zl5wO6" fileName="KPlayerPopupSliderAction_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        KPlayerPopupSliderAction_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:53&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="fmK9xSpAaESf" id="cppheaderfmK9xSpAaESf" fileName="QToolButton_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QToolButton_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:53&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="6A6CeOhJBzQ6" id="cppheader6A6CeOhJBzQ6" fileName="KMenu_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        KMenu_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:54&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="vpcUMCfFS7Ii" id="cppheadervpcUMCfFS7Ii" fileName="QTimer" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QTimer.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:54&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="2QN9n4hnSfE3" id="cppheader2QN9n4hnSfE3" fileName="QTimer_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QTimer_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:54&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="fSp5637J1uPW" id="cppheaderfSp5637J1uPW" fileName="AlignToolBar_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        AlignToolBar_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:54&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="xz7wrVSvEMxt" id="cppheaderxz7wrVSvEMxt" fileName="QStackedWidget_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QStackedWidget_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:55&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="CR2OlxHsHtFX" id="cppheaderCR2OlxHsHtFX" fileName="QVBoxLayout_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QVBoxLayout_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:55&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="z93G2GnrlK90" id="cppheaderz93G2GnrlK90" fileName="SettingsDlg_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        SettingsDlg_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:55&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="uxtJyoUvvY9y" id="cppheaderuxtJyoUvvY9y" fileName="UMLViewImageExporterAll_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLViewImageExporterAll_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:56&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="CwXFoTcgQTzN" id="cppheaderCwXFoTcgQTzN" fileName="XhtmlGenerator_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        XhtmlGenerator_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:56&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="spkscrJplo2Z" id="cppheaderspkscrJplo2Z" fileName="KUndoStack_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        KUndoStack_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 20:46:56&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="zC5M9e0b3SnI" id="cppheaderzC5M9e0b3SnI" fileName="UMLClassifierListItem" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef UMLCLASSIFIERLISTITEM_H&amp;#010;#define UMLCLASSIFIERLISTITEM_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;umlobject.h&quot;&amp;#010;#include &quot;idtype.h&quot;&amp;#010;#include &quot;qstring.h&quot;&amp;#010;#include &quot;signature_type.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="zC5M9e0b3SnI" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class UMLClassifierListItem&amp;#010;Classifiers (classes, interfaces) have lists of operations,&amp;#010;attributes, templates and others.  This is a base class for&amp;#010;the items in this list.  This abstraction should remove&amp;#010;duplication of dialogs and allow for stereotypes in lists.&amp;#010;&amp;#010;@short A base class for classifier list items (e.g. attributes)&amp;#010;@author Jonathan Riddell&amp;#010;Bugs and comments to umbrello-devel@kde.org or http://bugs.kde.org" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="UMLClassifierListItem ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeoperation tag="operation_SjKKogcKTOEy" parent_id="SjKKogcKTOEy" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param parent &amp;#010;@param name &amp;#010;@param id " />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_VtRAKqVPuK2o" parent_id="VtRAKqVPuK2o" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Constructor.  Empty.&amp;#010;&amp;#010;@param parent    The parent to this operation.&amp;#010;         At first sight it would appear that the type of the&amp;#010;         parent should be UMLClassifier. However, the class&amp;#010;         UMLAttribute is also used for the parameters of&amp;#010;         operations, and in this case the UMLOperation is the&amp;#010;         parent." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_trc68oAbhcm2" parent_id="trc68oAbhcm2" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Destructor.  Empty." />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation tag="operation_SHPKaP8CLEpZ" parent_id="SHPKaP8CLEpZ" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Returns the type of the UMLClassifierListItem.&amp;#010;&amp;#010;@return  The type of the UMLClassifierListItem." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_uulZUVZulwEL" parent_id="uulZUVZulwEL" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Returns the type name of the UMLClassifierListItem.&amp;#010;&amp;#010;@return  The type name of the UMLClassifierListItem." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_5st6ybEqUyPw" parent_id="5st6ybEqUyPw" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Sets the type name of the UMLClassifierListItem.&amp;#010;DEPRECATED - use setType() instead.&amp;#010;&amp;#010;@param type      The type name of the UMLClassifierListItem." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_M4Przm72ey8c" parent_id="M4Przm72ey8c" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Sets the type of the UMLAttribute.&amp;#010;&amp;#010;@param type      Pointer to the UMLObject of the type." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_rSqFVh9plWfi" parent_id="rSqFVh9plWfi" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Returns a string representation of the list item.&amp;#010;&amp;#010;@param sig               What type of operation string to show.&amp;#010;@return  The string representation of the operation." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_kGtTkYB3Ityy" parent_id="kGtTkYB3Ityy" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Display the properties configuration dialog for the list item.&amp;#010;&amp;#010;@param parent    The parent widget.&amp;#010;@return  True for success of this operation." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_aXkqQio8C1yf" parent_id="aXkqQio8C1yf" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Copy the internal presentation of this object into the new&amp;#010;object." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_OazNcM4Arp0I" parent_id="OazNcM4Arp0I" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="The abstract method UMLObject::clone() must be implemented&amp;#010;by the classes inheriting from UMLClassifierListItem." />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //UMLCLASSIFIERLISTITEM_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLClassifierListItem.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:46&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield role_id="1" listClassName="" field_type="99" parent_id="o0A2leF0s6OK" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="o0A2leF0s6OK" writeOutText="false" indentLevel="1" text=" UMLObject ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="o0A2leF0s6OK" writeOutText="false" indentLevel="1" classfield_id="o0A2leF0s6OK" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="o0A2leF0s6OK" writeOutText="false" indentLevel="1" classfield_id="o0A2leF0s6OK" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="o0A2leF0s6OK" writeOutText="false" indentLevel="1" classfield_id="o0A2leF0s6OK" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="o0A2leF0s6OK" writeOutText="false" indentLevel="1" classfield_id="o0A2leF0s6OK" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="o0A2leF0s6OK" writeOutText="false" indentLevel="1" classfield_id="o0A2leF0s6OK" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="2621472" parent_id="vML37wIue0GS" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="vML37wIue0GS" writeOutText="false" indentLevel="1" text=" UMLEntityConstraint ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="" accessType="0" parent_id="vML37wIue0GS" writeOutText="false" indentLevel="1" classfield_id="vML37wIue0GS" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="1" parent_id="vML37wIue0GS" writeOutText="false" indentLevel="1" classfield_id="vML37wIue0GS" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="2" parent_id="vML37wIue0GS" writeOutText="false" indentLevel="1" classfield_id="vML37wIue0GS" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="3" parent_id="vML37wIue0GS" writeOutText="false" indentLevel="1" classfield_id="vML37wIue0GS" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="4" parent_id="vML37wIue0GS" writeOutText="false" indentLevel="1" classfield_id="vML37wIue0GS" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="2621472" parent_id="n6RRQ1F8aVBW" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="n6RRQ1F8aVBW" writeOutText="false" indentLevel="1" text=" UMLAttribute ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="" accessType="0" parent_id="n6RRQ1F8aVBW" writeOutText="false" indentLevel="1" classfield_id="n6RRQ1F8aVBW" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="1" parent_id="n6RRQ1F8aVBW" writeOutText="false" indentLevel="1" classfield_id="n6RRQ1F8aVBW" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="2" parent_id="n6RRQ1F8aVBW" writeOutText="false" indentLevel="1" classfield_id="n6RRQ1F8aVBW" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="3" parent_id="n6RRQ1F8aVBW" writeOutText="false" indentLevel="1" classfield_id="n6RRQ1F8aVBW" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="4" parent_id="n6RRQ1F8aVBW" writeOutText="false" indentLevel="1" classfield_id="n6RRQ1F8aVBW" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="VoqLYBDtljP0" id="cppheaderVoqLYBDtljP0" fileName="QTreeWidget" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef QTREEWIDGET_H&amp;#010;#define QTREEWIDGET_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="VoqLYBDtljP0" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" text="Class QTreeWidget&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="QTreeWidget ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //QTREEWIDGET_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QTreeWidget.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:02:52&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield role_id="0" listClassName="" field_type="99" parent_id="H7HBUneS0ho7" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="H7HBUneS0ho7" writeOutText="false" indentLevel="1" text=" RefactoringAssistant ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="" accessType="0" parent_id="H7HBUneS0ho7" writeOutText="false" indentLevel="1" classfield_id="H7HBUneS0ho7" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="1" parent_id="H7HBUneS0ho7" writeOutText="false" indentLevel="1" classfield_id="H7HBUneS0ho7" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="2" parent_id="H7HBUneS0ho7" writeOutText="false" indentLevel="1" classfield_id="H7HBUneS0ho7" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="3" parent_id="H7HBUneS0ho7" writeOutText="false" indentLevel="1" classfield_id="H7HBUneS0ho7" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="4" parent_id="H7HBUneS0ho7" writeOutText="false" indentLevel="1" classfield_id="H7HBUneS0ho7" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="n9VOC17QaolU" id="cppheadern9VOC17QaolU" fileName="const_UMLObject_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        const_UMLObject_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:02:53&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="m8aKuJpCgEf2" id="cppheaderm8aKuJpCgEf2" fileName="UMLClassifierListItem_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLClassifierListItem_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:02:53&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="w6p9G6t4JmSW" id="cppheaderw6p9G6t4JmSW" fileName="QTreeWidgetItem" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef QTREEWIDGETITEM_H&amp;#010;#define QTREEWIDGETITEM_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="w6p9G6t4JmSW" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" text="Class QTreeWidgetItem&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="QTreeWidgetItem ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //QTREEWIDGETITEM_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QTreeWidgetItem.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:02:56&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield role_id="0" listClassName="" field_type="99" parent_id="LhwQzaJU0Uy9" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="LhwQzaJU0Uy9" writeOutText="false" indentLevel="1" text=" RefactoringAssistant ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="" accessType="0" parent_id="LhwQzaJU0Uy9" writeOutText="false" indentLevel="1" classfield_id="LhwQzaJU0Uy9" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="1" parent_id="LhwQzaJU0Uy9" writeOutText="false" indentLevel="1" classfield_id="LhwQzaJU0Uy9" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="2" parent_id="LhwQzaJU0Uy9" writeOutText="false" indentLevel="1" classfield_id="LhwQzaJU0Uy9" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="3" parent_id="LhwQzaJU0Uy9" writeOutText="false" indentLevel="1" classfield_id="LhwQzaJU0Uy9" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="4" parent_id="LhwQzaJU0Uy9" writeOutText="false" indentLevel="1" classfield_id="LhwQzaJU0Uy9" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="Szod9Jha7CsN" id="cppheaderSzod9Jha7CsN" fileName="QTreeWidgetItem_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QTreeWidgetItem_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:02:54&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="1mR5QhN6rk7l" id="cppheader1mR5QhN6rk7l" fileName="const_QTreeWidgetItem_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        const_QTreeWidgetItem_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:02:54&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="7EQ1DtdY3xOw" id="cppheader7EQ1DtdY3xOw" fileName="QDragMoveEvent" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QDragMoveEvent.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:02:55&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="klyMKdw6qkra" id="cppheaderklyMKdw6qkra" fileName="QDragMoveEvent_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QDragMoveEvent_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:02:55&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="ko6aZvAbFatN" id="cppheaderko6aZvAbFatN" fileName="QDropEvent" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QDropEvent.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:02:55&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="9paxApwLfSaQ" id="cppheader9paxApwLfSaQ" fileName="QDropEvent_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QDropEvent_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:02:55&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="BwSNqFnI0jvf" id="cppheaderBwSNqFnI0jvf" fileName="QMap" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QMap.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:02:56&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="Ia6JlsvZ9yAj" id="cppheaderIa6JlsvZ9yAj" fileName="QMap_QTreeWidgetItem_UMLObject_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QMap_QTreeWidgetItem_UMLObject_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:02:56&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="wQR0lBZLC0ti" id="cppheaderwQR0lBZLC0ti" fileName="const_char_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        const_char_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:02:56&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="KR2QdOwaoLYX" id="cppheaderKR2QdOwaoLYX" fileName="Icon_Utils" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        Icon_Utils.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:01&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="KR2QdOwaoLYX" fileExt=".h" parent_class="W7th5kPYv32y" id="cppheaderW7th5kPYv32y" fileName="Icon_Type" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        Icon_Type.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:02&amp;#010;The original location of this file is Icon_Utils&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="bJJlEhCW8Ewj" id="cppheaderbJJlEhCW8Ewj" fileName="const_Icon_Utils_Icon_Type" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        const_Icon_Utils_Icon_Type.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:02&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="iE4KpEKgZfyX" id="cppheaderiE4KpEKgZfyX" fileName="UMLPackage" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef UMLPACKAGE_H&amp;#010;#define UMLPACKAGE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;umlcanvasobject.h&quot;&amp;#010;#include &quot;idtype.h&quot;&amp;#010;#include &quot;umlobjectlist.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="iE4KpEKgZfyX" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class UMLPackage&amp;#010;This class contains the non-graphical information required for a UML&amp;#010;Package.&amp;#010;This class inherits from @ref UMLCanvasObject which contains most of the&amp;#010;information.&amp;#010;&amp;#010;@short Non-graphical information for a Package.&amp;#010;@author Jonathan Riddell&amp;#010;@see UMLCanvasObject&amp;#010;Bugs and comments to umbrello-devel@kde.org or http://bugs.kde.org" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="UMLPackage ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock tag="tblock_0" parent_id="ibF2xin0ti2x" indentLevel="1" text=" UMLObjectList m_objects;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="References to the objects contained in this package.&amp;#010;The UMLPackage is the owner of the objects." />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="ibF2xin0ti2x" writeOutText="false" indentLevel="1" classfield_id="ibF2xin0ti2x" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of m_objects&amp;#010;References to the objects contained in this package.&amp;#010;The UMLPackage is the owner of the objects.&amp;#010;@return the value of m_objects" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="ibF2xin0ti2x" writeOutText="false" indentLevel="1" classfield_id="ibF2xin0ti2x" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of m_objects&amp;#010;References to the objects contained in this package.&amp;#010;The UMLPackage is the owner of the objects.&amp;#010;@param value the value of m_objects" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation tag="operation_OWJJCP1RKOVl" parent_id="OWJJCP1RKOVl" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Loads the &lt;UML:Package> XMI element.&amp;#010;Auxiliary to UMLObject::loadFromXMI." />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeoperation tag="operation_6KsXzYd8gs6J" parent_id="6KsXzYd8gs6J" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param name &amp;#010;@param id " />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_b4UFwYY6hpGz" parent_id="b4UFwYY6hpGz" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty deconstructor." />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation tag="operation_HvexKCarsuch" parent_id="HvexKCarsuch" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Copy the internal presentation of this object into the new&amp;#010;object." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_jD5P3LOIE0EX" parent_id="jD5P3LOIE0EX" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Make a clone of this object." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_Jl6MwlKgzP30" parent_id="Jl6MwlKgzP30" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Adds an object in this package.&amp;#010;&amp;#010;@param pObject   Pointer to the UMLObject to add.&amp;#010;@return    True if the object was actually added." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_5Xx4uy2dPJXo" parent_id="5Xx4uy2dPJXo" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Removes an object from this package.&amp;#010;Does not physically delete the object.&amp;#010;&amp;#010;@param pObject   Pointer to the UMLObject to be removed." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_6SgQmrhqOcsJ" parent_id="6SgQmrhqOcsJ" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Removes all objects from this package.&amp;#010;Inner containers (e.g. nested packages) are removed recursively." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_avwxETk1R74F" parent_id="avwxETk1R74F" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Returns the list of objects contained in this package." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_ch40HwJqpEn3" parent_id="ch40HwJqpEn3" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Adds an existing association to the matching concept in the list of concepts.&amp;#010;The selection of the matching concept depends on the association type:&amp;#010;For generalizations, the assoc is added to the concept that matches role A.&amp;#010;For aggregations and compositions , the assoc is added to the concept&amp;#010;that matches role B.&amp;#010;&amp;#010;@param assoc     The association to add" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_90BckDoMsqN9" parent_id="90BckDoMsqN9" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Remove the association from the participating concepts." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_msRt0LU9Lfk5" parent_id="msRt0LU9Lfk5" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Find the object of the given name in the list of contained objects.&amp;#010;&amp;#010;@param name              The name to seek.&amp;#010;@return  Pointer to the UMLObject found or NULL if not found." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_I5FdixgXT6Do" parent_id="I5FdixgXT6Do" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Find the object of the given ID in the list of contained objects.&amp;#010;&amp;#010;@param id                The ID to seek.&amp;#010;@return  Pointer to the UMLObject found or NULL if not found." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_q1OH5b4xdwCQ" parent_id="q1OH5b4xdwCQ" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Append all packages from this packaed ( and those from nested packeges)&amp;#010;to the given UMLPackageList.&amp;#010;&amp;#010;@param packages     The list to append to&amp;#010;@param includeNested  Whether to include the packages from nested packages&amp;#010;                         (default:true)" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_5HYIsKwamHQ7" parent_id="5HYIsKwamHQ7" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Append all classifiers from this package (and those from&amp;#010;nested packages) to the given UMLClassifierList.&amp;#010;&amp;#010;@param classifiers               The list to append to.&amp;#010;@param includeNested             Whether to include the classifiers from&amp;#010;                         nested packages (default: true.)" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_GmuLo8pi3C5P" parent_id="GmuLo8pi3C5P" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Append all classes from this package (and those from&amp;#010;nested packages) to the given UMLClassifierList.&amp;#010;&amp;#010;@param classes           The list to append to.&amp;#010;@param includeNested             Whether to include the classes from&amp;#010;                         nested packages (default: true.)" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_e8RhKW60GvUD" parent_id="e8RhKW60GvUD" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Append all classes and interfaces from this package (and those&amp;#010;from nested packages) to the given UMLClassifierList.&amp;#010;&amp;#010;@param classifiers               The list to append to.&amp;#010;@param includeNested             Whether to include the classifiers from&amp;#010;                         nested packages (default: true.)" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_37yJ0QURz7vs" parent_id="37yJ0QURz7vs" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Append all entities from this package (and those&amp;#010;from nested packages) to the given UMLEntityList.&amp;#010;&amp;#010;@param entities               The list to append to.&amp;#010;@param includeNested          Whether to include the entities from&amp;#010;                         nested packages (default: true.)" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_cq8zGf5AIWmS" parent_id="cq8zGf5AIWmS" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Append all interfaces from this package (and those from&amp;#010;nested packages) to the given UMLClassifierList.&amp;#010;&amp;#010;@param interfaces                The list to append to.&amp;#010;@param includeNested             Whether to include the interfaces from&amp;#010;                         nested packages (default: true.)" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_6DoOkarirXGd" parent_id="6DoOkarirXGd" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Resolve types. Required when dealing with foreign XMI files.&amp;#010;Needs to be called after all UML objects are loaded from file.&amp;#010;Overrides the method from UMLObject.&amp;#010;Calls resolveRef() on each contained object.&amp;#010;&amp;#010;@return  True for overall success." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_p9cFdmrjxg6h" parent_id="p9cFdmrjxg6h" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Creates the &lt;UML:Package> XMI element." />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //UMLPACKAGE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLPackage.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:54&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield role_id="1" listClassName="" field_type="99" parent_id="m845GuXORfg8" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="m845GuXORfg8" writeOutText="false" indentLevel="1" text=" UMLCanvasObject ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="m845GuXORfg8" writeOutText="false" indentLevel="1" classfield_id="m845GuXORfg8" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="m845GuXORfg8" writeOutText="false" indentLevel="1" classfield_id="m845GuXORfg8" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="m845GuXORfg8" writeOutText="false" indentLevel="1" classfield_id="m845GuXORfg8" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="m845GuXORfg8" writeOutText="false" indentLevel="1" classfield_id="m845GuXORfg8" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="m845GuXORfg8" writeOutText="false" indentLevel="1" classfield_id="m845GuXORfg8" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="ibF2xin0ti2x" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="tblock_0" parent_id="ibF2xin0ti2x" indentLevel="1" text=" UMLObjectList m_objects;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="References to the objects contained in this package.&amp;#010;The UMLPackage is the owner of the objects." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="ibF2xin0ti2x" writeOutText="false" indentLevel="1" classfield_id="ibF2xin0ti2x" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of m_objects&amp;#010;References to the objects contained in this package.&amp;#010;The UMLPackage is the owner of the objects.&amp;#010;@return the value of m_objects" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="ibF2xin0ti2x" writeOutText="false" indentLevel="1" classfield_id="ibF2xin0ti2x" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of m_objects&amp;#010;References to the objects contained in this package.&amp;#010;The UMLPackage is the owner of the objects.&amp;#010;@param value the value of m_objects" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="7012451" parent_id="hHQtcEd7mnhT" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="hHQtcEd7mnhT" writeOutText="false" indentLevel="1" text=" UMLClassifier ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="" accessType="0" parent_id="hHQtcEd7mnhT" writeOutText="false" indentLevel="1" classfield_id="hHQtcEd7mnhT" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="1" parent_id="hHQtcEd7mnhT" writeOutText="false" indentLevel="1" classfield_id="hHQtcEd7mnhT" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="2" parent_id="hHQtcEd7mnhT" writeOutText="false" indentLevel="1" classfield_id="hHQtcEd7mnhT" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="3" parent_id="hHQtcEd7mnhT" writeOutText="false" indentLevel="1" classfield_id="hHQtcEd7mnhT" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="4" parent_id="hHQtcEd7mnhT" writeOutText="false" indentLevel="1" classfield_id="hHQtcEd7mnhT" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="DEF25bcCX9gg" id="cppheaderDEF25bcCX9gg" fileName="QList_UMLPackage_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QList_UMLPackage_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:24&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="EkW5TcpBorWd" id="cppheaderEkW5TcpBorWd" fileName="UMLPackageList" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLPackageList.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:25&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="5oIcTG9eSPeV" id="cppheader5oIcTG9eSPeV" fileName="QListIterator_UMLPackage_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QListIterator_UMLPackage_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:25&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="0GfVPKBd2ggW" id="cppheader0GfVPKBd2ggW" fileName="UMLPackageListIt" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLPackageListIt.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:25&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="GTh4LBgOzy1Q" id="cppheaderGTh4LBgOzy1Q" fileName="UMLStereotype" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLStereotype.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:25&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="2FdJxbK7JYEp" id="cppheader2FdJxbK7JYEp" fileName="const_UMLObject_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        const_UMLObject_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:26&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="6bgFIb8avmQP" id="cppheader6bgFIb8avmQP" fileName="UMLStereotype_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLStereotype_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:27&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="g2AlSN6Uj0Sp" id="cppheaderg2AlSN6Uj0Sp" fileName="UMLPackage_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLPackage_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:27&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="aowHoM487F3E" id="cppheaderaowHoM487F3E" fileName="const_UMLStereotype_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        const_UMLStereotype_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:27&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="7Vb3818Ub7rC" id="cppheader7Vb3818Ub7rC" fileName="QList_UMLClassifier_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QList_UMLClassifier_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:31&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="RuMJhLZC6vss" id="cppheaderRuMJhLZC6vss" fileName="UMLClassifierList" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLClassifierList.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:31&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="IBAsTfCY8nbF" id="cppheaderIBAsTfCY8nbF" fileName="QListIterator_UMLClassifier_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QListIterator_UMLClassifier_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:31&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="ojjOqZYGTuXA" id="cppheaderojjOqZYGTuXA" fileName="UMLClassifierListIt" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLClassifierListIt.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:31&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="D6KJ1AAHLIAm" id="cppheaderD6KJ1AAHLIAm" fileName="UMLEntityConstraint" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef UMLENTITYCONSTRAINT_H&amp;#010;#define UMLENTITYCONSTRAINT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;umlclassifierlistitem.h&quot;&amp;#010;#include &quot;idtype.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="D6KJ1AAHLIAm" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class UMLEntityConstraint&amp;#010;                                                                        *&amp;#010;  This program is free software; you can redistribute it and/or modify  *&amp;#010;  it under the terms of the GNU General Public License as published by  *&amp;#010;  the Free Software Foundation; either version 2 of the License, or     *&amp;#010;  (at your option) any later version.                                   *&amp;#010;                                                                        *&amp;#010;  copyright (C) 2002-2006                                               *&amp;#010;  Umbrello UML Modeller Authors &lt;umbrello-devel@kde.org>                  *&amp;#010;//**&amp;#010;This class is used to set up information for a entity constraint.&amp;#010;&amp;#010;@short Sets up entity constraint information.&amp;#010;@author Sharan Rao&amp;#010;@see UMLObject UMLClassifierListItem&amp;#010;Bugs and comments to umbrello-devel@kde.org or http://bugs.kde.org" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="UMLEntityConstraint ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
                <codeoperation tag="operation_0s6csM5RAlTq" parent_id="0s6csM5RAlTq" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Sets up a constraint.&amp;#010;&amp;#010;@param parent    The parent of this UMLEntityConstraint.&amp;#010;@param name      The name of this UMLEntityConstraint.&amp;#010;@param id        The unique id given to this UMLEntityConstraint." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_EpGV1zSxUyw0" parent_id="EpGV1zSxUyw0" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Sets up a constraint.&amp;#010;&amp;#010;@param parent    The parent of this UMLEntityConstraint." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_KzV58CBwpDck" parent_id="KzV58CBwpDck" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="destructor." />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation tag="operation_3AmSQ0xcpD7q" parent_id="3AmSQ0xcpD7q" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Overloaded '==' operator" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_p9ibO9leWXi4" parent_id="p9ibO9leWXi4" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Copy the internal presentation of this object into the UMLEntityConstraint&amp;#010;object." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_KmD9xprmwaLJ" parent_id="KmD9xprmwaLJ" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Make a clone of the UMLEntityConstraint." />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //UMLENTITYCONSTRAINT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLEntityConstraint.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:33&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield role_id="1" listClassName="" field_type="99" parent_id="vML37wIue0GS" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="vML37wIue0GS" writeOutText="false" indentLevel="1" text=" UMLClassifierListItem ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="vML37wIue0GS" writeOutText="false" indentLevel="1" classfield_id="vML37wIue0GS" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="vML37wIue0GS" writeOutText="false" indentLevel="1" classfield_id="vML37wIue0GS" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="vML37wIue0GS" writeOutText="false" indentLevel="1" classfield_id="vML37wIue0GS" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="vML37wIue0GS" writeOutText="false" indentLevel="1" classfield_id="vML37wIue0GS" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="vML37wIue0GS" writeOutText="false" indentLevel="1" classfield_id="vML37wIue0GS" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="2621472" parent_id="dSF0DDIj0MBL" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="dSF0DDIj0MBL" writeOutText="false" indentLevel="1" text=" UMLForeignKeyConstraint ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="" accessType="0" parent_id="dSF0DDIj0MBL" writeOutText="false" indentLevel="1" classfield_id="dSF0DDIj0MBL" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="1" parent_id="dSF0DDIj0MBL" writeOutText="false" indentLevel="1" classfield_id="dSF0DDIj0MBL" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="2" parent_id="dSF0DDIj0MBL" writeOutText="false" indentLevel="1" classfield_id="dSF0DDIj0MBL" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="3" parent_id="dSF0DDIj0MBL" writeOutText="false" indentLevel="1" classfield_id="dSF0DDIj0MBL" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="4" parent_id="dSF0DDIj0MBL" writeOutText="false" indentLevel="1" classfield_id="dSF0DDIj0MBL" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="BYldWgdbl9h8" id="cppheaderBYldWgdbl9h8" fileName="const_UMLEntityConstraint_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        const_UMLEntityConstraint_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:32&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="BN0IVbZqNkxK" id="cppheaderBN0IVbZqNkxK" fileName="UMLEntityAttribute" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef UMLENTITYATTRIBUTE_H&amp;#010;#define UMLENTITYATTRIBUTE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="BN0IVbZqNkxK" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" text="Class UMLEntityAttribute&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="UMLEntityAttribute ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //UMLENTITYATTRIBUTE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLEntityAttribute.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:36&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield role_id="0" listClassName="" field_type="99" parent_id="3QrWL5rFJzA4" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="3QrWL5rFJzA4" writeOutText="false" indentLevel="1" text=" UMLForeignKeyConstraint ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="" accessType="0" parent_id="3QrWL5rFJzA4" writeOutText="false" indentLevel="1" classfield_id="3QrWL5rFJzA4" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="1" parent_id="3QrWL5rFJzA4" writeOutText="false" indentLevel="1" classfield_id="3QrWL5rFJzA4" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="2" parent_id="3QrWL5rFJzA4" writeOutText="false" indentLevel="1" classfield_id="3QrWL5rFJzA4" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="3" parent_id="3QrWL5rFJzA4" writeOutText="false" indentLevel="1" classfield_id="3QrWL5rFJzA4" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="4" parent_id="3QrWL5rFJzA4" writeOutText="false" indentLevel="1" classfield_id="3QrWL5rFJzA4" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="99" parent_id="cJxtI7xQXTwX" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="cJxtI7xQXTwX" writeOutText="false" indentLevel="1" text=" UMLForeignKeyConstraint ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="" accessType="0" parent_id="cJxtI7xQXTwX" writeOutText="false" indentLevel="1" classfield_id="cJxtI7xQXTwX" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="1" parent_id="cJxtI7xQXTwX" writeOutText="false" indentLevel="1" classfield_id="cJxtI7xQXTwX" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="2" parent_id="cJxtI7xQXTwX" writeOutText="false" indentLevel="1" classfield_id="cJxtI7xQXTwX" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="3" parent_id="cJxtI7xQXTwX" writeOutText="false" indentLevel="1" classfield_id="cJxtI7xQXTwX" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="4" parent_id="cJxtI7xQXTwX" writeOutText="false" indentLevel="1" classfield_id="cJxtI7xQXTwX" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="99" parent_id="zM417aPbMqXm" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="zM417aPbMqXm" writeOutText="false" indentLevel="1" text=" UMLForeignKeyConstraint ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="" accessType="0" parent_id="zM417aPbMqXm" writeOutText="false" indentLevel="1" classfield_id="zM417aPbMqXm" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="1" parent_id="zM417aPbMqXm" writeOutText="false" indentLevel="1" classfield_id="zM417aPbMqXm" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="2" parent_id="zM417aPbMqXm" writeOutText="false" indentLevel="1" classfield_id="zM417aPbMqXm" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="3" parent_id="zM417aPbMqXm" writeOutText="false" indentLevel="1" classfield_id="zM417aPbMqXm" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="4" parent_id="zM417aPbMqXm" writeOutText="false" indentLevel="1" classfield_id="zM417aPbMqXm" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="99" parent_id="TC5j4ZHtsgBx" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="TC5j4ZHtsgBx" writeOutText="false" indentLevel="1" text=" UMLForeignKeyConstraint ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="" accessType="0" parent_id="TC5j4ZHtsgBx" writeOutText="false" indentLevel="1" classfield_id="TC5j4ZHtsgBx" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="1" parent_id="TC5j4ZHtsgBx" writeOutText="false" indentLevel="1" classfield_id="TC5j4ZHtsgBx" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="2" parent_id="TC5j4ZHtsgBx" writeOutText="false" indentLevel="1" classfield_id="TC5j4ZHtsgBx" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="3" parent_id="TC5j4ZHtsgBx" writeOutText="false" indentLevel="1" classfield_id="TC5j4ZHtsgBx" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="4" parent_id="TC5j4ZHtsgBx" writeOutText="false" indentLevel="1" classfield_id="TC5j4ZHtsgBx" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="99" parent_id="S8jImtE85ZZl" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="S8jImtE85ZZl" writeOutText="false" indentLevel="1" text=" UMLForeignKeyConstraint ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="" accessType="0" parent_id="S8jImtE85ZZl" writeOutText="false" indentLevel="1" classfield_id="S8jImtE85ZZl" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="1" parent_id="S8jImtE85ZZl" writeOutText="false" indentLevel="1" classfield_id="S8jImtE85ZZl" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="2" parent_id="S8jImtE85ZZl" writeOutText="false" indentLevel="1" classfield_id="S8jImtE85ZZl" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="3" parent_id="S8jImtE85ZZl" writeOutText="false" indentLevel="1" classfield_id="S8jImtE85ZZl" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="4" parent_id="S8jImtE85ZZl" writeOutText="false" indentLevel="1" classfield_id="S8jImtE85ZZl" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="Yp4SNPl2TgE2" id="cppheaderYp4SNPl2TgE2" fileName="UMLEntity" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLEntity.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:32&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="MRvaUd4dy2vR" id="cppheaderMRvaUd4dy2vR" fileName="UMLForeignKeyConstraint" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef UMLFOREIGNKEYCONSTRAINT_H&amp;#010;#define UMLFOREIGNKEYCONSTRAINT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;umlentityconstraint.h&quot;&amp;#010;#include &quot;.h&quot;&amp;#010;#include &quot;umlentityattribute.h&quot;&amp;#010;#include &quot;uml.h&quot;&amp;#010;#include &quot;idtype.h&quot;&amp;#010;#include &quot;qstring.h&quot;&amp;#010;#include &quot;signature_type.h&quot;&amp;#010;#include &quot;updatedeleteaction.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="MRvaUd4dy2vR" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class UMLForeignKeyConstraint&amp;#010;This class is used to set up information for a foreign key entity constraint.&amp;#010;&amp;#010;@short Sets up Foreign Key  entity constraint information.&amp;#010;@author Sharan Rao&amp;#010;@see UMLObject UMLClassifierListItem UMLEntityConstraint&amp;#010;Bugs and comments to umbrello-devel@kde.org or http://bugs.kde.org" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="UMLForeignKeyConstraint ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
                <codeoperation tag="operation_31HHSWXIyU1k" parent_id="31HHSWXIyU1k" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Sets up a constraint.&amp;#010;&amp;#010;@param parent    The parent of this UMLForeignKeyConstraint.&amp;#010;@param name      The name of this UMLForeignKeyConstraint.&amp;#010;@param id        The unique id given to this UMLForeignKeyConstraint." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_tGnV0gsHcCaH" parent_id="tGnV0gsHcCaH" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Sets up a constraint.&amp;#010;&amp;#010;@param parent    The parent of this UMLForeignKeyConstraint." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_frLoP36ubMsM" parent_id="frLoP36ubMsM" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="destructor." />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation tag="operation_iSBRnQJee49f" parent_id="iSBRnQJee49f" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Overloaded '==' operator" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_UGq0njJivGIB" parent_id="UGq0njJivGIB" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Copy the internal presentation of this object into the UMLForeignKeyConstraint&amp;#010;object." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_zEaYbRs3fi4S" parent_id="zEaYbRs3fi4S" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Make a clone of the UMLForeignKeyConstraint." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_1uyGq6unLSLu" parent_id="1uyGq6unLSLu" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Returns a string representation of the UMLForeignKeyConstraint.&amp;#010;&amp;#010;@param sig               If true will show the attribute type and&amp;#010;                 initial value.&amp;#010;@return  Returns a string representation of the UMLAttribute." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_CrcVIvPB6Lk0" parent_id="CrcVIvPB6Lk0" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Set the Referenced Entity&amp;#010;@param ent The Entity to Reference" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_sBfyUNxm6FSr" parent_id="sBfyUNxm6FSr" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_fnKrk7JaGzYk" parent_id="fnKrk7JaGzYk" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Creates the &lt;UML:ForeignKeyConstraint> XMI element." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_wznAwMvHnShW" parent_id="wznAwMvHnShW" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Display the properties configuration dialog for the attribute." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_UZ2I1hmOd7h1" parent_id="UZ2I1hmOd7h1" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Adds the attribute pair to the attributeMap&amp;#010;@param pAttr The Attribute of the Parent Entity&amp;#010;@param rAttr The Attribute of the Referenced Entity&amp;#010;@return true if the attribute pair could be added successfully" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_62DKgOY0JBvL" parent_id="62DKgOY0JBvL" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Removes an Attribute pair&amp;#010;@param pAttr The Attribute of the Parent Entity in the map. This attribute is the&amp;#010;key of the map&amp;#010;@return true of the attribute pair could be removed successfully" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_l814JvOil9iN" parent_id="l814JvOil9iN" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Check if a attribute pair already exists&amp;#010;@param pAttr The Attribute of the Parent Entity&amp;#010;@param rAttr The Attribute of the Referenced Entity&amp;#010;@return true if the attribute pair could be found." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_YOIgw4zm0Y1K" parent_id="YOIgw4zm0Y1K" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_PUK1GVx6nqN7" parent_id="PUK1GVx6nqN7" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_6hBtNURnwlmB" parent_id="6hBtNURnwlmB" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_VlOejyvnf6e0" parent_id="VlOejyvnf6e0" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param uda " />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_YCoQuqYPZw1G" parent_id="YCoQuqYPZw1G" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param uda " />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_neb1Xem3qYUi" parent_id="neb1Xem3qYUi" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Clears all mappings between local and referenced attributes" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_P06wv7Bn2CH0" parent_id="P06wv7Bn2CH0" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Remimplementation from base classes&amp;#010;Used to resolve forward references to referenced entities in xmi" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation tag="operation_RXiF5AvSB1N6" parent_id="RXiF5AvSB1N6" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_6PaEANtZuZox" parent_id="6PaEANtZuZox" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Loads the &lt;UML:ForeignKeyConstraint> XMI element." />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock tag="tblock_0" parent_id="RpxJMjH4RhvA" indentLevel="1" text=" Uml::IDType m_pReferencedEntityID;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Used to resolve forward references to UMLEntity" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_2" parent_id="2uqu80wuDgc3" indentLevel="1" text=" QMap&lt; UMLEntityAttribute *, Uml :: IDType > m_pEntityAttributeIDMap;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Used to resolve forward references to UMLEntityAttributes&amp;#010;Key -> The local attribute&amp;#010;Value -> Id of the attribute it is mapping to" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_5" parent_id="INWLuNzuFnoL" indentLevel="1" text=" UMLEntity* m_ReferencedEntity;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The UMLEntity that this foreign key references" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_8" parent_id="HjrRbtlPRxBp" indentLevel="1" text=" QMap&lt; UMLEntityAttribute *, UMLEntityAttribute * > m_AttributeMap;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_11" parent_id="BalGn3zgWuNw" indentLevel="1" text=" UpdateDeleteAction m_UpdateAction;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_14" parent_id="CcA7cFDrw4IY" indentLevel="1" text=" UpdateDeleteAction m_DeleteAction;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="RpxJMjH4RhvA" writeOutText="false" indentLevel="1" classfield_id="RpxJMjH4RhvA" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of m_pReferencedEntityID&amp;#010;Used to resolve forward references to UMLEntity&amp;#010;@return the value of m_pReferencedEntityID" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="RpxJMjH4RhvA" writeOutText="false" indentLevel="1" classfield_id="RpxJMjH4RhvA" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of m_pReferencedEntityID&amp;#010;Used to resolve forward references to UMLEntity&amp;#010;@param value the value of m_pReferencedEntityID" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_3" accessType="0" parent_id="2uqu80wuDgc3" writeOutText="false" indentLevel="1" classfield_id="2uqu80wuDgc3" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of m_pEntityAttributeIDMap&amp;#010;Used to resolve forward references to UMLEntityAttributes&amp;#010;Key -> The local attribute&amp;#010;Value -> Id of the attribute it is mapping to&amp;#010;@return the value of m_pEntityAttributeIDMap" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_4" accessType="1" parent_id="2uqu80wuDgc3" writeOutText="false" indentLevel="1" classfield_id="2uqu80wuDgc3" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of m_pEntityAttributeIDMap&amp;#010;Used to resolve forward references to UMLEntityAttributes&amp;#010;Key -> The local attribute&amp;#010;Value -> Id of the attribute it is mapping to&amp;#010;@param value the value of m_pEntityAttributeIDMap" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_6" accessType="0" parent_id="INWLuNzuFnoL" writeOutText="false" indentLevel="1" classfield_id="INWLuNzuFnoL" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of m_ReferencedEntity&amp;#010;The UMLEntity that this foreign key references&amp;#010;@return the value of m_ReferencedEntity" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_7" accessType="1" parent_id="INWLuNzuFnoL" writeOutText="false" indentLevel="1" classfield_id="INWLuNzuFnoL" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of m_ReferencedEntity&amp;#010;The UMLEntity that this foreign key references&amp;#010;@param value the value of m_ReferencedEntity" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_9" accessType="0" parent_id="HjrRbtlPRxBp" writeOutText="false" indentLevel="1" classfield_id="HjrRbtlPRxBp" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_10" accessType="1" parent_id="HjrRbtlPRxBp" writeOutText="false" indentLevel="1" classfield_id="HjrRbtlPRxBp" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_12" accessType="0" parent_id="BalGn3zgWuNw" writeOutText="false" indentLevel="1" classfield_id="BalGn3zgWuNw" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_13" accessType="1" parent_id="BalGn3zgWuNw" writeOutText="false" indentLevel="1" classfield_id="BalGn3zgWuNw" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_15" accessType="0" parent_id="CcA7cFDrw4IY" writeOutText="false" indentLevel="1" classfield_id="CcA7cFDrw4IY" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_16" accessType="1" parent_id="CcA7cFDrw4IY" writeOutText="false" indentLevel="1" classfield_id="CcA7cFDrw4IY" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation tag="operation_7Yr7k67brdFq" parent_id="7Yr7k67brdFq" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_3Tt5JxspVnLk" parent_id="3Tt5JxspVnLk" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Initialisation of common variables" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //UMLFOREIGNKEYCONSTRAINT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLForeignKeyConstraint.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:36&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield role_id="1" listClassName="" field_type="99" parent_id="dSF0DDIj0MBL" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="dSF0DDIj0MBL" writeOutText="false" indentLevel="1" text=" UMLEntityConstraint ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="dSF0DDIj0MBL" writeOutText="false" indentLevel="1" classfield_id="dSF0DDIj0MBL" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="dSF0DDIj0MBL" writeOutText="false" indentLevel="1" classfield_id="dSF0DDIj0MBL" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="dSF0DDIj0MBL" writeOutText="false" indentLevel="1" classfield_id="dSF0DDIj0MBL" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="dSF0DDIj0MBL" writeOutText="false" indentLevel="1" classfield_id="dSF0DDIj0MBL" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="dSF0DDIj0MBL" writeOutText="false" indentLevel="1" classfield_id="dSF0DDIj0MBL" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="7667826" parent_id="ouIG65ecTuGN" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="ouIG65ecTuGN" writeOutText="false" indentLevel="1" text="  ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="ouIG65ecTuGN" writeOutText="false" indentLevel="1" classfield_id="ouIG65ecTuGN" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="ouIG65ecTuGN" writeOutText="false" indentLevel="1" classfield_id="ouIG65ecTuGN" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="ouIG65ecTuGN" writeOutText="false" indentLevel="1" classfield_id="ouIG65ecTuGN" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="ouIG65ecTuGN" writeOutText="false" indentLevel="1" classfield_id="ouIG65ecTuGN" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="ouIG65ecTuGN" writeOutText="false" indentLevel="1" classfield_id="ouIG65ecTuGN" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="7667826" parent_id="3QrWL5rFJzA4" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="3QrWL5rFJzA4" writeOutText="false" indentLevel="1" text=" UMLEntityAttribute ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="3QrWL5rFJzA4" writeOutText="false" indentLevel="1" classfield_id="3QrWL5rFJzA4" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="3QrWL5rFJzA4" writeOutText="false" indentLevel="1" classfield_id="3QrWL5rFJzA4" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="3QrWL5rFJzA4" writeOutText="false" indentLevel="1" classfield_id="3QrWL5rFJzA4" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="3QrWL5rFJzA4" writeOutText="false" indentLevel="1" classfield_id="3QrWL5rFJzA4" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="3QrWL5rFJzA4" writeOutText="false" indentLevel="1" classfield_id="3QrWL5rFJzA4" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="7667826" parent_id="cJxtI7xQXTwX" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="cJxtI7xQXTwX" writeOutText="false" indentLevel="1" text=" UMLEntityAttribute ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="cJxtI7xQXTwX" writeOutText="false" indentLevel="1" classfield_id="cJxtI7xQXTwX" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="cJxtI7xQXTwX" writeOutText="false" indentLevel="1" classfield_id="cJxtI7xQXTwX" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="cJxtI7xQXTwX" writeOutText="false" indentLevel="1" classfield_id="cJxtI7xQXTwX" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="cJxtI7xQXTwX" writeOutText="false" indentLevel="1" classfield_id="cJxtI7xQXTwX" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="cJxtI7xQXTwX" writeOutText="false" indentLevel="1" classfield_id="cJxtI7xQXTwX" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="7667826" parent_id="Bm4gE1DaNprp" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="Bm4gE1DaNprp" writeOutText="false" indentLevel="1" text="  ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="Bm4gE1DaNprp" writeOutText="false" indentLevel="1" classfield_id="Bm4gE1DaNprp" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="Bm4gE1DaNprp" writeOutText="false" indentLevel="1" classfield_id="Bm4gE1DaNprp" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="Bm4gE1DaNprp" writeOutText="false" indentLevel="1" classfield_id="Bm4gE1DaNprp" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="Bm4gE1DaNprp" writeOutText="false" indentLevel="1" classfield_id="Bm4gE1DaNprp" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="Bm4gE1DaNprp" writeOutText="false" indentLevel="1" classfield_id="Bm4gE1DaNprp" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="RpxJMjH4RhvA" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="tblock_0" parent_id="RpxJMjH4RhvA" indentLevel="1" text=" Uml::IDType m_pReferencedEntityID;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Used to resolve forward references to UMLEntity" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="RpxJMjH4RhvA" writeOutText="false" indentLevel="1" classfield_id="RpxJMjH4RhvA" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of m_pReferencedEntityID&amp;#010;Used to resolve forward references to UMLEntity&amp;#010;@return the value of m_pReferencedEntityID" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="RpxJMjH4RhvA" writeOutText="false" indentLevel="1" classfield_id="RpxJMjH4RhvA" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of m_pReferencedEntityID&amp;#010;Used to resolve forward references to UMLEntity&amp;#010;@param value the value of m_pReferencedEntityID" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="40" parent_id="GhJVlFrD2nWO" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="GhJVlFrD2nWO" writeOutText="false" indentLevel="1" text="  ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="GhJVlFrD2nWO" writeOutText="false" indentLevel="1" classfield_id="GhJVlFrD2nWO" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="GhJVlFrD2nWO" writeOutText="false" indentLevel="1" classfield_id="GhJVlFrD2nWO" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="GhJVlFrD2nWO" writeOutText="false" indentLevel="1" classfield_id="GhJVlFrD2nWO" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="GhJVlFrD2nWO" writeOutText="false" indentLevel="1" classfield_id="GhJVlFrD2nWO" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="GhJVlFrD2nWO" writeOutText="false" indentLevel="1" classfield_id="GhJVlFrD2nWO" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="40" parent_id="zM417aPbMqXm" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="zM417aPbMqXm" writeOutText="false" indentLevel="1" text=" UMLEntityAttribute ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="zM417aPbMqXm" writeOutText="false" indentLevel="1" classfield_id="zM417aPbMqXm" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="zM417aPbMqXm" writeOutText="false" indentLevel="1" classfield_id="zM417aPbMqXm" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="zM417aPbMqXm" writeOutText="false" indentLevel="1" classfield_id="zM417aPbMqXm" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="zM417aPbMqXm" writeOutText="false" indentLevel="1" classfield_id="zM417aPbMqXm" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="zM417aPbMqXm" writeOutText="false" indentLevel="1" classfield_id="zM417aPbMqXm" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="40" parent_id="X3urtRe6zFYZ" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="X3urtRe6zFYZ" writeOutText="false" indentLevel="1" text=" Uml ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="X3urtRe6zFYZ" writeOutText="false" indentLevel="1" classfield_id="X3urtRe6zFYZ" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="X3urtRe6zFYZ" writeOutText="false" indentLevel="1" classfield_id="X3urtRe6zFYZ" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="X3urtRe6zFYZ" writeOutText="false" indentLevel="1" classfield_id="X3urtRe6zFYZ" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="X3urtRe6zFYZ" writeOutText="false" indentLevel="1" classfield_id="X3urtRe6zFYZ" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="X3urtRe6zFYZ" writeOutText="false" indentLevel="1" classfield_id="X3urtRe6zFYZ" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="40" parent_id="RKIQZpy0b40w" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="RKIQZpy0b40w" writeOutText="false" indentLevel="1" text="  ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="RKIQZpy0b40w" writeOutText="false" indentLevel="1" classfield_id="RKIQZpy0b40w" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="RKIQZpy0b40w" writeOutText="false" indentLevel="1" classfield_id="RKIQZpy0b40w" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="RKIQZpy0b40w" writeOutText="false" indentLevel="1" classfield_id="RKIQZpy0b40w" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="RKIQZpy0b40w" writeOutText="false" indentLevel="1" classfield_id="RKIQZpy0b40w" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="RKIQZpy0b40w" writeOutText="false" indentLevel="1" classfield_id="RKIQZpy0b40w" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="40" parent_id="XXV7bV1CtEA2" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="XXV7bV1CtEA2" writeOutText="false" indentLevel="1" text="  ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="XXV7bV1CtEA2" writeOutText="false" indentLevel="1" classfield_id="XXV7bV1CtEA2" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="XXV7bV1CtEA2" writeOutText="false" indentLevel="1" classfield_id="XXV7bV1CtEA2" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="XXV7bV1CtEA2" writeOutText="false" indentLevel="1" classfield_id="XXV7bV1CtEA2" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="XXV7bV1CtEA2" writeOutText="false" indentLevel="1" classfield_id="XXV7bV1CtEA2" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="XXV7bV1CtEA2" writeOutText="false" indentLevel="1" classfield_id="XXV7bV1CtEA2" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="2uqu80wuDgc3" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_2" parent_id="2uqu80wuDgc3" indentLevel="1" text=" QMap&lt; UMLEntityAttribute *, Uml :: IDType > m_pEntityAttributeIDMap;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Used to resolve forward references to UMLEntityAttributes&amp;#010;Key -> The local attribute&amp;#010;Value -> Id of the attribute it is mapping to" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_3" accessType="0" parent_id="2uqu80wuDgc3" writeOutText="false" indentLevel="1" classfield_id="2uqu80wuDgc3" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of m_pEntityAttributeIDMap&amp;#010;Used to resolve forward references to UMLEntityAttributes&amp;#010;Key -> The local attribute&amp;#010;Value -> Id of the attribute it is mapping to&amp;#010;@return the value of m_pEntityAttributeIDMap" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_4" accessType="1" parent_id="2uqu80wuDgc3" writeOutText="false" indentLevel="1" classfield_id="2uqu80wuDgc3" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of m_pEntityAttributeIDMap&amp;#010;Used to resolve forward references to UMLEntityAttributes&amp;#010;Key -> The local attribute&amp;#010;Value -> Id of the attribute it is mapping to&amp;#010;@param value the value of m_pEntityAttributeIDMap" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="INWLuNzuFnoL" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_5" parent_id="INWLuNzuFnoL" indentLevel="1" text=" UMLEntity* m_ReferencedEntity;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The UMLEntity that this foreign key references" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_6" accessType="0" parent_id="INWLuNzuFnoL" writeOutText="false" indentLevel="1" classfield_id="INWLuNzuFnoL" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of m_ReferencedEntity&amp;#010;The UMLEntity that this foreign key references&amp;#010;@return the value of m_ReferencedEntity" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_7" accessType="1" parent_id="INWLuNzuFnoL" writeOutText="false" indentLevel="1" classfield_id="INWLuNzuFnoL" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of m_ReferencedEntity&amp;#010;The UMLEntity that this foreign key references&amp;#010;@param value the value of m_ReferencedEntity" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="40" parent_id="niFyPp0QIrTZ" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="niFyPp0QIrTZ" writeOutText="false" indentLevel="1" text="  ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="niFyPp0QIrTZ" writeOutText="false" indentLevel="1" classfield_id="niFyPp0QIrTZ" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="niFyPp0QIrTZ" writeOutText="false" indentLevel="1" classfield_id="niFyPp0QIrTZ" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="niFyPp0QIrTZ" writeOutText="false" indentLevel="1" classfield_id="niFyPp0QIrTZ" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="niFyPp0QIrTZ" writeOutText="false" indentLevel="1" classfield_id="niFyPp0QIrTZ" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="niFyPp0QIrTZ" writeOutText="false" indentLevel="1" classfield_id="niFyPp0QIrTZ" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="40" parent_id="TC5j4ZHtsgBx" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="TC5j4ZHtsgBx" writeOutText="false" indentLevel="1" text=" UMLEntityAttribute ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="TC5j4ZHtsgBx" writeOutText="false" indentLevel="1" classfield_id="TC5j4ZHtsgBx" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="TC5j4ZHtsgBx" writeOutText="false" indentLevel="1" classfield_id="TC5j4ZHtsgBx" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="TC5j4ZHtsgBx" writeOutText="false" indentLevel="1" classfield_id="TC5j4ZHtsgBx" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="TC5j4ZHtsgBx" writeOutText="false" indentLevel="1" classfield_id="TC5j4ZHtsgBx" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="TC5j4ZHtsgBx" writeOutText="false" indentLevel="1" classfield_id="TC5j4ZHtsgBx" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="40" parent_id="S8jImtE85ZZl" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="S8jImtE85ZZl" writeOutText="false" indentLevel="1" text=" UMLEntityAttribute ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="S8jImtE85ZZl" writeOutText="false" indentLevel="1" classfield_id="S8jImtE85ZZl" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="S8jImtE85ZZl" writeOutText="false" indentLevel="1" classfield_id="S8jImtE85ZZl" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="S8jImtE85ZZl" writeOutText="false" indentLevel="1" classfield_id="S8jImtE85ZZl" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="S8jImtE85ZZl" writeOutText="false" indentLevel="1" classfield_id="S8jImtE85ZZl" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="S8jImtE85ZZl" writeOutText="false" indentLevel="1" classfield_id="S8jImtE85ZZl" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="40" parent_id="qdjtCHclCu4J" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="qdjtCHclCu4J" writeOutText="false" indentLevel="1" text="  ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="qdjtCHclCu4J" writeOutText="false" indentLevel="1" classfield_id="qdjtCHclCu4J" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="qdjtCHclCu4J" writeOutText="false" indentLevel="1" classfield_id="qdjtCHclCu4J" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="qdjtCHclCu4J" writeOutText="false" indentLevel="1" classfield_id="qdjtCHclCu4J" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="qdjtCHclCu4J" writeOutText="false" indentLevel="1" classfield_id="qdjtCHclCu4J" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="qdjtCHclCu4J" writeOutText="false" indentLevel="1" classfield_id="qdjtCHclCu4J" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="HjrRbtlPRxBp" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_8" parent_id="HjrRbtlPRxBp" indentLevel="1" text=" QMap&lt; UMLEntityAttribute *, UMLEntityAttribute * > m_AttributeMap;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_9" accessType="0" parent_id="HjrRbtlPRxBp" writeOutText="false" indentLevel="1" classfield_id="HjrRbtlPRxBp" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_10" accessType="1" parent_id="HjrRbtlPRxBp" writeOutText="false" indentLevel="1" classfield_id="HjrRbtlPRxBp" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="BalGn3zgWuNw" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_11" parent_id="BalGn3zgWuNw" indentLevel="1" text=" UpdateDeleteAction m_UpdateAction;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_12" accessType="0" parent_id="BalGn3zgWuNw" writeOutText="false" indentLevel="1" classfield_id="BalGn3zgWuNw" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_13" accessType="1" parent_id="BalGn3zgWuNw" writeOutText="false" indentLevel="1" classfield_id="BalGn3zgWuNw" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="CcA7cFDrw4IY" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_14" parent_id="CcA7cFDrw4IY" indentLevel="1" text=" UpdateDeleteAction m_DeleteAction;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_15" accessType="0" parent_id="CcA7cFDrw4IY" writeOutText="false" indentLevel="1" classfield_id="CcA7cFDrw4IY" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_16" accessType="1" parent_id="CcA7cFDrw4IY" writeOutText="false" indentLevel="1" classfield_id="CcA7cFDrw4IY" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="MRvaUd4dy2vR" fileExt=".h" parent_class="XTKVpWqZPBj0" id="cppheaderXTKVpWqZPBj0" fileName="UpdateDeleteAction" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UpdateDeleteAction.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:33&amp;#010;The original location of this file is UMLForeignKeyConstraint&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="i2wKCWb5BakI" id="cppheaderi2wKCWb5BakI" fileName="const_UMLForeignKeyConstraint_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        const_UMLForeignKeyConstraint_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:33&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="KiIfnwaL1Qqj" id="cppheaderKiIfnwaL1Qqj" fileName="UMLEntity_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLEntity_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:34&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="TKsgDB3rwGzW" id="cppheaderTKsgDB3rwGzW" fileName="UMLEntityAttribute_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLEntityAttribute_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:34&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="hHOzXWYh0pdd" id="cppheaderhHOzXWYh0pdd" fileName="QMap_UMLEntityAttribute_UMLEntityAttribute_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QMap_UMLEntityAttribute_UMLEntityAttribute_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:35&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="Sq0ldvmUxRAb" id="cppheaderSq0ldvmUxRAb" fileName="QMap_UMLEntityAttribute_Uml_IDType_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QMap_UMLEntityAttribute_Uml_IDType_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:36&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="FqTK0xDFYwn7" id="cppheaderFqTK0xDFYwn7" fileName="QListIterator_UMLObject_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QListIterator_UMLObject_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:36&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="MuR0yJicuobD" id="cppheaderMuR0yJicuobD" fileName="UMLObjectListIt" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLObjectListIt.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:36&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="KBNhUHJk7m25" id="cppheaderKBNhUHJk7m25" fileName="UMLObjectList" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef UMLOBJECTLIST_H&amp;#010;#define UMLOBJECTLIST_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="KBNhUHJk7m25" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class UMLObjectList&amp;#010;This sub-class adds copyInto and clone to the QPtrList&lt;UMLObject>&amp;#010;base class." />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="UMLObjectList ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
                <codeoperation tag="operation_tqMCJI01WWoV" parent_id="tqMCJI01WWoV" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_5jCtv5sCFKU7" parent_id="5jCtv5sCFKU7" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation tag="operation_Ig0PPjTGZpQq" parent_id="Ig0PPjTGZpQq" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_QBCy1co71ejv" parent_id="QBCy1co71ejv" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //UMLOBJECTLIST_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLObjectList.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:37&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield role_id="1" listClassName="" field_type="99" parent_id="0BZuxA5HLSwq" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="0BZuxA5HLSwq" writeOutText="false" indentLevel="1" text=" QList&lt; UMLObject * > ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="0BZuxA5HLSwq" writeOutText="false" indentLevel="1" classfield_id="0BZuxA5HLSwq" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="0BZuxA5HLSwq" writeOutText="false" indentLevel="1" classfield_id="0BZuxA5HLSwq" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="0BZuxA5HLSwq" writeOutText="false" indentLevel="1" classfield_id="0BZuxA5HLSwq" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="0BZuxA5HLSwq" writeOutText="false" indentLevel="1" classfield_id="0BZuxA5HLSwq" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="0BZuxA5HLSwq" writeOutText="false" indentLevel="1" classfield_id="0BZuxA5HLSwq" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="hGKDA6KV0jVw" id="cppheaderhGKDA6KV0jVw" fileName="QList_UMLObject_" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef QLIST_UMLOBJECT__H&amp;#010;#define QLIST_UMLOBJECT__H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="hGKDA6KV0jVw" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" text="Class QList_UMLObject_&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="QList_UMLObject_ ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //QLIST_UMLOBJECT__H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QList_UMLObject_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:37&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield role_id="0" listClassName="" field_type="99" parent_id="0BZuxA5HLSwq" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="0BZuxA5HLSwq" writeOutText="false" indentLevel="1" text=" UMLObjectList ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="" accessType="0" parent_id="0BZuxA5HLSwq" writeOutText="false" indentLevel="1" classfield_id="0BZuxA5HLSwq" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="1" parent_id="0BZuxA5HLSwq" writeOutText="false" indentLevel="1" classfield_id="0BZuxA5HLSwq" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="2" parent_id="0BZuxA5HLSwq" writeOutText="false" indentLevel="1" classfield_id="0BZuxA5HLSwq" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="3" parent_id="0BZuxA5HLSwq" writeOutText="false" indentLevel="1" classfield_id="0BZuxA5HLSwq" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="4" parent_id="0BZuxA5HLSwq" writeOutText="false" indentLevel="1" classfield_id="0BZuxA5HLSwq" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="6Prcve70NJsG" id="cppheader6Prcve70NJsG" fileName="UMLObjectList_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLObjectList_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:37&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="IkotSWpqh1mi" fileExt=".h" parent_class="dbndDWWVLN8R" id="cppheaderdbndDWWVLN8R" fileName="Parse_Status" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        Parse_Status.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:38&amp;#010;The original location of this file is Model_Utils&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="IkotSWpqh1mi" fileExt=".h" parent_class="IH5AzLTnQJhA" id="cppheaderIH5AzLTnQJhA" fileName="NameAndType" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef NAMEANDTYPE_H&amp;#010;#define NAMEANDTYPE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;qstring.h&quot;&amp;#010;#include &quot;parameter_direction.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="IH5AzLTnQJhA" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class NameAndType&amp;#010;Data structure filled by parseAttribute()" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock tag="tblock_0" parent_id="F2WOU8aW6AVK" indentLevel="1" text=" QString m_name;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_2" parent_id="GnaaG5lZKojJ" indentLevel="1" text=" UMLObject* m_type;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_5" parent_id="AA6aRlihnE5F" indentLevel="1" text=" Uml::Parameter_Direction m_direction;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_8" parent_id="KdlOlHiz2HZI" indentLevel="1" text=" QString m_initialValue;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="NameAndType ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
                <codeoperation tag="operation_KJre7ZxFh1p9" parent_id="KJre7ZxFh1p9" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_mWoYirn1VXPE" parent_id="mWoYirn1VXPE" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param name &amp;#010;@param type &amp;#010;@param direction &amp;#010;@param initialValue " />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="F2WOU8aW6AVK" writeOutText="false" indentLevel="1" classfield_id="F2WOU8aW6AVK" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="F2WOU8aW6AVK" writeOutText="false" indentLevel="1" classfield_id="F2WOU8aW6AVK" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_3" accessType="0" parent_id="GnaaG5lZKojJ" writeOutText="false" indentLevel="1" classfield_id="GnaaG5lZKojJ" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_4" accessType="1" parent_id="GnaaG5lZKojJ" writeOutText="false" indentLevel="1" classfield_id="GnaaG5lZKojJ" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_6" accessType="0" parent_id="AA6aRlihnE5F" writeOutText="false" indentLevel="1" classfield_id="AA6aRlihnE5F" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_7" accessType="1" parent_id="AA6aRlihnE5F" writeOutText="false" indentLevel="1" classfield_id="AA6aRlihnE5F" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_9" accessType="0" parent_id="KdlOlHiz2HZI" writeOutText="false" indentLevel="1" classfield_id="KdlOlHiz2HZI" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_10" accessType="1" parent_id="KdlOlHiz2HZI" writeOutText="false" indentLevel="1" classfield_id="KdlOlHiz2HZI" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //NAMEANDTYPE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        NameAndType.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:38&amp;#010;The original location of this file is Model_Utils&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="F2WOU8aW6AVK" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="tblock_0" parent_id="F2WOU8aW6AVK" indentLevel="1" text=" QString m_name;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="F2WOU8aW6AVK" writeOutText="false" indentLevel="1" classfield_id="F2WOU8aW6AVK" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="F2WOU8aW6AVK" writeOutText="false" indentLevel="1" classfield_id="F2WOU8aW6AVK" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="GnaaG5lZKojJ" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_2" parent_id="GnaaG5lZKojJ" indentLevel="1" text=" UMLObject* m_type;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_3" accessType="0" parent_id="GnaaG5lZKojJ" writeOutText="false" indentLevel="1" classfield_id="GnaaG5lZKojJ" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_4" accessType="1" parent_id="GnaaG5lZKojJ" writeOutText="false" indentLevel="1" classfield_id="GnaaG5lZKojJ" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="AA6aRlihnE5F" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_5" parent_id="AA6aRlihnE5F" indentLevel="1" text=" Uml::Parameter_Direction m_direction;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_6" accessType="0" parent_id="AA6aRlihnE5F" writeOutText="false" indentLevel="1" classfield_id="AA6aRlihnE5F" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_7" accessType="1" parent_id="AA6aRlihnE5F" writeOutText="false" indentLevel="1" classfield_id="AA6aRlihnE5F" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="KdlOlHiz2HZI" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_8" parent_id="KdlOlHiz2HZI" indentLevel="1" text=" QString m_initialValue;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_9" accessType="0" parent_id="KdlOlHiz2HZI" writeOutText="false" indentLevel="1" classfield_id="KdlOlHiz2HZI" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_10" accessType="1" parent_id="KdlOlHiz2HZI" writeOutText="false" indentLevel="1" classfield_id="KdlOlHiz2HZI" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="IkotSWpqh1mi" fileExt=".h" parent_class="VDVEJ1fEI8c6" id="cppheaderVDVEJ1fEI8c6" fileName="NameAndType_List" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        NameAndType_List.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:39&amp;#010;The original location of this file is Model_Utils&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="IkotSWpqh1mi" fileExt=".h" parent_class="yEgs527fUzLr" id="cppheaderyEgs527fUzLr" fileName="NameAndType_ListIt" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        NameAndType_ListIt.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:39&amp;#010;The original location of this file is Model_Utils&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="IkotSWpqh1mi" fileExt=".h" parent_class="8CeTSczvqU97" id="cppheader8CeTSczvqU97" fileName="OpDescriptor" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OPDESCRIPTOR_H&amp;#010;#define OPDESCRIPTOR_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;qstring.h&quot;&amp;#010;#include &quot;nameandtype_list.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="8CeTSczvqU97" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class OpDescriptor&amp;#010;Data structure filled by parseOperation()" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock tag="tblock_0" parent_id="TmJjsvpq7TgC" indentLevel="1" text=" QString m_name;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_2" parent_id="VnpymBnsLRJn" indentLevel="1" text=" Model_Utils::NameAndType_List m_args;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_5" parent_id="2IgslpxCZGwS" indentLevel="1" text=" UMLObject* m_pReturnType;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="OpDescriptor ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="TmJjsvpq7TgC" writeOutText="false" indentLevel="1" classfield_id="TmJjsvpq7TgC" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="TmJjsvpq7TgC" writeOutText="false" indentLevel="1" classfield_id="TmJjsvpq7TgC" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_3" accessType="0" parent_id="VnpymBnsLRJn" writeOutText="false" indentLevel="1" classfield_id="VnpymBnsLRJn" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_4" accessType="1" parent_id="VnpymBnsLRJn" writeOutText="false" indentLevel="1" classfield_id="VnpymBnsLRJn" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_6" accessType="0" parent_id="2IgslpxCZGwS" writeOutText="false" indentLevel="1" classfield_id="2IgslpxCZGwS" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_7" accessType="1" parent_id="2IgslpxCZGwS" writeOutText="false" indentLevel="1" classfield_id="2IgslpxCZGwS" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OPDESCRIPTOR_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        OpDescriptor.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:39&amp;#010;The original location of this file is Model_Utils&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="TmJjsvpq7TgC" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="tblock_0" parent_id="TmJjsvpq7TgC" indentLevel="1" text=" QString m_name;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="TmJjsvpq7TgC" writeOutText="false" indentLevel="1" classfield_id="TmJjsvpq7TgC" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="TmJjsvpq7TgC" writeOutText="false" indentLevel="1" classfield_id="TmJjsvpq7TgC" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="VnpymBnsLRJn" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_2" parent_id="VnpymBnsLRJn" indentLevel="1" text=" Model_Utils::NameAndType_List m_args;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_3" accessType="0" parent_id="VnpymBnsLRJn" writeOutText="false" indentLevel="1" classfield_id="VnpymBnsLRJn" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_4" accessType="1" parent_id="VnpymBnsLRJn" writeOutText="false" indentLevel="1" classfield_id="VnpymBnsLRJn" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="2IgslpxCZGwS" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_5" parent_id="2IgslpxCZGwS" indentLevel="1" text=" UMLObject* m_pReturnType;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_6" accessType="0" parent_id="2IgslpxCZGwS" writeOutText="false" indentLevel="1" classfield_id="2IgslpxCZGwS" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_7" accessType="1" parent_id="2IgslpxCZGwS" writeOutText="false" indentLevel="1" classfield_id="2IgslpxCZGwS" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="9jGGDxRgiGcT" id="cppheader9jGGDxRgiGcT" fileName="UMLAssociation" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLAssociation.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:39&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="PPLkrfVtvBje" id="cppheaderPPLkrfVtvBje" fileName="QList_UMLAssociation_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QList_UMLAssociation_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:39&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="ygrYuny1WCFh" id="cppheaderygrYuny1WCFh" fileName="UMLAssociationList" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLAssociationList.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:40&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="7gMqvyHKOa3D" id="cppheader7gMqvyHKOa3D" fileName="QListIterator_UMLAssociation_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QListIterator_UMLAssociation_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:40&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="DY69knngReEJ" id="cppheaderDY69knngReEJ" fileName="UMLAssociationListIt" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLAssociationListIt.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:40&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="PAKwLZbSExG9" id="cppheaderPAKwLZbSExG9" fileName="UMLCanvasObject" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef UMLCANVASOBJECT_H&amp;#010;#define UMLCANVASOBJECT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;umlobject.h&quot;&amp;#010;#include &quot;idtype.h&quot;&amp;#010;#include &quot;association_type.h&quot;&amp;#010;#include &quot;object_type.h&quot;&amp;#010;#include &quot;qstring.h&quot;&amp;#010;#include &quot;umlobjectlist.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="PAKwLZbSExG9" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class UMLCanvasObject&amp;#010;                                                                        *&amp;#010;  This program is free software; you can redistribute it and/or modify  *&amp;#010;  it under the terms of the GNU General Public License as published by  *&amp;#010;  the Free Software Foundation; either version 2 of the License, or     *&amp;#010;  (at your option) any later version.                                   *&amp;#010;                                                                        *&amp;#010;  copyright (C) 2002-2008                                               *&amp;#010;  Umbrello UML Modeller Authors &lt;umbrello-devel@kde.org>                  *&amp;#010;//**&amp;#010;This class contains the non-graphical information required for UMLObjects&amp;#010;which appear as moveable widgets on the canvas.&amp;#010;&amp;#010;This class inherits from @ref UMLObject which contains most of the&amp;#010;information.&amp;#010;It is not instantiated itself, it's just used as a super class for&amp;#010;actual model objects.&amp;#010;&amp;#010;@short Non-graphical information for a UMLCanvasObject.&amp;#010;@author Jonathan Riddell&amp;#010;@see UMLObject&amp;#010;Bugs and comments to umbrello-devel@kde.org or http://bugs.kde.org" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="UMLCanvasObject ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock tag="tblock_0" parent_id="mLq50v4hHClI" indentLevel="1" text=" UMLObjectList m_List;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="List of all the associations in this object.&amp;#010;Inheriting classes add more types of objects that are possible in this list;&amp;#010;for example, UMLClassifier adds operations, attributes, and templates.&amp;#010;&amp;#010;@todo Only a pointer to the appropriate association end object&amp;#010;      (UMLRole) should be saved here, not the entire UMLAssociation.&amp;#010;" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="mLq50v4hHClI" writeOutText="false" indentLevel="1" classfield_id="mLq50v4hHClI" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of m_List&amp;#010;List of all the associations in this object.&amp;#010;Inheriting classes add more types of objects that are possible in this list;&amp;#010;for example, UMLClassifier adds operations, attributes, and templates.&amp;#010;&amp;#010;@todo Only a pointer to the appropriate association end object&amp;#010;      (UMLRole) should be saved here, not the entire UMLAssociation.&amp;#010;&amp;#010;@return the value of m_List" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="mLq50v4hHClI" writeOutText="false" indentLevel="1" classfield_id="mLq50v4hHClI" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of m_List&amp;#010;List of all the associations in this object.&amp;#010;Inheriting classes add more types of objects that are possible in this list;&amp;#010;for example, UMLClassifier adds operations, attributes, and templates.&amp;#010;&amp;#010;@todo Only a pointer to the appropriate association end object&amp;#010;      (UMLRole) should be saved here, not the entire UMLAssociation.&amp;#010;&amp;#010;@param value the value of m_List" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation tag="operation_Z9znjtrStuof" parent_id="Z9znjtrStuof" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Emit when new association is added.&amp;#010;@param assoc Pointer to the association which has been added." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_nwG281LgBIRs" parent_id="nwG281LgBIRs" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Emit when new association is removed.&amp;#010;@param assoc Pointer to the association which has been removed." />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeoperation tag="operation_6Ih5p8o7MCqC" parent_id="6Ih5p8o7MCqC" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param name &amp;#010;@param id " />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_K0XeCNoyDFSP" parent_id="K0XeCNoyDFSP" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Standard deconstructor." />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation tag="operation_l4U3Afy13U94" parent_id="l4U3Afy13U94" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text=" Overloaded '==' operator" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_22oQLY026Wvs" parent_id="22oQLY026Wvs" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Copy the internal presentation of this object into the new&amp;#010;object." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_2BLwpYcsYOIu" parent_id="2BLwpYcsYOIu" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Adds an association end to m_List.&amp;#010;&amp;#010;@param assoc  The association to add.&amp;#010;              @todo change param type to UMLRole" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_JnFI2vDHFP1J" parent_id="JnFI2vDHFP1J" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Determine if this canvasobject has the given association.&amp;#010;&amp;#010;@param assoc   The association to check." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_FTxSqwm6CBQ1" parent_id="FTxSqwm6CBQ1" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Remove an association end from the CanvasObject.&amp;#010;&amp;#010;@param assoc   The association to remove.&amp;#010;               @todo change param type to UMLRole" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_nN3xYRz90yoT" parent_id="nN3xYRz90yoT" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Remove all association ends from the CanvasObject." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_ZWoNDIqlsIxl" parent_id="ZWoNDIqlsIxl" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Returns the number of associations for the CanvasObject.&amp;#010;This is the sum of the aggregations and compositions.&amp;#010;&amp;#010;@return  The number of associations for the Concept." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_WMaUIOxqukB5" parent_id="WMaUIOxqukB5" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Return the list of associations for the CanvasObject.&amp;#010;&amp;#010;@return   The list of associations for the CanvasObject." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_2QfwV2NzMxUd" parent_id="2QfwV2NzMxUd" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Return the subset of m_List that matches the given type.&amp;#010;&amp;#010;@param assocType   The Association_Type to match.&amp;#010;@return   The list of associations that match assocType." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_MMRjJvKcInnQ" parent_id="MMRjJvKcInnQ" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Return a list of the superclasses of this concept.&amp;#010;TODO: This overlaps with UMLClassifier::findSuperClassConcepts(),&amp;#010;      see if we can merge the two.&amp;#010;&amp;#010;@return  The list of superclasses for the concept." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_d95ZV5zrRQYj" parent_id="d95ZV5zrRQYj" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Return a list of the classes that inherit from this concept.&amp;#010;TODO: This overlaps with UMLClassifier::findSubClassConcepts(),&amp;#010;      see if we can merge the two.&amp;#010;&amp;#010;@return  The list of classes inheriting from the concept." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_wzMu5ouhxyGQ" parent_id="wzMu5ouhxyGQ" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Shorthand for getSpecificAssocs(Uml::at_Realization)&amp;#010;&amp;#010;@return  The list of realizations for the Concept." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_aRJlwM5sLRkP" parent_id="aRJlwM5sLRkP" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Shorthand for getSpecificAssocs(Uml::at_Aggregation)&amp;#010;&amp;#010;@return  The list of aggregations for the Concept." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_eE4JhWZFxt0s" parent_id="eE4JhWZFxt0s" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Shorthand for getSpecificAssocs(Uml::at_Composition)&amp;#010;&amp;#010;@return  The list of compositions for the Concept." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_KSJqJNzvZ1EE" parent_id="KSJqJNzvZ1EE" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Shorthand for getSpecificAssocs(Uml::at_Relationship)&amp;#010;&amp;#010;@return  The list of relationships for the entity." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_SKeYJWFdyYRG" parent_id="SKeYJWFdyYRG" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Find a child object with the given name.&amp;#010;&amp;#010;@param n         The name of the object to find.&amp;#010;@param t         The type to find (optional.) If not given then&amp;#010;                 any object type will match.&amp;#010;@return  Pointer to the object found; NULL if none found." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_qUTydojESOI4" parent_id="qUTydojESOI4" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Find an association.&amp;#010;&amp;#010;@param id        The id of the object to find.&amp;#010;@param considerAncestors boolean switch to consider ancestors while searching&amp;#010;@return  Pointer to the object found (NULL if not found.)" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_qa0RN9QsehUb" parent_id="qa0RN9QsehUb" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Returns a name for the new association, operation, template&amp;#010;or attribute appended with a number if the default name is&amp;#010;taken e.g. new_association, new_association_1 etc.&amp;#010;&amp;#010;@param type      The object type for which to make a name.&amp;#010;@param prefix    Optional prefix to use for the name.&amp;#010;                 If not given then uniqChildName() will choose the prefix&amp;#010;                 internally based on the object type.&amp;#010;@return  Unique name string for the Object_Type given." />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_KT7ck2G9MjEN" parent_id="KT7ck2G9MjEN" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_fs9FtB8yfmbw" parent_id="fs9FtB8yfmbw" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_hMA33NQgDZw6" parent_id="hMA33NQgDZw6" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Reimplementation of UMLObject method." />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //UMLCANVASOBJECT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLCanvasObject.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:44&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield role_id="1" listClassName="" field_type="99" parent_id="uXRI8STL1XSj" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="uXRI8STL1XSj" writeOutText="false" indentLevel="1" text=" UMLObject ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="uXRI8STL1XSj" writeOutText="false" indentLevel="1" classfield_id="uXRI8STL1XSj" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="uXRI8STL1XSj" writeOutText="false" indentLevel="1" classfield_id="uXRI8STL1XSj" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="uXRI8STL1XSj" writeOutText="false" indentLevel="1" classfield_id="uXRI8STL1XSj" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="uXRI8STL1XSj" writeOutText="false" indentLevel="1" classfield_id="uXRI8STL1XSj" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="uXRI8STL1XSj" writeOutText="false" indentLevel="1" classfield_id="uXRI8STL1XSj" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="mLq50v4hHClI" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="tblock_0" parent_id="mLq50v4hHClI" indentLevel="1" text=" UMLObjectList m_List;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="List of all the associations in this object.&amp;#010;Inheriting classes add more types of objects that are possible in this list;&amp;#010;for example, UMLClassifier adds operations, attributes, and templates.&amp;#010;&amp;#010;@todo Only a pointer to the appropriate association end object&amp;#010;      (UMLRole) should be saved here, not the entire UMLAssociation.&amp;#010;" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="mLq50v4hHClI" writeOutText="false" indentLevel="1" classfield_id="mLq50v4hHClI" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of m_List&amp;#010;List of all the associations in this object.&amp;#010;Inheriting classes add more types of objects that are possible in this list;&amp;#010;for example, UMLClassifier adds operations, attributes, and templates.&amp;#010;&amp;#010;@todo Only a pointer to the appropriate association end object&amp;#010;      (UMLRole) should be saved here, not the entire UMLAssociation.&amp;#010;&amp;#010;@return the value of m_List" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="mLq50v4hHClI" writeOutText="false" indentLevel="1" classfield_id="mLq50v4hHClI" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of m_List&amp;#010;List of all the associations in this object.&amp;#010;Inheriting classes add more types of objects that are possible in this list;&amp;#010;for example, UMLClassifier adds operations, attributes, and templates.&amp;#010;&amp;#010;@todo Only a pointer to the appropriate association end object&amp;#010;      (UMLRole) should be saved here, not the entire UMLAssociation.&amp;#010;&amp;#010;@param value the value of m_List" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="7667826" parent_id="m845GuXORfg8" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="m845GuXORfg8" writeOutText="false" indentLevel="1" text=" UMLPackage ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="" accessType="0" parent_id="m845GuXORfg8" writeOutText="false" indentLevel="1" classfield_id="m845GuXORfg8" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="1" parent_id="m845GuXORfg8" writeOutText="false" indentLevel="1" classfield_id="m845GuXORfg8" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="2" parent_id="m845GuXORfg8" writeOutText="false" indentLevel="1" classfield_id="m845GuXORfg8" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="3" parent_id="m845GuXORfg8" writeOutText="false" indentLevel="1" classfield_id="m845GuXORfg8" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="4" parent_id="m845GuXORfg8" writeOutText="false" indentLevel="1" classfield_id="m845GuXORfg8" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="neCQoOo8OLma" id="cppheaderneCQoOo8OLma" fileName="const_UMLCanvasObject_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        const_UMLCanvasObject_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:41&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="wHw0lpsEzHiu" id="cppheaderwHw0lpsEzHiu" fileName="UMLAssociation_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLAssociation_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:41&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="lfMII6RmYpgO" id="cppheaderlfMII6RmYpgO" fileName="const_Uml_Object_Type" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        const_Uml_Object_Type.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:42&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="QO1zGta3pr5w" id="cppheaderQO1zGta3pr5w" fileName="QList_UMLEntity_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QList_UMLEntity_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:43&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="qOczg3ppL7rU" id="cppheaderqOczg3ppL7rU" fileName="UMLEntityList" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLEntityList.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:43&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="AZ8KhVU8rU75" id="cppheaderAZ8KhVU8rU75" fileName="QListIterator_UMLEntity_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QListIterator_UMLEntity_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:43&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="Ng8BVC7LajJF" id="cppheaderNg8BVC7LajJF" fileName="UMLEntityListIt" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLEntityListIt.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:44&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="VfhJoi6FCcoe" id="cppheaderVfhJoi6FCcoe" fileName="UMLPackageList_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLPackageList_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:45&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="x8GcFeNw74EU" id="cppheaderx8GcFeNw74EU" fileName="UMLClassifierList_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLClassifierList_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:45&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="VQi0gFE8PQW6" id="cppheaderVQi0gFE8PQW6" fileName="UMLEntityList_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLEntityList_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:45&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="jbhAE0BeGf5B" id="cppheaderjbhAE0BeGf5B" fileName="UMLAttribute" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef UMLATTRIBUTE_H&amp;#010;#define UMLATTRIBUTE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;umlclassifierlistitem.h&quot;&amp;#010;#include &quot;idtype.h&quot;&amp;#010;#include &quot;visibility.h&quot;&amp;#010;#include &quot;qstring.h&quot;&amp;#010;#include &quot;signature_type.h&quot;&amp;#010;#include &quot;parameter_direction.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="jbhAE0BeGf5B" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class UMLAttribute&amp;#010;  This program is free software; you can redistribute it and/or modify  *&amp;#010;  it under the terms of the GNU General Public License as published by  *&amp;#010;  the Free Software Foundation; either version 2 of the License, or     *&amp;#010;  (at your option) any later version.                                   *&amp;#010;                                                                        *&amp;#010;  copyright (C) 2002-2008                                               *&amp;#010;  Umbrello UML Modeller Authors &lt;umbrello-devel@kde.org>                  *&amp;#010;//**&amp;#010;This class is used to set up information for an attribute.  This is like&amp;#010;a programming attribute.  It has a type, name, visibility and initial value.&amp;#010;&amp;#010;@short Sets up attribute information.&amp;#010;@author Paul Hensgen &lt;phensgen@techie.com>&amp;#010;@see UMLObject&amp;#010;Bugs and comments to umbrello-devel@kde.org or http://bugs.kde.org" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="UMLAttribute ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock tag="tblock_0" parent_id="bKugw52QBM4j" indentLevel="1" text=" QString m_InitialValue;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_2" parent_id="UkcJXn6ejlbZ" indentLevel="1" text=" Uml::Parameter_Direction m_ParmKind;" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="bKugw52QBM4j" writeOutText="false" indentLevel="1" classfield_id="bKugw52QBM4j" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="bKugw52QBM4j" writeOutText="false" indentLevel="1" classfield_id="bKugw52QBM4j" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_3" accessType="0" parent_id="UkcJXn6ejlbZ" writeOutText="false" indentLevel="1" classfield_id="UkcJXn6ejlbZ" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_4" accessType="1" parent_id="UkcJXn6ejlbZ" writeOutText="false" indentLevel="1" classfield_id="UkcJXn6ejlbZ" canDelete="false" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation tag="operation_Ih8KxKnvsuRD" parent_id="Ih8KxKnvsuRD" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_7QPV31uN5cDO" parent_id="7QPV31uN5cDO" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeoperation tag="operation_Ykf6DocOj6TM" parent_id="Ykf6DocOj6TM" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param parent &amp;#010;@param name &amp;#010;@param id &amp;#010;@param s &amp;#010;@param type &amp;#010;@param iv " />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_jNMW38oIMBmj" parent_id="jNMW38oIMBmj" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_oH7NclUsbKzJ" parent_id="oH7NclUsbKzJ" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation tag="operation_UjbBfOmMk7qn" parent_id="UjbBfOmMk7qn" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_qSU6XpwywBB8" parent_id="qSU6XpwywBB8" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_LkFw2CDsfgwA" parent_id="LkFw2CDsfgwA" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_ZfQKFghYOwSQ" parent_id="ZfQKFghYOwSQ" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_LdMhfXBCCbXQ" parent_id="LdMhfXBCCbXQ" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_Xw6cyEjHp3yU" parent_id="Xw6cyEjHp3yU" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_WenXwnsThw3f" parent_id="WenXwnsThw3f" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_FKgdQHAwtvSp" parent_id="FKgdQHAwtvSp" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_Um3LfVAKoOh1" parent_id="Um3LfVAKoOh1" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_PNmjB1nQmqMl" parent_id="PNmjB1nQmqMl" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_CYvwMIhqjtiF" parent_id="CYvwMIhqjtiF" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_ElnweV9U8VG5" parent_id="ElnweV9U8VG5" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param pk " />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_r9fU5iRITEC7" parent_id="r9fU5iRITEC7" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_za7WKF0COdeR" parent_id="za7WKF0COdeR" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_qoWLLuswFmb9" parent_id="qoWLLuswFmb9" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //UMLATTRIBUTE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLAttribute.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:46&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield role_id="1" listClassName="" field_type="99" parent_id="n6RRQ1F8aVBW" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="n6RRQ1F8aVBW" writeOutText="false" indentLevel="1" text=" UMLClassifierListItem ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="n6RRQ1F8aVBW" writeOutText="false" indentLevel="1" classfield_id="n6RRQ1F8aVBW" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="n6RRQ1F8aVBW" writeOutText="false" indentLevel="1" classfield_id="n6RRQ1F8aVBW" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="n6RRQ1F8aVBW" writeOutText="false" indentLevel="1" classfield_id="n6RRQ1F8aVBW" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="n6RRQ1F8aVBW" writeOutText="false" indentLevel="1" classfield_id="n6RRQ1F8aVBW" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="n6RRQ1F8aVBW" writeOutText="false" indentLevel="1" classfield_id="n6RRQ1F8aVBW" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="bKugw52QBM4j" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="tblock_0" parent_id="bKugw52QBM4j" indentLevel="1" text=" QString m_InitialValue;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="bKugw52QBM4j" writeOutText="false" indentLevel="1" classfield_id="bKugw52QBM4j" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="bKugw52QBM4j" writeOutText="false" indentLevel="1" classfield_id="bKugw52QBM4j" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="UkcJXn6ejlbZ" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock tag="_2" parent_id="UkcJXn6ejlbZ" indentLevel="1" text=" Uml::Parameter_Direction m_ParmKind;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_3" accessType="0" parent_id="UkcJXn6ejlbZ" writeOutText="false" indentLevel="1" classfield_id="UkcJXn6ejlbZ" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_4" accessType="1" parent_id="UkcJXn6ejlbZ" writeOutText="false" indentLevel="1" classfield_id="UkcJXn6ejlbZ" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="Fe3ZqpJbZKe8" id="cppheaderFe3ZqpJbZKe8" fileName="const_UMLAttribute_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        const_UMLAttribute_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:47&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="nd72NgACHhCF" id="cppheadernd72NgACHhCF" fileName="QListIterator_UMLAttribute_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QListIterator_UMLAttribute_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:48&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="HwgaEQRJEv6n" id="cppheaderHwgaEQRJEv6n" fileName="UMLAttributeListIt" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLAttributeListIt.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:48&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="yVBpOx19Y6Au" id="cppheaderyVBpOx19Y6Au" fileName="UMLAttributeList" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef UMLATTRIBUTELIST_H&amp;#010;#define UMLATTRIBUTELIST_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="yVBpOx19Y6Au" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class UMLAttributeList&amp;#010;This sub-class adds copyInto and clone to the QPtrList&lt;UMLAttribute>&amp;#010;base class." />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="UMLAttributeList ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
                <codeoperation tag="operation_D2iTUd7sXsmV" parent_id="D2iTUd7sXsmV" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_maG1S3Cc4cw0" parent_id="maG1S3Cc4cw0" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param  " />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_YdjaGea5KlQO" parent_id="YdjaGea5KlQO" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation tag="operation_iOdg1L7GAQ1n" parent_id="iOdg1L7GAQ1n" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_DdbL3a7XrKfb" parent_id="DdbL3a7XrKfb" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //UMLATTRIBUTELIST_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLAttributeList.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:49&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield role_id="1" listClassName="" field_type="99" parent_id="JGgX9nJ7ISue" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="JGgX9nJ7ISue" writeOutText="false" indentLevel="1" text=" QList&lt; UMLAttribute * > ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="JGgX9nJ7ISue" writeOutText="false" indentLevel="1" classfield_id="JGgX9nJ7ISue" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="JGgX9nJ7ISue" writeOutText="false" indentLevel="1" classfield_id="JGgX9nJ7ISue" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="JGgX9nJ7ISue" writeOutText="false" indentLevel="1" classfield_id="JGgX9nJ7ISue" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="JGgX9nJ7ISue" writeOutText="false" indentLevel="1" classfield_id="JGgX9nJ7ISue" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="JGgX9nJ7ISue" writeOutText="false" indentLevel="1" classfield_id="JGgX9nJ7ISue" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="mK62zHFFBvpP" id="cppheadermK62zHFFBvpP" fileName="QList_UMLAttribute_" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef QLIST_UMLATTRIBUTE__H&amp;#010;#define QLIST_UMLATTRIBUTE__H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="mK62zHFFBvpP" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" text="Class QList_UMLAttribute_&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="QList_UMLAttribute_ ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //QLIST_UMLATTRIBUTE__H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QList_UMLAttribute_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:49&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield role_id="0" listClassName="" field_type="99" parent_id="JGgX9nJ7ISue" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="JGgX9nJ7ISue" writeOutText="false" indentLevel="1" text=" UMLAttributeList ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="" accessType="0" parent_id="JGgX9nJ7ISue" writeOutText="false" indentLevel="1" classfield_id="JGgX9nJ7ISue" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="1" parent_id="JGgX9nJ7ISue" writeOutText="false" indentLevel="1" classfield_id="JGgX9nJ7ISue" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="2" parent_id="JGgX9nJ7ISue" writeOutText="false" indentLevel="1" classfield_id="JGgX9nJ7ISue" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="3" parent_id="JGgX9nJ7ISue" writeOutText="false" indentLevel="1" classfield_id="JGgX9nJ7ISue" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="4" parent_id="JGgX9nJ7ISue" writeOutText="false" indentLevel="1" classfield_id="JGgX9nJ7ISue" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="rgDL4yyHyekT" id="cppheaderrgDL4yyHyekT" fileName="const_UMLAttributeList_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        const_UMLAttributeList_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:49&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="VHD8leEHFvrT" id="cppheaderVHD8leEHFvrT" fileName="UMLAttributeList_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLAttributeList_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:50&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="7T5RMbmXEMrF" id="cppheader7T5RMbmXEMrF" fileName="QListIterator_UMLClassifierListItem_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QListIterator_UMLClassifierListItem_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:50&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="wymmISLCJBL6" id="cppheaderwymmISLCJBL6" fileName="UMLClassifierListItemListIt" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLClassifierListItemListIt.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:50&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="ryVv6j7CCBdW" id="cppheaderryVv6j7CCBdW" fileName="UMLClassifierListItemList" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef UMLCLASSIFIERLISTITEMLIST_H&amp;#010;#define UMLCLASSIFIERLISTITEMLIST_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="ryVv6j7CCBdW" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class UMLClassifierListItemList&amp;#010;This sub-class adds copyInto and clone to the QPtrList&lt;UMLClassifierListItem>&amp;#010;base class." />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="UMLClassifierListItemList ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
                <codeoperation tag="operation_Tlv22Yi2JZCF" parent_id="Tlv22Yi2JZCF" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_2tvtcZSEPefE" parent_id="2tvtcZSEPefE" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param other " />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_D83amgp0sFWs" parent_id="D83amgp0sFWs" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation tag="operation_cEKkrrs232Vp" parent_id="cEKkrrs232Vp" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation tag="operation_ysl0sGnESPpK" parent_id="ysl0sGnESPpK" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //UMLCLASSIFIERLISTITEMLIST_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLClassifierListItemList.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:51&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield role_id="1" listClassName="" field_type="99" parent_id="QjJjteqkbJdf" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="QjJjteqkbJdf" writeOutText="false" indentLevel="1" text=" QList&lt; UMLClassifierListItem * > ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="QjJjteqkbJdf" writeOutText="false" indentLevel="1" classfield_id="QjJjteqkbJdf" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="QjJjteqkbJdf" writeOutText="false" indentLevel="1" classfield_id="QjJjteqkbJdf" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="QjJjteqkbJdf" writeOutText="false" indentLevel="1" classfield_id="QjJjteqkbJdf" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="QjJjteqkbJdf" writeOutText="false" indentLevel="1" classfield_id="QjJjteqkbJdf" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="QjJjteqkbJdf" writeOutText="false" indentLevel="1" classfield_id="QjJjteqkbJdf" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="mO4yktDer0O7" id="cppheadermO4yktDer0O7" fileName="QList_UMLClassifierListItem_" writeOutCode="true" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef QLIST_UMLCLASSIFIERLISTITEM__H&amp;#010;#define QLIST_UMLCLASSIFIERLISTITEM__H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="mO4yktDer0O7" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" text="Class QList_UMLClassifierListItem_&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="QList_UMLClassifierListItem_ ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //QLIST_UMLCLASSIFIERLISTITEM__H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QList_UMLClassifierListItem_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:51&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield role_id="0" listClassName="" field_type="99" parent_id="QjJjteqkbJdf" writeOutMethods="false" initialValue="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="QjJjteqkbJdf" writeOutText="false" indentLevel="1" text=" UMLClassifierListItemList ;" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="" accessType="0" parent_id="QjJjteqkbJdf" writeOutText="false" indentLevel="1" classfield_id="QjJjteqkbJdf" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="1" parent_id="QjJjteqkbJdf" writeOutText="false" indentLevel="1" classfield_id="QjJjteqkbJdf" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="2" parent_id="QjJjteqkbJdf" writeOutText="false" indentLevel="1" classfield_id="QjJjteqkbJdf" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="3" parent_id="QjJjteqkbJdf" writeOutText="false" indentLevel="1" classfield_id="QjJjteqkbJdf" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="4" parent_id="QjJjteqkbJdf" writeOutText="false" indentLevel="1" classfield_id="QjJjteqkbJdf" canDelete="false" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="EBSX0NkU8dWA" id="cppheaderEBSX0NkU8dWA" fileName="const_UMLClassifierListItemList_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        const_UMLClassifierListItemList_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:51&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="MEcasIR3QSeB" id="cppheaderMEcasIR3QSeB" fileName="UMLClassifierListItemList_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLClassifierListItemList_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:51&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="4aLxhLegDPg3" id="cppheader4aLxhLegDPg3" fileName="UMLOperation" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLOperation.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:52&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="dRH6r4OWIkcy" id="cppheaderdRH6r4OWIkcy" fileName="QList_UMLOperation_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QList_UMLOperation_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:52&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="irl7IWCM6XHl" id="cppheaderirl7IWCM6XHl" fileName="UMLOperationList" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLOperationList.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:52&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="stR3G54uXMyM" id="cppheaderstR3G54uXMyM" fileName="QListIterator_UMLOperation_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QListIterator_UMLOperation_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:52&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="OKsh3VflMQtc" id="cppheaderOKsh3VflMQtc" fileName="UMLOperationListIt" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLOperationListIt.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:52&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="u3wybCkR59TM" id="cppheaderu3wybCkR59TM" fileName="UMLTemplate" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLTemplate.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:53&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="FVEkpA6EUyvX" id="cppheaderFVEkpA6EUyvX" fileName="QList_UMLTemplate_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QList_UMLTemplate_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:53&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="RYHoxAOrBLqk" id="cppheaderRYHoxAOrBLqk" fileName="UMLTemplateList" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLTemplateList.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:53&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="XYAchdwu6Aew" id="cppheaderXYAchdwu6Aew" fileName="QListIterator_UMLTemplate_" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        QListIterator_UMLTemplate_.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:53&amp;#010;The original location of this file is Datatypes&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="KkAnh5K8dZua" id="cppheaderKkAnh5K8dZua" fileName="UMLTemplateListIt" writeOutCode="true" >
     <textblocks/>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        UMLTemplateListIt.h - Copyright kde-devel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/home/kde-devel/kde/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 16 2008 at 21:03:54&amp;#010;The original location of this file is Logical_View&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
   </codegenerator>
  </codegeneration>
 </XMI.extensions>
</XMI>
